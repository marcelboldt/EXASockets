<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="ostreamwrapper_8h" kind="file" language="C++">
        <compoundname>ostreamwrapper.h</compoundname>
        <includes refid="stream_8h" local="yes">stream.h</includes>
        <includes local="no">iosfwd</includes>
        <incdepgraph>
            <node id="489">
                <label>cassert</label>
            </node>
            <node id="490">
                <label>encodings.h</label>
                <link refid="encodings_8h_source"/>
                <childnode refid="486" relation="include">
                </childnode>
            </node>
            <node id="484">
                <label>rapidjson/ostreamwrapper.h</label>
                <link refid="ostreamwrapper_8h"/>
                <childnode refid="485" relation="include">
                </childnode>
                <childnode refid="491" relation="include">
                </childnode>
            </node>
            <node id="485">
                <label>stream.h</label>
                <link refid="stream_8h_source"/>
                <childnode refid="486" relation="include">
                </childnode>
                <childnode refid="490" relation="include">
                </childnode>
            </node>
            <node id="486">
                <label>rapidjson.h</label>
                <link refid="rapidjson_8h"/>
                <childnode refid="487" relation="include">
                </childnode>
                <childnode refid="488" relation="include">
                </childnode>
                <childnode refid="489" relation="include">
                </childnode>
            </node>
            <node id="491">
                <label>iosfwd</label>
            </node>
            <node id="487">
                <label>cstdlib</label>
            </node>
            <node id="488">
                <label>cstring</label>
            </node>
        </incdepgraph>
        <innerclass refid="class_basic_o_stream_wrapper" prot="public">BasicOStreamWrapper</innerclass>
        <sectiondef kind="typedef">
            <memberdef kind="typedef" id="ostreamwrapper_8h_1aa8f833ae8c21c308bc48717f056ac4b6" prot="public"
                       static="no">
                <type><ref refid="class_basic_o_stream_wrapper" kindref="compound">BasicOStreamWrapper</ref>&lt;
                    std::ostream &gt;
                </type>
                <definition>typedef BasicOStreamWrapper&lt;std::ostream&gt; OStreamWrapper</definition>
                <argsstring></argsstring>
                <name>OStreamWrapper</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/ostreamwrapper.h" line="72" column="1" bodyfile="rapidjson/ostreamwrapper.h"
                          bodystart="72" bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="ostreamwrapper_8h_1a5784dd6d198cadc8a6c33d4690e3c99c" prot="public"
                       static="no">
                <type><ref refid="class_basic_o_stream_wrapper" kindref="compound">BasicOStreamWrapper</ref>&lt;
                    std::wostream &gt;
                </type>
                <definition>typedef BasicOStreamWrapper&lt;std::wostream&gt; WOStreamWrapper</definition>
                <argsstring></argsstring>
                <name>WOStreamWrapper</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/ostreamwrapper.h" line="73" column="1" bodyfile="rapidjson/ostreamwrapper.h"
                          bodystart="73" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>
                    source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>
                    Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);
                    <sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>
                    obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>http://opensource.org/licenses/MIT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed
                    <sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>
                    &quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>
                    implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>
                    limitations<sp/>under<sp/>the<sp/>License.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_OSTREAMWRAPPER_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_OSTREAMWRAPPER_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;stream.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__clang__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(padded)</highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc"
                         kindref="member">RAPIDJSON_NAMESPACE_BEGIN
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="29"></codeline>
            <codeline lineno="44">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StreamType&gt;
                </highlight>
            </codeline>
            <codeline lineno="45" refid="class_basic_o_stream_wrapper" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">BasicOStreamWrapper</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StreamType::char_type<sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">BasicOStreamWrapper</ref>(StreamType&amp;
                    <sp/>stream)<sp/>:<sp/>stream_(stream)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Put(Ch<sp/>c)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stream_.put(c);
                </highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Flush()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stream_.flush();
                </highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Not<sp/>implemented
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>Peek()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>Take()<sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>Tell()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>PutBegin()<sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>PutEnd(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*)<sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">BasicOStreamWrapper</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">BasicOStreamWrapper</ref>&amp;);
                </highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">BasicOStreamWrapper</ref>&amp;<sp/>
                    operator=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">BasicOStreamWrapper</ref>&amp;);
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StreamType&amp;<sp/>stream_;
                </highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">
                        BasicOStreamWrapper&lt;std::ostream&gt;</ref>
                    <sp/>
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">OStreamWrapper</ref>;
                </highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">BasicOStreamWrapper&lt;std::wostream&gt;</ref>
                    <sp/>
                    <ref refid="class_basic_o_stream_wrapper" kindref="compound">WOStreamWrapper</ref>;
                </highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__clang__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal">RAPIDJSON_DIAG_POP</highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1"
                         kindref="member">RAPIDJSON_NAMESPACE_END
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_OSTREAMWRAPPER_H_
                </highlight>
            </codeline>
        </programlisting>
        <location file="rapidjson/ostreamwrapper.h"/>
    </compounddef>
</doxygen>
