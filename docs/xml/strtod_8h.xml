<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="strtod_8h" kind="file" language="C++">
        <compoundname>strtod.h</compoundname>
        <includes refid="ieee754_8h" local="yes">ieee754.h</includes>
        <includes refid="biginteger_8h" local="yes">biginteger.h</includes>
        <includes refid="diyfp_8h" local="yes">diyfp.h</includes>
        <includes refid="pow10_8h" local="yes">pow10.h</includes>
        <includedby refid="reader_8h" local="yes">rapidjson/reader.h</includedby>
        <incdepgraph>
            <node id="413">
                <label>cassert</label>
            </node>
            <node id="416">
                <label>pow10.h</label>
                <link refid="pow10_8h_source"/>
                <childnode refid="410" relation="include">
                </childnode>
            </node>
            <node id="415">
                <label>diyfp.h</label>
                <link refid="diyfp_8h_source"/>
                <childnode refid="410" relation="include">
                </childnode>
            </node>
            <node id="414">
                <label>biginteger.h</label>
                <link refid="biginteger_8h_source"/>
                <childnode refid="410" relation="include">
                </childnode>
            </node>
            <node id="410">
                <label>../rapidjson.h</label>
                <link refid="rapidjson_8h"/>
                <childnode refid="411" relation="include">
                </childnode>
                <childnode refid="412" relation="include">
                </childnode>
                <childnode refid="413" relation="include">
                </childnode>
            </node>
            <node id="409">
                <label>ieee754.h</label>
                <link refid="ieee754_8h_source"/>
                <childnode refid="410" relation="include">
                </childnode>
            </node>
            <node id="411">
                <label>cstdlib</label>
            </node>
            <node id="408">
                <label>rapidjson/internal/strtod.h</label>
                <link refid="strtod_8h"/>
                <childnode refid="409" relation="include">
                </childnode>
                <childnode refid="414" relation="include">
                </childnode>
                <childnode refid="415" relation="include">
                </childnode>
                <childnode refid="416" relation="include">
                </childnode>
            </node>
            <node id="412">
                <label>cstring</label>
            </node>
        </incdepgraph>
        <invincdepgraph>
            <node id="421">
                <label>rapidjson/pointer.h</label>
                <link refid="pointer_8h_source"/>
                <childnode refid="422" relation="include">
                </childnode>
            </node>
            <node id="418">
                <label>rapidjson/reader.h</label>
                <link refid="reader_8h"/>
                <childnode refid="419" relation="include">
                </childnode>
            </node>
            <node id="420">
                <label>exasockets/exasockets.h</label>
                <link refid="exasockets_8h_source"/>
            </node>
            <node id="422">
                <label>rapidjson/schema.h</label>
                <link refid="schema_8h_source"/>
            </node>
            <node id="417">
                <label>rapidjson/internal/strtod.h</label>
                <link refid="strtod_8h"/>
                <childnode refid="418" relation="include">
                </childnode>
            </node>
            <node id="419">
                <label>rapidjson/document.h</label>
                <link refid="document_8h"/>
                <childnode refid="420" relation="include">
                </childnode>
                <childnode refid="421" relation="include">
                </childnode>
                <childnode refid="422" relation="include">
                </childnode>
            </node>
        </invincdepgraph>
        <innernamespace refid="namespaceinternal">internal</innernamespace>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>
                    source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>
                    Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);
                    <sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>
                    obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>http://opensource.org/licenses/MIT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed
                    <sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>
                    &quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>
                    implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>
                    limitations<sp/>under<sp/>the<sp/>License.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_STRTOD_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_STRTOD_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;ieee754.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;biginteger.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;diyfp.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;pow10.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc"
                         kindref="member">RAPIDJSON_NAMESPACE_BEGIN
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="namespaceinternal" kindref="compound">internal</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>FastPath(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>significand,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exp)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(exp<sp/>&lt;<sp/>-308)
                </highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0.0;
                </highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(exp<sp/>&gt;=<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>significand<sp/>*<sp/>internal::Pow10(exp);
                </highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>significand<sp/>/<sp/>internal::Pow10(-exp);
                </highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>StrtodNormalPrecision(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>p)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(p<sp/>&lt;<sp/>-308)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Prevent<sp/>expSum<sp/>&lt;<sp/>-308,<sp/>making<sp/>Pow10(p)<sp/>=
                    <sp/>0
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>d<sp/>=<sp/>FastPath(d,<sp/>-308);
                </highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>d<sp/>=<sp/>FastPath(d,<sp/>p<sp/>+<sp/>308);
                </highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>d<sp/>=<sp/>FastPath(d,<sp/>p);
                </highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>d;
                </highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal"><sp/>T<sp/>Min3(T<sp/>a,<sp/>T<sp/>b,<sp/>T<sp/>c)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>T<sp/>m<sp/>=<sp/>a;
                </highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(m<sp/>&gt;<sp/>b)<sp/>m<sp/>=<sp/>b;
                </highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(m<sp/>&gt;<sp/>c)<sp/>m<sp/>=<sp/>c;
                </highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>m;
                </highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>CheckWithinHalfULP(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>b,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>BigInteger&amp;<sp/>d,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>dExp)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Double<sp/>db(b);
                </highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>uint64_t<sp/>bInt<sp/>=<sp/>db.IntegerSignificand();
                </highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>bExp<sp/>=<sp/>db.IntegerExponent();
                </highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>hExp<sp/>=<sp/>bExp<sp/>-<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>dS_Exp2<sp/>=<sp/>0,<sp/>dS_Exp5<sp/>=<sp/>0,<sp/>bS_Exp2<sp/>=<sp/>0,
                    <sp/>bS_Exp5<sp/>=<sp/>0,<sp/>hS_Exp2<sp/>=<sp/>0,<sp/>hS_Exp5<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Adjust<sp/>for<sp/>decimal<sp/>exponent
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(dExp<sp/>&gt;=<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>dS_Exp2<sp/>+=<sp/>dExp;
                </highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>dS_Exp5<sp/>+=<sp/>dExp;
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>bS_Exp2<sp/>-=<sp/>dExp;
                </highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>bS_Exp5<sp/>-=<sp/>dExp;
                </highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hS_Exp2<sp/>-=<sp/>dExp;
                </highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hS_Exp5<sp/>-=<sp/>dExp;
                </highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Adjust<sp/>for<sp/>binary<sp/>exponent
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(bExp<sp/>&gt;=<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>bS_Exp2<sp/>+=<sp/>bExp;
                </highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>dS_Exp2<sp/>-=<sp/>bExp;
                </highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hS_Exp2<sp/>-=<sp/>bExp;
                </highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Adjust<sp/>for<sp/>half<sp/>ulp<sp/>exponent
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(hExp<sp/>&gt;=<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hS_Exp2<sp/>+=<sp/>hExp;
                </highlight>
            </codeline>
            <codeline lineno="85">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>dS_Exp2<sp/>-=<sp/>hExp;
                </highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>bS_Exp2<sp/>-=<sp/>hExp;
                </highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Remove<sp/>common<sp/>power<sp/>of<sp/>two<sp/>factor<sp/>from<sp/>all
                    <sp/>three<sp/>scaled<sp/>values
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>common_Exp2<sp/>=<sp/>Min3(dS_Exp2,<sp/>bS_Exp2,<sp/>hS_Exp2);
                </highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>dS_Exp2<sp/>-=<sp/>common_Exp2;
                </highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>bS_Exp2<sp/>-=<sp/>common_Exp2;
                </highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hS_Exp2<sp/>-=<sp/>common_Exp2;
                </highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BigInteger<sp/>dS<sp/>=<sp/>d;
                </highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>dS.MultiplyPow5(static_cast&lt;unsigned&gt;(dS_Exp5))<sp/>&lt;&lt;=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(dS_Exp2);</highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BigInteger<sp/>bS(bInt);
                </highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>bS.MultiplyPow5(static_cast&lt;unsigned&gt;(bS_Exp5))<sp/>&lt;&lt;=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(bS_Exp2);</highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BigInteger<sp/>hS(1);
                </highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hS.MultiplyPow5(static_cast&lt;unsigned&gt;(hS_Exp5))<sp/>&lt;&lt;=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(hS_Exp2);</highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BigInteger<sp/>delta(0);
                </highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>dS.Difference(bS,<sp/>&amp;delta);
                </highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>delta.Compare(hS);
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StrtodFast(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>p,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal">*<sp/>result)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Use<sp/>fast<sp/>path<sp/>for<sp/>string-to-double<sp/>conversion<sp/>
                    if<sp/>possible
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>see<sp/>
                    http://www.exploringbinary.com/fast-path-decimal-to-floating-point-conversion/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(p<sp/>&gt;<sp/>22
                    <sp/>
                    <sp/>&amp;&amp;<sp/>p<sp/>&lt;<sp/>22<sp/>+<sp/>16)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Fast<sp/>Path<sp/>Cases<sp/>In<sp/>Disguise
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>d<sp/>*=<sp/>internal::Pow10(p<sp/>-<sp/>22);
                </highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>p<sp/>=<sp/>22;
                </highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(p<sp/>&gt;=<sp/>-22<sp/>&amp;&amp;<sp/>p<sp/>&lt;=<sp/>22<sp/>&amp;&amp;
                    <sp/>d<sp/>&lt;=<sp/>9007199254740991.0)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>2^53<sp/>-<sp/>1
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*result<sp/>=<sp/>FastPath(d,<sp/>p);
                </highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Compute<sp/>an<sp/>approximation<sp/>and<sp/>see<sp/>if<sp/>it<sp/>is
                    <sp/>within<sp/>1/2<sp/>ULP
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StrtodDiyFp(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>decimals,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>decimalPosition,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exp,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal">*<sp/>result)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>significand<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>2^64<sp/>-<sp/>1<sp/>=<sp/>18446744073709551615,<sp/>
                    1844674407370955161<sp/>=<sp/>0x1999999999999999
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="133">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(significand
                    <sp/>
                    <sp/>&gt;
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                        RAPIDJSON_UINT64_C2</ref>(0x19999999,<sp/>0x99999999)<sp/>||
                </highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(significand<sp/>==
                    <sp/>
                    <ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                        RAPIDJSON_UINT64_C2</ref>(0x19999999,<sp/>0x99999999)<sp/>&amp;&amp;<sp/>decimals[i]<sp/>&gt;
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;5&apos;</highlight>
                <highlight class="normal">))</highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>significand<sp/>=<sp/>significand<sp/>*<sp/>10u<sp/>+
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(decimals[i]<sp/>-
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(i<sp/>&lt;<sp/>length<sp/>&amp;&amp;<sp/>decimals[i]<sp/>&gt;=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;5&apos;</highlight>
                <highlight class="normal">)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Rounding
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>significand++;
                </highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>remaining<sp/>=<sp/>length<sp/>-<sp/>i;
                </highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>kUlpShift<sp/>=<sp/>3;
                </highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>kUlp<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>kUlpShift;
                </highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>int64_t<sp/>error<sp/>=<sp/>(remaining<sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>kUlp<sp/>/<sp/>2;
                </highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp<sp/>v(significand,<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v<sp/>=<sp/>v.Normalize();
                </highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>error<sp/>&lt;&lt;=<sp/>-v.e;
                </highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>dExp<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(decimalPosition)<sp/>-<sp/>static_cast&lt;int&gt;(i)<sp/>+<sp/>exp;
                </highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>actualExp;
                </highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp<sp/>cachedPower<sp/>=<sp/>GetCachedPower10(dExp,<sp/>&amp;actualExp);
                </highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(actualExp<sp/>!=<sp/>dExp)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>DiyFp<sp/>kPow10[]<sp/>=<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                    RAPIDJSON_UINT64_C2</ref>(0xa0000000,<sp/>00000000),<sp/>-60),
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>10^1
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                    RAPIDJSON_UINT64_C2</ref>(0xc8000000,<sp/>00000000),<sp/>-57),
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>10^2
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="159">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                    RAPIDJSON_UINT64_C2</ref>(0xfa000000,<sp/>00000000),<sp/>-54),
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>10^3
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="160">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                    RAPIDJSON_UINT64_C2</ref>(0x9c400000,<sp/>00000000),<sp/>-50),
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>10^4
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="161">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                    RAPIDJSON_UINT64_C2</ref>(0xc3500000,<sp/>00000000),<sp/>-47),
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>10^5
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                    RAPIDJSON_UINT64_C2</ref>(0xf4240000,<sp/>00000000),<sp/>-44),
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>10^6
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                    RAPIDJSON_UINT64_C2</ref>(0x98968000,<sp/>00000000),<sp/>-40)
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>10^7
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>adjustment<sp/>=<sp/>dExp<sp/>-<sp/>actualExp<sp/>-<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(adjustment<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>
                    adjustment<sp/>&lt;<sp/>7);
                </highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v<sp/>=<sp/>v<sp/>*<sp/>kPow10[adjustment];
                </highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(length<sp/>+<sp/>static_cast&lt;unsigned&gt;(adjustment)&gt;<sp/>19u)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>has<sp/>more<sp/>digits<sp/>than<sp/>decimal<sp/>digits<sp/>in<sp/>
                    64-bit
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="169">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>error<sp/>+=<sp/>kUlp<sp/>/<sp/>2;
                </highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v<sp/>=<sp/>v<sp/>*<sp/>cachedPower;
                </highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>error<sp/>+=<sp/>kUlp<sp/>+<sp/>(error<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>oldExp<sp/>=<sp/>v.e;
                </highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v<sp/>=<sp/>v.Normalize();
                </highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>error<sp/>&lt;&lt;=<sp/>oldExp<sp/>-<sp/>v.e;
                </highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>effectiveSignificandSize<sp/>=<sp/>Double::EffectiveSignificandSize(64
                    <sp/>+<sp/>v.e);
                </highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>precisionSize<sp/>=<sp/>64<sp/>-<sp/>effectiveSignificandSize;
                </highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(precisionSize<sp/>+<sp/>kUlpShift<sp/>&gt;=<sp/>64)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>scaleExp<sp/>=<sp/>(precisionSize<sp/>+<sp/>kUlpShift)<sp/>-<sp/>63;
                </highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v.f<sp/>&gt;&gt;=<sp/>scaleExp;
                </highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v.e<sp/>+=<sp/>scaleExp;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>error<sp/>=<sp/>(error<sp/>&gt;&gt;<sp/>scaleExp)<sp/>+<sp/>1<sp/>+<sp/>static_cast&lt;int&gt;(kUlp);
                </highlight>
            </codeline>
            <codeline lineno="187">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>precisionSize<sp/>-=<sp/>scaleExp;
                </highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="190">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp<sp/>rounded(v.f<sp/>&gt;&gt;<sp/>precisionSize,<sp/>v.e<sp/>+<sp/>static_cast&lt;int&gt;(precisionSize));
                </highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>uint64_t<sp/>precisionBits<sp/>=<sp/>(v.f<sp/>&amp;<sp/>((uint64_t(1)
                    <sp/>&lt;&lt;<sp/>precisionSize)<sp/>-<sp/>1))<sp/>*<sp/>kUlp;
                </highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>uint64_t<sp/>halfWay<sp/>=<sp/>(uint64_t(1)<sp/>&lt;&lt;<sp/>
                    (precisionSize<sp/>-<sp/>1))<sp/>*<sp/>kUlp;
                </highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(precisionBits<sp/>&gt;=<sp/>halfWay<sp/>+<sp/>static_cast&lt;unsigned&gt;(error))
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rounded.f++;
                </highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(rounded.f<sp/>&amp;<sp/>(DiyFp::kDpHiddenBit<sp/>&lt;&lt;<sp/>1))<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>rounding<sp/>overflows<sp/>mantissa<sp/>(issue<sp/>#340)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rounded.f<sp/>&gt;&gt;=<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rounded.e++;
                </highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*result<sp/>=<sp/>rounded.ToDouble();
                </highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>halfWay<sp/>-
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(error)<sp/>&gt;=<sp/>precisionBits<sp/>||<sp/>precisionBits<sp/>&gt;=<sp/>
                    halfWay<sp/>+<sp/>static_cast&lt;unsigned&gt;(error);
                </highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>StrtodBigInteger(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>approx,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>decimals,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>decimalPosition,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exp)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>BigInteger<sp/>dInt(decimals,<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>dExp<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(decimalPosition)<sp/>-<sp/>static_cast&lt;int&gt;(length)<sp/>+<sp/>exp;
                </highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Double<sp/>a(approx);
                </highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>cmp<sp/>=<sp/>CheckWithinHalfULP(a.Value(),<sp/>dInt,<sp/>dExp);
                </highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>a.Value();
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>within<sp/>half<sp/>ULP
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(cmp<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Round<sp/>towards<sp/>even
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(a.Significand()<sp/>&amp;<sp/>1)
                </highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>a.NextPositiveDouble();
                </highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>a.Value();
                </highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>adjustment
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>a.NextPositiveDouble();
                </highlight>
            </codeline>
            <codeline lineno="222">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="223">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="224">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>StrtodFullPrecision(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>p,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>decimals,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>decimalPosition,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exp)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="225">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(d<sp/>&gt;=<sp/>0.0);
                </highlight>
            </codeline>
            <codeline lineno="226">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(length<sp/>&gt;=<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="227">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="228">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>result;
                </highlight>
            </codeline>
            <codeline lineno="229">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(StrtodFast(d,<sp/>p,<sp/>&amp;result))
                </highlight>
            </codeline>
            <codeline lineno="230">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>result;
                </highlight>
            </codeline>
            <codeline lineno="231">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="232">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Trim<sp/>leading<sp/>zeros
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="233">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(*decimals<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal"><sp/>&amp;&amp;<sp/>length<sp/>&gt;<sp/>1)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>length--;
                </highlight>
            </codeline>
            <codeline lineno="235">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>decimals++;
                </highlight>
            </codeline>
            <codeline lineno="236">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>decimalPosition--;
                </highlight>
            </codeline>
            <codeline lineno="237">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="238">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="239">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Trim<sp/>trailing<sp/>zeros
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="240">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(decimals[length<sp/>-<sp/>1]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal"><sp/>&amp;&amp;<sp/>length<sp/>&gt;<sp/>1)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="241">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>length--;
                </highlight>
            </codeline>
            <codeline lineno="242">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>decimalPosition--;
                </highlight>
            </codeline>
            <codeline lineno="243">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>exp++;
                </highlight>
            </codeline>
            <codeline lineno="244">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="245">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="246">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Trim<sp/>right-most<sp/>digits
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="247">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>kMaxDecimalDigit<sp/>=<sp/>780;
                </highlight>
            </codeline>
            <codeline lineno="248">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(static_cast&lt;int&gt;(length)<sp/>&gt;<sp/>kMaxDecimalDigit)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="249">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>delta<sp/>=<sp/>(
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(length)<sp/>-<sp/>kMaxDecimalDigit);
                </highlight>
            </codeline>
            <codeline lineno="250">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>exp<sp/>+=<sp/>delta;
                </highlight>
            </codeline>
            <codeline lineno="251">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>decimalPosition<sp/>-=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(delta);</highlight>
            </codeline>
            <codeline lineno="252">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>length<sp/>=<sp/>kMaxDecimalDigit;
                </highlight>
            </codeline>
            <codeline lineno="253">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="254">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="255">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>If<sp/>too<sp/>small,<sp/>underflow<sp/>to<sp/>zero
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="256">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">(length)<sp/>+<sp/>exp<sp/>&lt;<sp/>-324)
                </highlight>
            </codeline>
            <codeline lineno="257">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0.0;
                </highlight>
            </codeline>
            <codeline lineno="258">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="259">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(StrtodDiyFp(decimals,<sp/>length,<sp/>decimalPosition,<sp/>exp,<sp/>
                    &amp;result))
                </highlight>
            </codeline>
            <codeline lineno="260">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>result;
                </highlight>
            </codeline>
            <codeline lineno="261">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="262">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Use<sp/>approximation<sp/>from<sp/>StrtodDiyFp<sp/>and<sp/>make<sp/>
                    adjustment<sp/>with<sp/>BigInteger<sp/>comparison
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="263">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>StrtodBigInteger(result,<sp/>decimals,<sp/>length,<sp/>decimalPosition,
                    <sp/>exp);
                </highlight>
            </codeline>
            <codeline lineno="264">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="265">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="266">
                <highlight class="normal">}
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>namespace<sp/>internal
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="267">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1"
                         kindref="member">RAPIDJSON_NAMESPACE_END
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="268">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="269">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_STRTOD_
                </highlight>
            </codeline>
        </programlisting>
        <location file="rapidjson/internal/strtod.h"/>
    </compounddef>
</doxygen>
