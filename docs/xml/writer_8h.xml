<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="writer_8h" kind="file" language="C++">
        <compoundname>writer.h</compoundname>
        <includes refid="stream_8h" local="yes">stream.h</includes>
        <includes refid="stack_8h" local="yes">internal/stack.h</includes>
        <includes refid="strfunc_8h" local="yes">internal/strfunc.h</includes>
        <includes refid="dtoa_8h" local="yes">internal/dtoa.h</includes>
        <includes refid="itoa_8h" local="yes">internal/itoa.h</includes>
        <includes refid="stringbuffer_8h" local="yes">stringbuffer.h</includes>
        <includes local="no">new</includes>
        <includedby refid="exasockets_8h" local="yes">exasockets/exasockets.h</includedby>
        <includedby refid="prettywriter_8h" local="yes">rapidjson/prettywriter.h</includedby>
        <incdepgraph>
            <node id="681">
                <label>internal/strfunc.h</label>
                <link refid="strfunc_8h_source"/>
                <childnode refid="672" relation="include">
                </childnode>
            </node>
            <node id="686">
                <label>stringbuffer.h</label>
                <link refid="stringbuffer_8h_source"/>
                <childnode refid="672" relation="include">
                </childnode>
                <childnode refid="678" relation="include">
                </childnode>
            </node>
            <node id="683">
                <label>itoa.h</label>
                <link refid="itoa_8h_source"/>
                <childnode refid="673" relation="include">
                </childnode>
            </node>
            <node id="676">
                <label>cassert</label>
            </node>
            <node id="680">
                <label>swap.h</label>
                <link refid="swap_8h_source"/>
                <childnode refid="673" relation="include">
                </childnode>
            </node>
            <node id="677">
                <label>encodings.h</label>
                <link refid="encodings_8h_source"/>
                <childnode refid="673" relation="include">
                </childnode>
            </node>
            <node id="684">
                <label>diyfp.h</label>
                <link refid="diyfp_8h_source"/>
                <childnode refid="673" relation="include">
                </childnode>
            </node>
            <node id="671">
                <label>rapidjson/writer.h</label>
                <link refid="writer_8h"/>
                <childnode refid="672" relation="include">
                </childnode>
                <childnode refid="678" relation="include">
                </childnode>
                <childnode refid="681" relation="include">
                </childnode>
                <childnode refid="682" relation="include">
                </childnode>
                <childnode refid="683" relation="include">
                </childnode>
                <childnode refid="686" relation="include">
                </childnode>
                <childnode refid="687" relation="include">
                </childnode>
            </node>
            <node id="672">
                <label>stream.h</label>
                <link refid="stream_8h_source"/>
                <childnode refid="673" relation="include">
                </childnode>
                <childnode refid="677" relation="include">
                </childnode>
            </node>
            <node id="673">
                <label>rapidjson.h</label>
                <link refid="rapidjson_8h"/>
                <childnode refid="674" relation="include">
                </childnode>
                <childnode refid="675" relation="include">
                </childnode>
                <childnode refid="676" relation="include">
                </childnode>
            </node>
            <node id="682">
                <label>internal/dtoa.h</label>
                <link refid="dtoa_8h_source"/>
                <childnode refid="683" relation="include">
                </childnode>
                <childnode refid="684" relation="include">
                </childnode>
                <childnode refid="685" relation="include">
                </childnode>
            </node>
            <node id="685">
                <label>ieee754.h</label>
                <link refid="ieee754_8h_source"/>
                <childnode refid="673" relation="include">
                </childnode>
            </node>
            <node id="678">
                <label>internal/stack.h</label>
                <link refid="stack_8h_source"/>
                <childnode refid="679" relation="include">
                </childnode>
                <childnode refid="680" relation="include">
                </childnode>
            </node>
            <node id="687">
                <label>new</label>
            </node>
            <node id="674">
                <label>cstdlib</label>
            </node>
            <node id="679">
                <label>../allocators.h</label>
                <link refid="allocators_8h_source"/>
                <childnode refid="673" relation="include">
                </childnode>
            </node>
            <node id="675">
                <label>cstring</label>
            </node>
        </incdepgraph>
        <invincdepgraph>
            <node id="690">
                <label>rapidjson/prettywriter.h</label>
                <link refid="prettywriter_8h_source"/>
            </node>
            <node id="688">
                <label>rapidjson/writer.h</label>
                <link refid="writer_8h"/>
                <childnode refid="689" relation="include">
                </childnode>
                <childnode refid="690" relation="include">
                </childnode>
            </node>
            <node id="689">
                <label>exasockets/exasockets.h</label>
                <link refid="exasockets_8h_source"/>
            </node>
        </invincdepgraph>
        <innerclass refid="class_writer" prot="public">Writer</innerclass>
        <innerclass refid="struct_writer_1_1_level" prot="protected">Writer::Level</innerclass>
        <sectiondef kind="define">
            <memberdef kind="define" id="writer_8h_1a1975595e2f1dc20a2d4859f340ac88c6" prot="public" static="no">
                <name>RAPIDJSON_WRITE_DEFAULT_FLAGS</name>
                <initializer>kWriteNoFlags</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="60" column="9" bodyfile="rapidjson/writer.h" bodystart="60"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="writer_8h_1ae2c492a0a464591893d4255ea26d5e3a" prot="public" static="no">
                <name>Z16</name>
                <initializer>0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="362" column="9"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="enum">
            <memberdef kind="enum" id="writer_8h_1ab05d31260e712ed01daa80077f21e0a5" prot="public" static="no">
                <name>WriteFlag</name>
                <enumvalue id="writer_8h_1ab05d31260e712ed01daa80077f21e0a5a840478bb69a2b99ad9a47920ba176997"
                           prot="public">
                    <name>kWriteNoFlags</name>
                    <initializer>= 0</initializer>
                    <briefdescription>
                        <para>No flags are set.</para>
                    </briefdescription>
                    <detaileddescription>
                    </detaileddescription>
                </enumvalue>
                <enumvalue id="writer_8h_1ab05d31260e712ed01daa80077f21e0a5a4a41050fd3b8f133b51ced9905f839c4"
                           prot="public">
                    <name>kWriteValidateEncodingFlag</name>
                    <initializer>= 1</initializer>
                    <briefdescription>
                        <para>Validate encoding of JSON strings.</para>
                    </briefdescription>
                    <detaileddescription>
                    </detaileddescription>
                </enumvalue>
                <enumvalue id="writer_8h_1ab05d31260e712ed01daa80077f21e0a5a1ff67a91b689ae093ce241e0301c0816"
                           prot="public">
                    <name>kWriteNanAndInfFlag</name>
                    <initializer>= 2</initializer>
                    <briefdescription>
                        <para>Allow writing of Infinity, -Infinity and NaN.</para>
                    </briefdescription>
                    <detaileddescription>
                    </detaileddescription>
                </enumvalue>
                <enumvalue id="writer_8h_1ab05d31260e712ed01daa80077f21e0a5a63d8536bdc203be5310a1c58643f30b8"
                           prot="public">
                    <name>kWriteDefaultFlags</name>
                    <initializer>= RAPIDJSON_WRITE_DEFAULT_FLAGS</initializer>
                    <briefdescription>
                        <para>Default write flags. Can be customized by defining RAPIDJSON_WRITE_DEFAULT_FLAGS.</para>
                    </briefdescription>
                    <detaileddescription>
                    </detaileddescription>
                </enumvalue>
                <briefdescription>
                    <para>Combination of writeFlags.</para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="64" column="1" bodyfile="rapidjson/writer.h" bodystart="64"
                          bodyend="69"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>
                    source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>
                    Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);
                    <sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>
                    obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>http://opensource.org/licenses/MIT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed
                    <sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>
                    &quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>
                    implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>
                    limitations<sp/>under<sp/>the<sp/>License.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_WRITER_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_WRITER_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;stream.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;internal/stack.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;internal/strfunc.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;internal/dtoa.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;internal/itoa.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;stringbuffer.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;new&gt;
                </highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>placement<sp/>new
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>defined(RAPIDJSON_SIMD)<sp/>&amp;&amp;<sp/>defined(_MSC_VER)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;intrin.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#pragma<sp/>intrinsic(_BitScanForward)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>RAPIDJSON_SSE42
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;nmmintrin.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#elif<sp/>defined(RAPIDJSON_SSE2)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;emmintrin.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>_MSC_VER
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(4127)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>conditional<sp/>expression<sp/>is<sp/>constant
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__clang__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(padded)</highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(unreachable-code)</highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(c++98-compat)</highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc"
                         kindref="member">RAPIDJSON_NAMESPACE_BEGIN
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="comment">//<sp/>WriteFlag
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_WRITE_DEFAULT_FLAGS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_WRITE_DEFAULT_FLAGS<sp/>kWriteNoFlags
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="keyword">enum</highlight>
                <highlight class="normal"><sp/>WriteFlag<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kWriteNoFlags<sp/>=<sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kWriteValidateEncodingFlag<sp/>=<sp/>1,
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kWriteNanAndInfFlag<sp/>=<sp/>2,
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kWriteDefaultFlags<sp/>=<sp/>RAPIDJSON_WRITE_DEFAULT_FLAGS
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="72"></codeline>
            <codeline lineno="87">
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>OutputStream,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding<sp/>=<sp/>UTF8&lt;&gt;,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>TargetEncoding<sp/>=<sp/>UTF8&lt;&gt;,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator<sp/>=<sp/>CrtAllocator,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>writeFlags<sp/>=<sp/>kWriteDefaultFlags&gt;
                </highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_writer" kindref="compound">Writer</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding::Ch<sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>kDefaultMaxDecimalPlaces<sp/>=<sp/>324;
                </highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="95"></codeline>
            <codeline lineno="99">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="100" refid="class_writer_1af4f54830d6927d9daf5bd53bfd134dd3" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_writer_1af4f54830d6927d9daf5bd53bfd134dd3" kindref="member">Writer</ref>
                    (OutputStream&amp;<sp/>os,<sp/>StackAllocator*<sp/>stackAllocator<sp/>=<sp/>0,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>levelDepth<sp/>=<sp/>kDefaultLevelDepth)<sp/>:
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_(&amp;os),<sp/>level_stack_(stackAllocator,<sp/>levelDepth<sp/>*<sp/>sizeof(<ref
                        refid="struct_writer_1_1_level" kindref="compound">Level</ref>)),<sp/>
                    maxDecimalPlaces_(kDefaultMaxDecimalPlaces),<sp/>hasRoot_(false)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_writer_1af4f54830d6927d9daf5bd53bfd134dd3" kindref="member">Writer</ref>
                    (StackAllocator*<sp/>allocator<sp/>=<sp/>0,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>levelDepth<sp/>=<sp/>kDefaultLevelDepth)<sp/>:
                </highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_(0),<sp/>level_stack_(allocator,<sp/>levelDepth<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="struct_writer_1_1_level" kindref="compound">Level</ref>)),<sp/>
                    maxDecimalPlaces_(kDefaultMaxDecimalPlaces),<sp/>hasRoot_(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_writer_1af4f54830d6927d9daf5bd53bfd134dd3" kindref="member">Writer</ref>(<ref
                        refid="class_writer" kindref="compound">Writer</ref>&amp;&amp;<sp/>rhs)<sp/>:
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_(rhs.os_),<sp/>level_stack_(std::move(rhs.level_stack_)),<sp/>
                    maxDecimalPlaces_(rhs.maxDecimalPlaces_),<sp/>hasRoot_(rhs.hasRoot_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.os_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="115"></codeline>
            <codeline lineno="132" refid="class_writer_1a8b53e8f137f7fcf694f5500711b3f58d" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer_1a8b53e8f137f7fcf694f5500711b3f58d" kindref="member">Reset</ref>
                    (OutputStream&amp;<sp/>os)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="133">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_<sp/>=<sp/>&amp;os;
                </highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hasRoot_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>level_stack_.Clear();
                </highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="139"></codeline>
            <codeline lineno="142" refid="class_writer_1a07d74d36dd3191b06e0aab678c246157" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer_1a07d74d36dd3191b06e0aab678c246157" kindref="member">IsComplete</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>hasRoot_<sp/>&amp;&amp;<sp/>level_stack_.Empty();
                </highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>GetMaxDecimalPlaces()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>maxDecimalPlaces_;
                </highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="151"></codeline>
            <codeline lineno="171" refid="class_writer_1a58e3f94dc5af1432a8eace5ba427eca7" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer_1a58e3f94dc5af1432a8eace5ba427eca7" kindref="member">
                        SetMaxDecimalPlaces</ref>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>maxDecimalPlaces)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>maxDecimalPlaces_<sp/>=<sp/>maxDecimalPlaces;
                </highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Null()
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>Prefix(<ref
                            refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087"
                            kindref="member">kNullType</ref>);
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteNull());<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Bool(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>b)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>Prefix(b<sp/>?
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6"
                         kindref="member">kTrueType
                    </ref>
                    <sp/>:
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54"
                         kindref="member">kFalseType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteBool(b));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>Prefix(<ref
                            refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                            kindref="member">kNumberType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteInt(i));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>Prefix(<ref
                            refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                            kindref="member">kNumberType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteUint(u));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int64(int64_t<sp/>i64)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>Prefix(<ref
                            refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                            kindref="member">kNumberType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteInt64(i64));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint64(uint64_t<sp/>u64)
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>Prefix(<ref
                            refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                            kindref="member">kNumberType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteUint64(u64));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="188"></codeline>
            <codeline lineno="192" refid="class_writer_1a22a43e8a7193105deec6b808736f7a1a" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer_1a22a43e8a7193105deec6b808736f7a1a" kindref="member">Double</ref>(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>Prefix(<ref
                            refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                            kindref="member">kNumberType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteDouble(d));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RawNumber(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(str<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(void)copy;
                </highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Prefix(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                        kindref="member">kNumberType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteString(str,<sp/>length));
                </highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>String(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(str<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(void)copy;
                </highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Prefix(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                        kindref="member">kStringType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteString(str,<sp/>length));
                </highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>String(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>String(str.data(),
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    (str.size()));
                </highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartObject()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Prefix(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                        kindref="member">kObjectType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(level_stack_.template<sp/>Push&lt;Level&gt;())
                    <sp/>
                    <ref refid="struct_writer_1_1_level" kindref="compound">Level</ref>(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteStartObject();
                </highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Key(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>String(str,<sp/>length,<sp/>copy);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="222">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndObject(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>memberCount<sp/>=<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="223">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(void)memberCount;
                </highlight>
            </codeline>
            <codeline lineno="224">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(level_stack_.GetSize()<sp/>&gt;=
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="struct_writer_1_1_level" kindref="compound">Level</ref>));
                </highlight>
            </codeline>
            <codeline lineno="225">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(!level_stack_.template<sp/>Top&lt;Level&gt;()-&gt;inArray);
                </highlight>
            </codeline>
            <codeline lineno="226">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>level_stack_.template<sp/>Pop&lt;Level&gt;(1);
                </highlight>
            </codeline>
            <codeline lineno="227">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteEndObject());
                </highlight>
            </codeline>
            <codeline lineno="228">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="229">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="230">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartArray()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="231">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Prefix(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                        kindref="member">kArrayType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="232">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(level_stack_.template<sp/>Push&lt;Level&gt;())
                    <sp/>
                    <ref refid="struct_writer_1_1_level" kindref="compound">Level</ref>(
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="233">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteStartArray();
                </highlight>
            </codeline>
            <codeline lineno="234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="235">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="236">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndArray(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>elementCount<sp/>=<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="237">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(void)elementCount;
                </highlight>
            </codeline>
            <codeline lineno="238">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(level_stack_.GetSize()<sp/>&gt;=
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="struct_writer_1_1_level" kindref="compound">Level</ref>));
                </highlight>
            </codeline>
            <codeline lineno="239">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(level_stack_.template<sp/>Top&lt;Level&gt;()-&gt;inArray);
                </highlight>
            </codeline>
            <codeline lineno="240">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>level_stack_.template<sp/>Pop&lt;Level&gt;(1);
                </highlight>
            </codeline>
            <codeline lineno="241">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteEndArray());
                </highlight>
            </codeline>
            <codeline lineno="242">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="244"></codeline>
            <codeline lineno="247"></codeline>
            <codeline lineno="249" refid="class_writer_1a24eb1a72b42da5fe51ff99d9c293dd11" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer_1a24eb1a72b42da5fe51ff99d9c293dd11" kindref="member">String</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer_1a24eb1a72b42da5fe51ff99d9c293dd11" kindref="member">String</ref>(str,<sp/>
                    internal::StrLen(str));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="250">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Key(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Key(str,<sp/>internal::StrLen(str));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="251">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="253"></codeline>
            <codeline lineno="255"></codeline>
            <codeline lineno="262" refid="class_writer_1ae0d1615104e4e88040b9640e6784008a" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer_1ae0d1615104e4e88040b9640e6784008a" kindref="member">RawValue</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>json,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length,
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                    <sp/>type)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="263">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(json<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="264">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Prefix(type);
                </highlight>
            </codeline>
            <codeline lineno="265">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EndValue(WriteRawValue(json,<sp/>length));
                </highlight>
            </codeline>
            <codeline lineno="266">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="267">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="268">
                <highlight class="normal"></highlight>
                <highlight class="keyword">protected</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="270" refid="struct_writer_1_1_level" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_writer_1_1_level" kindref="compound">Level</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="271">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_writer_1_1_level" kindref="compound">Level</ref>(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>inArray_)<sp/>:
                    <sp/>
                    <ref refid="struct_writer_1_1_level_1a4a09e5fda49d0d57b2adc041203f244f" kindref="member">
                        valueCount</ref>(0),
                    <sp/>
                    <ref refid="struct_writer_1_1_level_1aa009a2d675e98757c2997072aad78789" kindref="member">
                        inArray</ref>(inArray_)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="272" refid="struct_writer_1_1_level_1a4a09e5fda49d0d57b2adc041203f244f" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_writer_1_1_level_1a4a09e5fda49d0d57b2adc041203f244f" kindref="member">
                        valueCount</ref>;
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="273" refid="struct_writer_1_1_level_1aa009a2d675e98757c2997072aad78789" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_writer_1_1_level_1aa009a2d675e98757c2997072aad78789" kindref="member">
                        inArray</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="274">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="275">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="276">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>kDefaultLevelDepth<sp/>=<sp/>32;
                </highlight>
            </codeline>
            <codeline lineno="277">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="278">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteNull()
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="279">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>4);
                </highlight>
            </codeline>
            <codeline lineno="280">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="281">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="282">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="283">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteBool(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>b)
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="284">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(b)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="285">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>4);
                </highlight>
            </codeline>
            <codeline lineno="286">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="287">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="288">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="289">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>5);
                </highlight>
            </codeline>
            <codeline lineno="290">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;f&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="291">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="292">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="293">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="294">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="295">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteInt(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="296">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>buffer[11];
                </highlight>
            </codeline>
            <codeline lineno="297">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::i32toa(i,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="298">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>static_cast&lt;size_t&gt;(end<sp/>-<sp/>buffer));
                </highlight>
            </codeline>
            <codeline lineno="299">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>p<sp/>=<sp/>buffer;<sp/>p<sp/>!=<sp/>end;<sp/>++p)
                </highlight>
            </codeline>
            <codeline lineno="300">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>static_cast&lt;typename<sp/>TargetEncoding::Ch&gt;(*p));
                </highlight>
            </codeline>
            <codeline lineno="301">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="302">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="303">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="304">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteUint(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="305">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>buffer[10];
                </highlight>
            </codeline>
            <codeline lineno="306">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::u32toa(u,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="307">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>static_cast&lt;size_t&gt;(end<sp/>-<sp/>buffer));
                </highlight>
            </codeline>
            <codeline lineno="308">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>p<sp/>=<sp/>buffer;<sp/>p<sp/>!=<sp/>end;<sp/>++p)
                </highlight>
            </codeline>
            <codeline lineno="309">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>static_cast&lt;typename<sp/>TargetEncoding::Ch&gt;(*p));
                </highlight>
            </codeline>
            <codeline lineno="310">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="311">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="312">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="313">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteInt64(int64_t<sp/>i64)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="314">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>buffer[21];
                </highlight>
            </codeline>
            <codeline lineno="315">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::i64toa(i64,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="316">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>static_cast&lt;size_t&gt;(end<sp/>-<sp/>buffer));
                </highlight>
            </codeline>
            <codeline lineno="317">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>p<sp/>=<sp/>buffer;<sp/>p<sp/>!=<sp/>end;<sp/>++p)
                </highlight>
            </codeline>
            <codeline lineno="318">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>static_cast&lt;typename<sp/>TargetEncoding::Ch&gt;(*p));
                </highlight>
            </codeline>
            <codeline lineno="319">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="320">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="321">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="322">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteUint64(uint64_t<sp/>u64)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="323">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>buffer[20];
                </highlight>
            </codeline>
            <codeline lineno="324">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::u64toa(u64,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="325">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>static_cast&lt;size_t&gt;(end<sp/>-<sp/>buffer));
                </highlight>
            </codeline>
            <codeline lineno="326">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>p<sp/>=<sp/>buffer;<sp/>p<sp/>!=<sp/>end;<sp/>++p)
                </highlight>
            </codeline>
            <codeline lineno="327">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>static_cast&lt;typename<sp/>TargetEncoding::Ch&gt;(*p));
                </highlight>
            </codeline>
            <codeline lineno="328">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="329">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="330">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="331">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteDouble(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="332">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="classinternal_1_1_double" kindref="compound">
                    internal::Double</ref>(d).IsNanOrInf())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="333">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(writeFlags<sp/>&amp;<sp/>kWriteNanAndInfFlag))
                </highlight>
            </codeline>
            <codeline lineno="334">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="335">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="classinternal_1_1_double" kindref="compound">
                    internal::Double</ref>(d).IsNan())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="336">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>3);
                </highlight>
            </codeline>
            <codeline lineno="337">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;N&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;N&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="338">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="339">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="340">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="classinternal_1_1_double" kindref="compound">
                    internal::Double</ref>(d).Sign())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="341">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>9);
                </highlight>
            </codeline>
            <codeline lineno="342">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="343">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="344">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="345">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>8);
                </highlight>
            </codeline>
            <codeline lineno="346">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;I&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;f&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="347">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;y&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="348">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="349">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="350">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="351">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>buffer[25];
                </highlight>
            </codeline>
            <codeline lineno="352">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::dtoa(d,<sp/>buffer,<sp/>maxDecimalPlaces_);
                </highlight>
            </codeline>
            <codeline lineno="353">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>static_cast&lt;size_t&gt;(end<sp/>-<sp/>buffer));
                </highlight>
            </codeline>
            <codeline lineno="354">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>p<sp/>=<sp/>buffer;<sp/>p<sp/>!=<sp/>end;<sp/>++p)
                </highlight>
            </codeline>
            <codeline lineno="355">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>static_cast&lt;typename<sp/>TargetEncoding::Ch&gt;(*p));
                </highlight>
            </codeline>
            <codeline lineno="356">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="357">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="358">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="359">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteString(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length)
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="360">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>TargetEncoding::Ch<sp/>hexDigits[16]<sp/>=<sp/>{
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;1&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;2&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;3&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;4&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;5&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;6&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;7&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;8&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;9&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;A&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;B&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;C&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;D&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;E&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;F&apos;</highlight>
                <highlight class="normal"><sp/>};
                </highlight>
            </codeline>
            <codeline lineno="361">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>escape[256]<sp/>=<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="362">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>Z16<sp/>0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="363">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//0
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>1
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>2
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>3
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>4
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>5
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>6
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>7
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>8
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>9
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>A
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>B
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>C
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>D
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>E
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>F
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="364">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;b&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;f&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>00
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="365">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>10
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="366">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>20
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="367">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Z16,<sp/>Z16,
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>30~4F
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="368">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                    <sp/>
                    <sp/>0,
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>50
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="369">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Z16,<sp/>Z16,<sp/>Z16,<sp/>Z16,<sp/>Z16,<sp/>Z16,<sp/>Z16,<sp/>Z16,<sp/>Z16,<sp/>Z16
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>60~FF
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="370">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#undef<sp/>Z16
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="371">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="372">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="373">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(TargetEncoding::supportUnicode)
                </highlight>
            </codeline>
            <codeline lineno="374">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>2<sp/>+<sp/>length<sp/>*<sp/>6);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>&quot;\uxxxx...&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="375">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="376">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>2<sp/>+<sp/>length<sp/>*<sp/>12);
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>&quot;\uxxxx\uyyyy...&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="377">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="378">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="379">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;SourceEncoding&gt;</ref>
                    <sp/>is(str);
                </highlight>
            </codeline>
            <codeline lineno="380">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(ScanWriteUnescapedString(is,<sp/>length))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="381">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch<sp/>c<sp/>=<sp/>is.Peek();
                </highlight>
            </codeline>
            <codeline lineno="382">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!TargetEncoding::supportUnicode<sp/>&amp;&amp;<sp/>static_cast&lt;unsigned&gt;(c)
                    <sp/>&gt;=<sp/>0x80)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="383">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Unicode<sp/>escaping
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="384">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>codepoint;
                </highlight>
            </codeline>
            <codeline lineno="385">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                        kindref="member">RAPIDJSON_UNLIKELY</ref>(!SourceEncoding::Decode(is,<sp/>&amp;codepoint)))
                </highlight>
            </codeline>
            <codeline lineno="386">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="387">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="388">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="389">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(codepoint<sp/>&lt;=<sp/>0xD7FF<sp/>||<sp/>(codepoint<sp/>&gt;=<sp/>
                    0xE000<sp/>&amp;&amp;<sp/>codepoint<sp/>&lt;=<sp/>0xFFFF))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="390">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(codepoint<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="391">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(codepoint<sp/>&gt;&gt;
                    <sp/>
                    <sp/>8)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="392">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(codepoint<sp/>&gt;&gt;
                    <sp/>
                    <sp/>4)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="393">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(codepoint
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="394">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="395">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="396">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(codepoint<sp/>&gt;=<sp/>0x010000<sp/>&amp;&amp;<sp/>
                    codepoint<sp/>&lt;=<sp/>0x10FFFF);
                </highlight>
            </codeline>
            <codeline lineno="397">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Surrogate<sp/>pair
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="398">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>s<sp/>=<sp/>codepoint<sp/>-<sp/>0x010000;
                </highlight>
            </codeline>
            <codeline lineno="399">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>lead<sp/>=<sp/>(s<sp/>&gt;&gt;<sp/>10)<sp/>+<sp/>0xD800;
                </highlight>
            </codeline>
            <codeline lineno="400">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>trail<sp/>=<sp/>(s<sp/>&amp;<sp/>0x3FF)<sp/>+<sp/>0xDC00;
                </highlight>
            </codeline>
            <codeline lineno="401">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(lead<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="402">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(lead<sp/>&gt;&gt;
                    <sp/>
                    <sp/>8)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="403">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(lead<sp/>&gt;&gt;
                    <sp/>
                    <sp/>4)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="404">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(lead
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="405">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="406">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="407">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(trail<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="408">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(trail<sp/>&gt;&gt;
                    <sp/>
                    <sp/>8)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="409">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(trail<sp/>&gt;&gt;
                    <sp/>
                    <sp/>4)<sp/>&amp;<sp/>15]);
                </highlight>
            </codeline>
            <codeline lineno="410">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[(trail
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>)<sp/>&amp;<sp/>15]);
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="411">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="412">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="413">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Ch)<sp/>==<sp/>1<sp/>||<sp/>static_cast&lt;unsigned&gt;(c)<sp/>&lt;<sp/>256)
                    <sp/>&amp;&amp;
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                         kindref="member">RAPIDJSON_UNLIKELY</ref>(escape[static_cast&lt;unsigned<sp/>char&gt;(c)]))
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="414">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>is.Take();
                </highlight>
            </codeline>
            <codeline lineno="415">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="416">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>static_cast&lt;typename<sp/>TargetEncoding::Ch&gt;(escape[static_cast&lt;unsigned
                    <sp/>char&gt;(c)]));
                </highlight>
            </codeline>
            <codeline lineno="417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(escape[static_cast&lt;unsigned<sp/>char&gt;(c)]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="418">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="419">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="420">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[static_cast&lt;unsigned<sp/>char&gt;(c)<sp/>&gt;&gt;<sp/>4]);
                </highlight>
            </codeline>
            <codeline lineno="421">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>hexDigits[static_cast&lt;unsigned<sp/>char&gt;(c)<sp/>&amp;<sp/>0xF]);
                </highlight>
            </codeline>
            <codeline lineno="422">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="423">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="424">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                        kindref="member">RAPIDJSON_UNLIKELY</ref>(!(writeFlags<sp/>&amp;<sp/>kWriteValidateEncodingFlag
                    <sp/>?
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="425">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_transcoder" kindref="compound">Transcoder&lt;SourceEncoding, TargetEncoding&gt;::Validate</ref>
                    (is,<sp/>*os_)<sp/>:
                </highlight>
            </codeline>
            <codeline lineno="426">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_transcoder" kindref="compound">Transcoder&lt;SourceEncoding, TargetEncoding&gt;::TranscodeUnsafe</ref>
                    (is,<sp/>*os_))))
                </highlight>
            </codeline>
            <codeline lineno="427">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="428">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="429">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="430">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="431">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="432">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="433">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>ScanWriteUnescapedString(<ref refid="struct_generic_string_stream"
                                                                             kindref="compound">GenericStringStream&lt;SourceEncoding&gt;</ref>&amp;
                    <sp/>is,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="434">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1"
                         kindref="member">RAPIDJSON_LIKELY</ref>(is.Tell()<sp/>&lt;<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="435">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="436">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="437">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteStartObject()<sp/>{<sp/>os_-&gt;Put(
                </highlight>
                <highlight class="charliteral">&apos;{&apos;</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="438">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteEndObject()
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>os_-&gt;Put(
                </highlight>
                <highlight class="charliteral">&apos;}&apos;</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="439">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteStartArray()
                    <sp/>
                    <sp/>{<sp/>os_-&gt;Put(
                </highlight>
                <highlight class="charliteral">&apos;[&apos;</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="440">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteEndArray()
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>os_-&gt;Put(
                </highlight>
                <highlight class="charliteral">&apos;]&apos;</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="441">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="442">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteRawValue(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>json,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="443">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="444">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="445">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(json[i]<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="446">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,<sp/>json[i]);
                </highlight>
            </codeline>
            <codeline lineno="447">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="448">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="449">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="450">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="451">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Prefix(
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                    <sp/>type)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="452">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(void)type;
                </highlight>
            </codeline>
            <codeline lineno="453">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1"
                        kindref="member">RAPIDJSON_LIKELY</ref>(level_stack_.GetSize()<sp/>!=<sp/>0))<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>this<sp/>value<sp/>is<sp/>not<sp/>at<sp/>root
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="454">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_writer_1_1_level" kindref="compound">Level</ref>*<sp/>level<sp/>=<sp/>
                    level_stack_.template<sp/>Top&lt;Level&gt;();
                </highlight>
            </codeline>
            <codeline lineno="455">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(level-&gt;
                    <ref refid="struct_writer_1_1_level_1a4a09e5fda49d0d57b2adc041203f244f" kindref="member">
                        valueCount
                    </ref>
                    <sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="456">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(level-&gt;<ref
                        refid="struct_writer_1_1_level_1aa009a2d675e98757c2997072aad78789" kindref="member">
                    inArray</ref>)
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="457">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_-&gt;Put(
                </highlight>
                <highlight class="charliteral">&apos;,&apos;</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>add<sp/>comma<sp/>if<sp/>it<sp/>is<sp/>not<sp/>the<sp/>first<sp/>
                    element<sp/>in<sp/>array
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="458">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>in<sp/>object
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="459">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_-&gt;Put((level-&gt;
                    <ref refid="struct_writer_1_1_level_1a4a09e5fda49d0d57b2adc041203f244f" kindref="member">
                        valueCount
                    </ref>
                    <sp/>%<sp/>2<sp/>==<sp/>0)<sp/>?
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;,&apos;</highlight>
                <highlight class="normal"><sp/>:
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;:&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="460">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="461">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!level-&gt;
                    <ref refid="struct_writer_1_1_level_1aa009a2d675e98757c2997072aad78789" kindref="member">inArray
                    </ref>
                    <sp/>&amp;&amp;<sp/>level-&gt;
                    <ref refid="struct_writer_1_1_level_1a4a09e5fda49d0d57b2adc041203f244f" kindref="member">
                        valueCount
                    </ref>
                    <sp/>%<sp/>2<sp/>==<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="462">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(type<sp/>==
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                         kindref="member">kStringType</ref>);
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>in<sp/>object,<sp/>then<sp/>even<sp/>number<sp/>
                    should<sp/>be<sp/>a<sp/>name
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="463">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>level-&gt;<ref refid="struct_writer_1_1_level_1a4a09e5fda49d0d57b2adc041203f244f"
                                        kindref="member">valueCount</ref>++;
                </highlight>
            </codeline>
            <codeline lineno="464">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="465">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="466">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(!hasRoot_);
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Should<sp/>only<sp/>has<sp/>one<sp/>and<sp/>only<sp/>one<sp/>root.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="467">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hasRoot_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="468">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="469">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="470">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="471">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Flush<sp/>the<sp/>value<sp/>if<sp/>it<sp/>is<sp/>the<sp/>top<sp/>level
                    <sp/>one.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="472">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndValue(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>ret)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="473">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                        kindref="member">RAPIDJSON_UNLIKELY</ref>(level_stack_.Empty()))
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>end<sp/>of<sp/>json<sp/>text
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="474">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_-&gt;Flush();
                </highlight>
            </codeline>
            <codeline lineno="475">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ret;
                </highlight>
            </codeline>
            <codeline lineno="476">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="477">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="478">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>OutputStream*<sp/>os_;
                </highlight>
            </codeline>
            <codeline lineno="479">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;StackAllocator&gt;</ref>
                    <sp/>level_stack_;
                </highlight>
            </codeline>
            <codeline lineno="480">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>maxDecimalPlaces_;
                </highlight>
            </codeline>
            <codeline lineno="481">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>hasRoot_;
                </highlight>
            </codeline>
            <codeline lineno="482">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="483">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="484">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Prohibit<sp/>copy<sp/>constructor<sp/>&amp;<sp/>assignment<sp/>
                    operator.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="485">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_writer_1af4f54830d6927d9daf5bd53bfd134dd3" kindref="member">Writer</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer" kindref="compound">Writer</ref>&amp;);
                </highlight>
            </codeline>
            <codeline lineno="486">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_writer" kindref="compound">Writer</ref>&amp;<sp/>operator=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer" kindref="compound">Writer</ref>&amp;);
                </highlight>
            </codeline>
            <codeline lineno="487">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="488">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="489">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Full<sp/>specialization<sp/>for<sp/>StringStream<sp/>to<sp/>prevent
                    <sp/>memory<sp/>copying
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="490">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="491">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;&gt;</highlight>
            </codeline>
            <codeline lineno="492">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer" kindref="compound">Writer&lt;StringBuffer&gt;::WriteInt</ref>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="493">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*buffer<sp/>=<sp/>os_-&gt;Push(11);
                </highlight>
            </codeline>
            <codeline lineno="494">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::i32toa(i,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="495">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_-&gt;Pop(static_cast&lt;size_t&gt;(11<sp/>-<sp/>(end<sp/>-<sp/>buffer)));
                </highlight>
            </codeline>
            <codeline lineno="496">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="497">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="498">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="499">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;&gt;</highlight>
            </codeline>
            <codeline lineno="500">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer" kindref="compound">Writer&lt;StringBuffer&gt;::WriteUint</ref>(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="501">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*buffer<sp/>=<sp/>os_-&gt;Push(10);
                </highlight>
            </codeline>
            <codeline lineno="502">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::u32toa(u,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="503">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_-&gt;Pop(static_cast&lt;size_t&gt;(10<sp/>-<sp/>(end<sp/>-<sp/>buffer)));
                </highlight>
            </codeline>
            <codeline lineno="504">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="505">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="506">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="507">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;&gt;</highlight>
            </codeline>
            <codeline lineno="508">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer" kindref="compound">Writer&lt;StringBuffer&gt;::WriteInt64</ref>(int64_t
                    <sp/>i64)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="509">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*buffer<sp/>=<sp/>os_-&gt;Push(21);
                </highlight>
            </codeline>
            <codeline lineno="510">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::i64toa(i64,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="511">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_-&gt;Pop(static_cast&lt;size_t&gt;(21<sp/>-<sp/>(end<sp/>-<sp/>buffer)));
                </highlight>
            </codeline>
            <codeline lineno="512">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="513">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="514">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="515">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;&gt;</highlight>
            </codeline>
            <codeline lineno="516">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer" kindref="compound">Writer&lt;StringBuffer&gt;::WriteUint64</ref>(uint64_t
                    <sp/>u)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="517">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*buffer<sp/>=<sp/>os_-&gt;Push(20);
                </highlight>
            </codeline>
            <codeline lineno="518">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::u64toa(u,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="519">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_-&gt;Pop(static_cast&lt;size_t&gt;(20<sp/>-<sp/>(end<sp/>-<sp/>buffer)));
                </highlight>
            </codeline>
            <codeline lineno="520">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="521">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="522">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="523">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;&gt;</highlight>
            </codeline>
            <codeline lineno="524">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer" kindref="compound">Writer&lt;StringBuffer&gt;::WriteDouble</ref>(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="525">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="classinternal_1_1_double" kindref="compound">
                    internal::Double</ref>(d).IsNanOrInf())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="526">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Note:<sp/>This<sp/>code<sp/>path<sp/>can<sp/>only<sp/>be<sp/>reached
                    <sp/>if<sp/>(RAPIDJSON_WRITE_DEFAULT_FLAGS<sp/>&amp;<sp/>kWriteNanAndInfFlag).
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="527">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(kWriteDefaultFlags<sp/>&amp;<sp/>kWriteNanAndInfFlag))
                </highlight>
            </codeline>
            <codeline lineno="528">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="529">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="classinternal_1_1_double" kindref="compound">
                    internal::Double</ref>(d).IsNan())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="530">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>3);
                </highlight>
            </codeline>
            <codeline lineno="531">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;N&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;N&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="532">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="533">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="534">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="classinternal_1_1_double" kindref="compound">
                    internal::Double</ref>(d).Sign())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="535">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>9);
                </highlight>
            </codeline>
            <codeline lineno="536">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="537">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="538">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="539">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutReserve(*os_,<sp/>8);
                </highlight>
            </codeline>
            <codeline lineno="540">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;I&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;f&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="541">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">);<sp/>PutUnsafe(*os_,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;y&apos;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="542">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="543">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="544">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="545">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*buffer<sp/>=<sp/>os_-&gt;Push(25);
                </highlight>
            </codeline>
            <codeline lineno="546">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::dtoa(d,<sp/>buffer,<sp/>maxDecimalPlaces_);
                </highlight>
            </codeline>
            <codeline lineno="547">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_-&gt;Pop(static_cast&lt;size_t&gt;(25<sp/>-<sp/>(end<sp/>-<sp/>buffer)));
                </highlight>
            </codeline>
            <codeline lineno="548">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="549">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="550">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="551">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>defined(RAPIDJSON_SSE2)<sp/>||<sp/>defined(RAPIDJSON_SSE42)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="552">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;&gt;</highlight>
            </codeline>
            <codeline lineno="553">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_writer" kindref="compound">
                        Writer&lt;StringBuffer&gt;::ScanWriteUnescapedString</ref>(<ref
                        refid="struct_generic_string_stream" kindref="compound">StringStream</ref>&amp;<sp/>is,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="554">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(length<sp/>&lt;<sp/>16)
                </highlight>
            </codeline>
            <codeline lineno="555">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1"
                         kindref="member">RAPIDJSON_LIKELY</ref>(is.Tell()<sp/>&lt;<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="556">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="557">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1"
                        kindref="member">RAPIDJSON_LIKELY</ref>(is.Tell()<sp/>&lt;<sp/>length))
                </highlight>
            </codeline>
            <codeline lineno="558">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="559">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="560">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>p<sp/>=<sp/>is.<ref
                        refid="struct_generic_string_stream_1aeda813798e3f2d6bfdac86afc11b6b80" kindref="member">
                    src_</ref>;
                </highlight>
            </codeline>
            <codeline lineno="561">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>is.
                    <ref refid="struct_generic_string_stream_1a3c86ef1e1f0655028cb8a3afce11ee4f" kindref="member">
                        head_
                    </ref>
                    <sp/>+<sp/>length;
                </highlight>
            </codeline>
            <codeline lineno="562">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>nextAligned<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">reinterpret_cast&lt;</highlight>
                <highlight class="keyword">const
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">((</highlight>
                <highlight class="keyword">reinterpret_cast&lt;</highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(p)<sp/>+<sp/>15)<sp/>&amp;
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(~15));</highlight>
            </codeline>
            <codeline lineno="563">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>endAligned<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">reinterpret_cast&lt;</highlight>
                <highlight class="keyword">const
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keyword">reinterpret_cast&lt;</highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(end)<sp/>&amp;<sp/>static_cast&lt;size_t&gt;(~15));
                </highlight>
            </codeline>
            <codeline lineno="564">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(nextAligned<sp/>&gt;<sp/>end)
                </highlight>
            </codeline>
            <codeline lineno="565">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="566">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="567">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(p<sp/>!=<sp/>nextAligned)
                </highlight>
            </codeline>
            <codeline lineno="568">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*p<sp/>&lt;<sp/>0x20<sp/>||<sp/>*p<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal"><sp/>||<sp/>*p<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="569">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>is.
                    <ref refid="struct_generic_string_stream_1aeda813798e3f2d6bfdac86afc11b6b80" kindref="member">src_
                    </ref>
                    <sp/>=<sp/>p;
                </highlight>
            </codeline>
            <codeline lineno="570">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1"
                         kindref="member">RAPIDJSON_LIKELY</ref>(is.Tell()<sp/>&lt;<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="571">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="572">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="573">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>os_-&gt;PutUnsafe(*p++);
                </highlight>
            </codeline>
            <codeline lineno="574">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="575">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>The<sp/>rest<sp/>of<sp/>string<sp/>using<sp/>SIMD
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="576">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>dquote[16]<sp/>=<sp/>{
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\&quot;&apos;</highlight>
                <highlight class="normal"><sp/>};
                </highlight>
            </codeline>
            <codeline lineno="577">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>bslash[16]<sp/>=<sp/>{
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\\&apos;</highlight>
                <highlight class="normal"><sp/>};
                </highlight>
            </codeline>
            <codeline lineno="578">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>space[16]
                    <sp/>
                    <sp/>=<sp/>{<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>
                    0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19,<sp/>0x19<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="579">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>__m128i<sp/>dq<sp/>=<sp/>_mm_loadu_si128(reinterpret_cast&lt;const<sp/>
                    __m128i<sp/>*&gt;(&amp;dquote[0]));
                </highlight>
            </codeline>
            <codeline lineno="580">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>__m128i<sp/>bs<sp/>=<sp/>_mm_loadu_si128(reinterpret_cast&lt;const<sp/>
                    __m128i<sp/>*&gt;(&amp;bslash[0]));
                </highlight>
            </codeline>
            <codeline lineno="581">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>__m128i<sp/>sp<sp/>=<sp/>_mm_loadu_si128(reinterpret_cast&lt;const<sp/>
                    __m128i<sp/>*&gt;(&amp;space[0]));
                </highlight>
            </codeline>
            <codeline lineno="582">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="583">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(;<sp/>p<sp/>!=<sp/>endAligned;<sp/>p<sp/>+=<sp/>16)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="584">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>__m128i<sp/>s<sp/>=<sp/>_mm_load_si128(reinterpret_cast&lt;const<sp/>
                    __m128i<sp/>*&gt;(p));
                </highlight>
            </codeline>
            <codeline lineno="585">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>__m128i<sp/>t1<sp/>=<sp/>_mm_cmpeq_epi8(s,<sp/>dq);
                </highlight>
            </codeline>
            <codeline lineno="586">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>__m128i<sp/>t2<sp/>=<sp/>_mm_cmpeq_epi8(s,<sp/>bs);
                </highlight>
            </codeline>
            <codeline lineno="587">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>__m128i<sp/>t3<sp/>=<sp/>_mm_cmpeq_epi8(_mm_max_epu8(s,<sp/>sp),<sp/>sp);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>s<sp/>&lt;<sp/>0x20<sp/>&lt;=&gt;<sp/>max(s,<sp/>0x19)<sp/>==<sp/>0x19
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="588">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>__m128i<sp/>x<sp/>=<sp/>_mm_or_si128(_mm_or_si128(t1,<sp/>t2),<sp/>t3);
                </highlight>
            </codeline>
            <codeline lineno="589">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">short</highlight>
                <highlight class="normal"><sp/>r<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">short</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(_mm_movemask_epi8(x));</highlight>
            </codeline>
            <codeline lineno="590">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                        kindref="member">RAPIDJSON_UNLIKELY</ref>(r<sp/>!=<sp/>0))<sp/>{
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>some<sp/>of<sp/>characters<sp/>is<sp/>escaped
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="591">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len;
                </highlight>
            </codeline>
            <codeline lineno="592">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>_MSC_VER
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>//<sp/>Find<sp/>the<sp/>index<sp/>of<sp/>first<sp/>escaped
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="593">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">long</highlight>
                <highlight class="normal"><sp/>offset;
                </highlight>
            </codeline>
            <codeline lineno="594">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_BitScanForward(&amp;offset,<sp/>r);
                </highlight>
            </codeline>
            <codeline lineno="595">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>len<sp/>=<sp/>offset;
                </highlight>
            </codeline>
            <codeline lineno="596">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="597">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>len<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(__builtin_ffs(r)<sp/>-<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="598">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="599">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>q<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">reinterpret_cast&lt;</highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(os_-&gt;PushUnsafe(len));</highlight>
            </codeline>
            <codeline lineno="600">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="601">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>q[i]<sp/>=<sp/>p[i];
                </highlight>
            </codeline>
            <codeline lineno="602">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="603">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>p<sp/>+=<sp/>len;
                </highlight>
            </codeline>
            <codeline lineno="604">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="605">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="606">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_mm_storeu_si128(reinterpret_cast&lt;__m128i<sp/>*&gt;(os_-&gt;PushUnsafe(16)),<sp/>s);
                </highlight>
            </codeline>
            <codeline lineno="607">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="608">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="609">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>is.
                    <ref refid="struct_generic_string_stream_1aeda813798e3f2d6bfdac86afc11b6b80" kindref="member">src_
                    </ref>
                    <sp/>=<sp/>p;
                </highlight>
            </codeline>
            <codeline lineno="610">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga5dc14176a9e71ace282404b0bcda57a1"
                         kindref="member">RAPIDJSON_LIKELY</ref>(is.Tell()<sp/>&lt;<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="611">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="612">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>defined(RAPIDJSON_SSE2)<sp/>||<sp/>
                    defined(RAPIDJSON_SSE42)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="613">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="614">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1"
                         kindref="member">RAPIDJSON_NAMESPACE_END
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="615">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="616">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>_MSC_VER
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="617">
                <highlight class="normal">RAPIDJSON_DIAG_POP</highlight>
            </codeline>
            <codeline lineno="618">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="619">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="620">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__clang__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="621">
                <highlight class="normal">RAPIDJSON_DIAG_POP</highlight>
            </codeline>
            <codeline lineno="622">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="623">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="624">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_RAPIDJSON_H_
                </highlight>
            </codeline>
        </programlisting>
        <location file="rapidjson/writer.h"/>
    </compounddef>
</doxygen>
