<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="dtoa_8h" kind="file" language="C++">
        <compoundname>dtoa.h</compoundname>
        <includes refid="itoa_8h" local="yes">itoa.h</includes>
        <includes refid="diyfp_8h" local="yes">diyfp.h</includes>
        <includes refid="ieee754_8h" local="yes">ieee754.h</includes>
        <includedby refid="writer_8h" local="yes">rapidjson/writer.h</includedby>
        <incdepgraph>
            <node id="303">
                <label>itoa.h</label>
                <link refid="itoa_8h_source"/>
                <childnode refid="304" relation="include">
                </childnode>
            </node>
            <node id="307">
                <label>cassert</label>
            </node>
            <node id="308">
                <label>diyfp.h</label>
                <link refid="diyfp_8h_source"/>
                <childnode refid="304" relation="include">
                </childnode>
            </node>
            <node id="304">
                <label>../rapidjson.h</label>
                <link refid="rapidjson_8h"/>
                <childnode refid="305" relation="include">
                </childnode>
                <childnode refid="306" relation="include">
                </childnode>
                <childnode refid="307" relation="include">
                </childnode>
            </node>
            <node id="302">
                <label>rapidjson/internal/dtoa.h</label>
                <link refid="dtoa_8h"/>
                <childnode refid="303" relation="include">
                </childnode>
                <childnode refid="308" relation="include">
                </childnode>
                <childnode refid="309" relation="include">
                </childnode>
            </node>
            <node id="309">
                <label>ieee754.h</label>
                <link refid="ieee754_8h_source"/>
                <childnode refid="304" relation="include">
                </childnode>
            </node>
            <node id="305">
                <label>cstdlib</label>
            </node>
            <node id="306">
                <label>cstring</label>
            </node>
        </incdepgraph>
        <invincdepgraph>
            <node id="313">
                <label>rapidjson/prettywriter.h</label>
                <link refid="prettywriter_8h_source"/>
            </node>
            <node id="311">
                <label>rapidjson/writer.h</label>
                <link refid="writer_8h_source"/>
                <childnode refid="312" relation="include">
                </childnode>
                <childnode refid="313" relation="include">
                </childnode>
            </node>
            <node id="310">
                <label>rapidjson/internal/dtoa.h</label>
                <link refid="dtoa_8h"/>
                <childnode refid="311" relation="include">
                </childnode>
            </node>
            <node id="312">
                <label>exasockets/exasockets.h</label>
                <link refid="exasockets_8h_source"/>
            </node>
        </invincdepgraph>
        <innernamespace refid="namespaceinternal">internal</innernamespace>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>
                    source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>
                    Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);
                    <sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>
                    obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>http://opensource.org/licenses/MIT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed
                    <sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>
                    &quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>
                    implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>
                    limitations<sp/>under<sp/>the<sp/>License.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>C++<sp/>header-only<sp/>implementation<sp/>of
                    <sp/>Grisu2<sp/>algorithm<sp/>from<sp/>the<sp/>publication:
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Loitsch,<sp/>Florian.<sp/>&quot;Printing<sp/>floating-point<sp/>
                    numbers<sp/>quickly<sp/>and<sp/>accurately<sp/>with
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>integers.&quot;<sp/>ACM<sp/>Sigplan<sp/>Notices<sp/>45.6<sp/>(2010):
                    <sp/>233-243.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_DTOA_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_DTOA_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;itoa.h&quot;
                </highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>GetDigitsLut()
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;diyfp.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;ieee754.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc"
                         kindref="member">RAPIDJSON_NAMESPACE_BEGIN
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="namespaceinternal" kindref="compound">internal</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__GNUC__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(array-bounds)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>some<sp/>gcc<sp/>versions<sp/>generate<sp/>wrong<sp/>warnings<sp/>
                    https://gcc.gnu.org/bugzilla/show_bug.cgi?id=59124
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>GrisuRound(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>buffer,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>len,<sp/>uint64_t<sp/>delta,<sp/>uint64_t<sp/>rest,<sp/>uint64_t<sp/>
                    ten_kappa,<sp/>uint64_t<sp/>wp_w)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(rest<sp/>&lt;<sp/>wp_w<sp/>&amp;&amp;<sp/>delta<sp/>-<sp/>rest<sp/>&gt;=
                    <sp/>ten_kappa<sp/>&amp;&amp;
                </highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(rest<sp/>+<sp/>ten_kappa<sp/>&lt;<sp/>wp_w<sp/>||
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>wp_w<sp/>-<sp/>rest<sp/>&gt;<sp/>rest<sp/>+<sp/>ten_kappa<sp/>-<sp/>wp_w))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[len<sp/>-<sp/>1]--;
                </highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rest<sp/>+=<sp/>ten_kappa;
                </highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>CountDecimalDigit32(uint32_t<sp/>n)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Simple<sp/>pure<sp/>C++<sp/>implementation<sp/>was<sp/>faster<sp/>than
                    <sp/>__builtin_clz<sp/>version<sp/>in<sp/>this<sp/>situation.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(n<sp/>&lt;<sp/>10)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(n<sp/>&lt;<sp/>100)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>2;
                </highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(n<sp/>&lt;<sp/>1000)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>3;
                </highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(n<sp/>&lt;<sp/>10000)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>4;
                </highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(n<sp/>&lt;<sp/>100000)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>5;
                </highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(n<sp/>&lt;<sp/>1000000)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>6;
                </highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(n<sp/>&lt;<sp/>10000000)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>7;
                </highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(n<sp/>&lt;<sp/>100000000)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>8;
                </highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Will<sp/>not<sp/>reach<sp/>10<sp/>digits<sp/>in<sp/>DigitGen()
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//if<sp/>(n<sp/>&lt;<sp/>1000000000)<sp/>return<sp/>9;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//return<sp/>10;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>9;
                </highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>DigitGen(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>DiyFp&amp;<sp/>W,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>DiyFp&amp;<sp/>Mp,<sp/>uint64_t<sp/>delta,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>buffer,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">*<sp/>len,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">*<sp/>K)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>uint32_t<sp/>kPow10[]<sp/>=<sp/>{<sp/>1,<sp/>10,<sp/>100,<sp/>1000,<sp/>
                    10000,<sp/>100000,<sp/>1000000,<sp/>10000000,<sp/>100000000,<sp/>1000000000<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>DiyFp<sp/>one(uint64_t(1)<sp/>&lt;&lt;<sp/>-Mp.e,<sp/>Mp.e);
                </highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>DiyFp<sp/>wp_w<sp/>=<sp/>Mp<sp/>-<sp/>W;
                </highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint32_t<sp/>p1<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">uint32_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(Mp.f<sp/>&gt;&gt;<sp/>-one.e);
                </highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>p2<sp/>=<sp/>Mp.f<sp/>&amp;<sp/>(one.f<sp/>-<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>kappa<sp/>=<sp/>CountDecimalDigit32(p1);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>kappa<sp/>in<sp/>[0,<sp/>9]
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*len<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(kappa<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint32_t<sp/>d<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal"><sp/>(kappa)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>9:<sp/>d<sp/>=<sp/>p1<sp/>/
                    <sp/>
                    <sp/>100000000;<sp/>p1<sp/>%=
                    <sp/>
                    <sp/>100000000;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>8:<sp/>d<sp/>=<sp/>p1<sp/>/
                    <sp/>
                    <sp/>
                    <sp/>10000000;<sp/>p1<sp/>%=
                    <sp/>
                    <sp/>
                    <sp/>10000000;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>7:<sp/>d<sp/>=<sp/>p1<sp/>/
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>1000000;<sp/>p1<sp/>%=
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>1000000;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>6:<sp/>d<sp/>=<sp/>p1<sp/>/
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>100000;<sp/>p1<sp/>%=
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>100000;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>5:<sp/>d<sp/>=<sp/>p1<sp/>/
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>10000;<sp/>p1<sp/>%=
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>10000;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>4:<sp/>d<sp/>=<sp/>p1<sp/>/
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>1000;<sp/>p1<sp/>%=
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>1000;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>3:<sp/>d<sp/>=<sp/>p1<sp/>/
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>100;<sp/>p1<sp/>%=
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>100;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>2:<sp/>d<sp/>=<sp/>p1<sp/>/
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>10;<sp/>p1<sp/>%=
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>10;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>1:<sp/>d<sp/>=<sp/>p1;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>p1<sp/>=
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>0;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">default</highlight>
                <highlight class="normal">:;</highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(d<sp/>||<sp/>*len)
                </highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[(*len)++]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal"><sp/>+
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(d));</highlight>
            </codeline>
            <codeline lineno="85">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kappa--;
                </highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>tmp<sp/>=<sp/>(
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">uint64_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(p1)<sp/>&lt;&lt;<sp/>-one.e)<sp/>+<sp/>p2;
                </highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(tmp<sp/>&lt;=<sp/>delta)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*K<sp/>+=<sp/>kappa;
                </highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GrisuRound(buffer,<sp/>*len,<sp/>delta,<sp/>tmp,<sp/>static_cast&lt;uint64_t&gt;(kPow10[kappa])
                    <sp/>&lt;&lt;<sp/>-one.e,<sp/>wp_w.f);
                </highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>kappa<sp/>=<sp/>0
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(;;)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>p2<sp/>*=<sp/>10;
                </highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>delta<sp/>*=<sp/>10;
                </highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>d<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(p2<sp/>&gt;&gt;<sp/>-one.e);
                </highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(d<sp/>||<sp/>*len)
                </highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[(*len)++]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal"><sp/>+<sp/>d);
                </highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>p2<sp/>&amp;=<sp/>one.f<sp/>-<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kappa--;
                </highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(p2<sp/>&lt;<sp/>delta)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*K<sp/>+=<sp/>kappa;
                </highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>index<sp/>=<sp/>-
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(kappa);</highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GrisuRound(buffer,<sp/>*len,<sp/>delta,<sp/>p2,<sp/>one.f,<sp/>wp_w.f<sp/>*<sp/>(index<sp/>&lt;
                    <sp/>9<sp/>?<sp/>kPow10[-static_cast&lt;int&gt;(kappa)]<sp/>:<sp/>0));
                </highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Grisu2(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>value,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>buffer,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">*<sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">*<sp/>K)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>DiyFp<sp/>v(value);
                </highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp<sp/>w_m,<sp/>w_p;
                </highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v.NormalizedBoundaries(&amp;w_m,<sp/>&amp;w_p);
                </highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>DiyFp<sp/>c_mk<sp/>=<sp/>GetCachedPower(w_p.e,<sp/>K);
                </highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>DiyFp<sp/>W<sp/>=<sp/>v.Normalize()<sp/>*<sp/>c_mk;
                </highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp<sp/>Wp<sp/>=<sp/>w_p<sp/>*<sp/>c_mk;
                </highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DiyFp<sp/>Wm<sp/>=<sp/>w_m<sp/>*<sp/>c_mk;
                </highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Wm.f++;
                </highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Wp.f--;
                </highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DigitGen(W,<sp/>Wp,<sp/>Wp.f<sp/>-<sp/>Wm.f,<sp/>buffer,<sp/>length,<sp/>K);
                </highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>WriteExponent(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>K,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>buffer)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(K<sp/>&lt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>K<sp/>=<sp/>-K;
                </highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(K<sp/>&gt;=<sp/>100)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="133">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal"><sp/>+
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(K<sp/>/<sp/>100));
                </highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>K<sp/>%=<sp/>100;
                </highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>d<sp/>=<sp/>GetDigitsLut()<sp/>+<sp/>K<sp/>*<sp/>2;
                </highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=<sp/>d[0];
                </highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=<sp/>d[1];
                </highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(K<sp/>&gt;=<sp/>10)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>d<sp/>=<sp/>GetDigitsLut()<sp/>+<sp/>K<sp/>*<sp/>2;
                </highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=<sp/>d[0];
                </highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=<sp/>d[1];
                </highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal"><sp/>+
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(K));</highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>buffer;
                </highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>Prettify(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>buffer,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>k,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>maxDecimalPlaces)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>kk<sp/>=<sp/>length<sp/>+<sp/>k;
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>10^(kk-1)<sp/>&lt;=<sp/>v<sp/>&lt;<sp/>10^kk
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(0<sp/>&lt;=<sp/>k<sp/>&amp;&amp;<sp/>kk<sp/>&lt;=<sp/>21)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>1234e7<sp/>-&gt;<sp/>12340000000
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>length;<sp/>i<sp/>&lt;<sp/>kk;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[i]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[kk]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;.&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[kk<sp/>+<sp/>1]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="159">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;buffer[kk<sp/>+<sp/>2];
                </highlight>
            </codeline>
            <codeline lineno="160">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="161">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(0<sp/>&lt;<sp/>kk<sp/>&amp;&amp;<sp/>kk<sp/>&lt;=<sp/>21)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>1234e-2<sp/>-&gt;<sp/>12.34
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memmove(&amp;buffer[kk<sp/>+<sp/>1],<sp/>&amp;buffer[kk],<sp/>static_cast&lt;size_t&gt;(length
                    <sp/>-<sp/>kk));
                </highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[kk]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;.&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(0<sp/>&gt;<sp/>k<sp/>+<sp/>maxDecimalPlaces)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>When<sp/>maxDecimalPlaces<sp/>=<sp/>2,<sp/>1.2345<sp/>-&gt;<sp/>1.23,
                    <sp/>1.102<sp/>-&gt;<sp/>1.1
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Remove<sp/>extra<sp/>trailing<sp/>zeros<sp/>(at<sp/>least<sp/>one)
                    <sp/>after<sp/>truncation.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>kk<sp/>+<sp/>maxDecimalPlaces;<sp/>i<sp/>&gt;<sp/>kk<sp/>+
                    <sp/>1;<sp/>i--)
                </highlight>
            </codeline>
            <codeline lineno="169">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(buffer[i]<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;buffer[i<sp/>+<sp/>1];
                </highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;buffer[kk<sp/>+<sp/>2];
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Reserve<sp/>one<sp/>zero
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;buffer[length<sp/>+<sp/>1];
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(-6<sp/>&lt;<sp/>kk<sp/>&amp;&amp;<sp/>kk<sp/>&lt;=<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>1234e-6<sp/>-&gt;<sp/>0.001234
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>offset<sp/>=<sp/>2<sp/>-<sp/>kk;
                </highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memmove(&amp;buffer[offset],<sp/>&amp;buffer[0],<sp/>static_cast&lt;size_t&gt;(length));
                </highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[0]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[1]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;.&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>offset;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[i]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(length<sp/>-<sp/>kk<sp/>&gt;<sp/>maxDecimalPlaces)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>When<sp/>maxDecimalPlaces<sp/>=<sp/>2,<sp/>0.123<sp/>-&gt;<sp/>0.12,
                    <sp/>0.102<sp/>-&gt;<sp/>0.1
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Remove<sp/>extra<sp/>trailing<sp/>zeros<sp/>(at<sp/>least<sp/>one)
                    <sp/>after<sp/>truncation.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="187">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>maxDecimalPlaces<sp/>+<sp/>1;<sp/>i<sp/>&gt;<sp/>2;<sp/>i--)
                </highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(buffer[i]<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;buffer[i<sp/>+<sp/>1];
                </highlight>
            </codeline>
            <codeline lineno="190">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;buffer[3];
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Reserve<sp/>one<sp/>zero
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;buffer[length<sp/>+<sp/>offset];
                </highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(kk<sp/>&lt;<sp/>-maxDecimalPlaces)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Truncate<sp/>to<sp/>zero
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[0]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[1]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;.&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[2]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;buffer[3];
                </highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(length<sp/>==<sp/>1)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>1e30
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[1]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteExponent(kk<sp/>-<sp/>1,<sp/>&amp;buffer[2]);
                </highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>1234e30<sp/>-&gt;<sp/>1.234e33
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memmove(&amp;buffer[2],<sp/>&amp;buffer[1],<sp/>static_cast&lt;size_t&gt;(length<sp/>-
                    <sp/>1));
                </highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[1]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;.&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[length<sp/>+<sp/>1]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteExponent(kk<sp/>-<sp/>1,<sp/>&amp;buffer[0<sp/>+<sp/>length<sp/>+
                    <sp/>2]);
                </highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>dtoa(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>value,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>buffer,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>maxDecimalPlaces<sp/>=<sp/>324)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(maxDecimalPlaces<sp/>&gt;=<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Double<sp/>d(value);
                </highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(d.IsZero())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(d.Sign())
                </highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal">;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>-0.0,<sp/>Issue<sp/>#289
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="222">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[0]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="223">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[1]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;.&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="224">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>buffer[2]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="225">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;buffer[3];
                </highlight>
            </codeline>
            <codeline lineno="226">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="227">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="228">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(value<sp/>&lt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="229">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;-&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="230">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>value<sp/>=<sp/>-value;
                </highlight>
            </codeline>
            <codeline lineno="231">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="232">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>length,<sp/>K;
                </highlight>
            </codeline>
            <codeline lineno="233">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Grisu2(value,<sp/>buffer,<sp/>&amp;length,<sp/>&amp;K);
                </highlight>
            </codeline>
            <codeline lineno="234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Prettify(buffer,<sp/>length,<sp/>K,<sp/>maxDecimalPlaces);
                </highlight>
            </codeline>
            <codeline lineno="235">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="236">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="237">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="238">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__GNUC__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="239">
                <highlight class="normal">RAPIDJSON_DIAG_POP</highlight>
            </codeline>
            <codeline lineno="240">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="241">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="242">
                <highlight class="normal">}
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>namespace<sp/>internal
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="243">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1"
                         kindref="member">RAPIDJSON_NAMESPACE_END
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="244">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="245">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_DTOA_
                </highlight>
            </codeline>
        </programlisting>
        <location file="rapidjson/internal/dtoa.h"/>
    </compounddef>
</doxygen>
