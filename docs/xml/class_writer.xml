<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="class_writer" kind="class" language="C++" prot="public">
        <compoundname>Writer</compoundname>
        <derivedcompoundref refid="class_pretty_writer" prot="public" virt="non-virtual">PrettyWriter&lt; OutputStream,
            SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</derivedcompoundref>
        <includes refid="writer_8h" local="no">writer.h</includes>
        <innerclass refid="struct_writer_1_1_level" prot="protected">Writer::Level</innerclass>
        <templateparamlist>
            <param>
                <type>typename</type>
                <declname>OutputStream</declname>
                <defname>OutputStream</defname>
            </param>
            <param>
                <type>typename</type>
                <declname>SourceEncoding</declname>
                <defname>SourceEncoding</defname>
                <defval><ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt;
                </defval>
            </param>
            <param>
                <type>typename</type>
                <declname>TargetEncoding</declname>
                <defname>TargetEncoding</defname>
                <defval><ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt;
                </defval>
            </param>
            <param>
                <type>typename</type>
                <declname>StackAllocator</declname>
                <defname>StackAllocator</defname>
                <defval>
                    <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>
                </defval>
            </param>
            <param>
                <type>unsigned</type>
                <declname>writeFlags</declname>
                <defname>writeFlags</defname>
                <defval>kWriteDefaultFlags</defval>
            </param>
        </templateparamlist>
        <sectiondef kind="user-defined">
            <header>Implementation of Handler</header>
            <description>
                <para>
                    <simplesect kind="see">
                        <para>Handler</para>
                    </simplesect>
                </para>
            </description>
            <memberdef kind="function" id="class_writer_1af700ed03c8810d48a4aaa3c5baeaf26c" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Null
                </definition>
                <argsstring>()</argsstring>
                <name>Null</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="180" column="1" bodyfile="rapidjson/writer.h" bodystart="180"
                          bodyend="180"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1ad7491f4dedb02e7456b240b23ef8c1ad" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Bool
                </definition>
                <argsstring>(bool b)</argsstring>
                <name>Bool</name>
                <param>
                    <type>bool</type>
                    <declname>b</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="181" column="1" bodyfile="rapidjson/writer.h" bodystart="181"
                          bodyend="181"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1ad471415aa7741e732bab0bcfbb9522a8" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Int
                </definition>
                <argsstring>(int i)</argsstring>
                <name>Int</name>
                <param>
                    <type>int</type>
                    <declname>i</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="182" column="1" bodyfile="rapidjson/writer.h" bodystart="182"
                          bodyend="182"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a5fb0c3228f89f6f9bef15f3e6e6f1739" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Uint
                </definition>
                <argsstring>(unsigned u)</argsstring>
                <name>Uint</name>
                <param>
                    <type>unsigned</type>
                    <declname>u</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="183" column="1" bodyfile="rapidjson/writer.h" bodystart="183"
                          bodyend="183"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a4144d7086ed9d3d807c373de242bde45" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Int64
                </definition>
                <argsstring>(int64_t i64)</argsstring>
                <name>Int64</name>
                <param>
                    <type>int64_t</type>
                    <declname>i64</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="184" column="1" bodyfile="rapidjson/writer.h" bodystart="184"
                          bodyend="184"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a55bb9f286ecdaf4cdb07bddb02e0cb2d" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Uint64
                </definition>
                <argsstring>(uint64_t u64)</argsstring>
                <name>Uint64</name>
                <param>
                    <type>uint64_t</type>
                    <declname>u64</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="185" column="1" bodyfile="rapidjson/writer.h" bodystart="185"
                          bodyend="185"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a22a43e8a7193105deec6b808736f7a1a" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Double
                </definition>
                <argsstring>(double d)</argsstring>
                <name>Double</name>
                <param>
                    <type>double</type>
                    <declname>d</declname>
                </param>
                <briefdescription>
                    <para>Writes the given <computeroutput>double</computeroutput> value to the stream.
                    </para>
                </briefdescription>
                <detaileddescription>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>d</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The value to be written.</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>Whether it is succeed.</para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="192" column="1" bodyfile="rapidjson/writer.h" bodystart="192"
                          bodyend="192"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1ad462dc606fddea0f34fc0e190c3bdaee" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::RawNumber
                </definition>
                <argsstring>(const Ch *str, SizeType length, bool copy=false)</argsstring>
                <name>RawNumber</name>
                <param>
                    <type>const Ch *</type>
                    <declname>str</declname>
                </param>
                <param>
                    <type>
                        <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    </type>
                    <declname>length</declname>
                </param>
                <param>
                    <type>bool</type>
                    <declname>copy</declname>
                    <defval>false</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="194" column="1" bodyfile="rapidjson/writer.h" bodystart="194"
                          bodyend="199"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a8b4dc44f471403a83c9959575796ceab" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::String
                </definition>
                <argsstring>(const Ch *str, SizeType length, bool copy=false)</argsstring>
                <name>String</name>
                <param>
                    <type>const Ch *</type>
                    <declname>str</declname>
                </param>
                <param>
                    <type>
                        <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    </type>
                    <declname>length</declname>
                </param>
                <param>
                    <type>bool</type>
                    <declname>copy</declname>
                    <defval>false</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="201" column="1" bodyfile="rapidjson/writer.h" bodystart="201"
                          bodyend="206"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1aec3200b2fc80ec87d1c37f775256b2e1" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::StartObject
                </definition>
                <argsstring>()</argsstring>
                <name>StartObject</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="214" column="1" bodyfile="rapidjson/writer.h" bodystart="214"
                          bodyend="218"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a19096d2ccb90761f63ab1240337bf90a" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Key
                </definition>
                <argsstring>(const Ch *str, SizeType length, bool copy=false)</argsstring>
                <name>Key</name>
                <param>
                    <type>const Ch *</type>
                    <declname>str</declname>
                </param>
                <param>
                    <type>
                        <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    </type>
                    <declname>length</declname>
                </param>
                <param>
                    <type>bool</type>
                    <declname>copy</declname>
                    <defval>false</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="220" column="1" bodyfile="rapidjson/writer.h" bodystart="220"
                          bodyend="220"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a0771a565261564c27676b7300b11f2b5" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::EndObject
                </definition>
                <argsstring>(SizeType memberCount=0)</argsstring>
                <name>EndObject</name>
                <param>
                    <type>
                        <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    </type>
                    <declname>memberCount</declname>
                    <defval>0</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="222" column="1" bodyfile="rapidjson/writer.h" bodystart="222"
                          bodyend="228"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a38715785194b42cd67ba5dd52bf7967e" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::StartArray
                </definition>
                <argsstring>()</argsstring>
                <name>StartArray</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="230" column="1" bodyfile="rapidjson/writer.h" bodystart="230"
                          bodyend="234"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1ac88d533095591a878500b63b351d4013" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::EndArray
                </definition>
                <argsstring>(SizeType elementCount=0)</argsstring>
                <name>EndArray</name>
                <param>
                    <type>
                        <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    </type>
                    <declname>elementCount</declname>
                    <defval>0</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="236" column="1" bodyfile="rapidjson/writer.h" bodystart="236"
                          bodyend="242"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="user-defined">
            <header>Convenience extensions</header>
            <memberdef kind="function" id="class_writer_1a24eb1a72b42da5fe51ff99d9c293dd11" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::String
                </definition>
                <argsstring>(const Ch *str)</argsstring>
                <name>String</name>
                <param>
                    <type>const Ch *</type>
                    <declname>str</declname>
                </param>
                <briefdescription>
                    <para>Simpler but slower overload.</para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="249" column="1" bodyfile="rapidjson/writer.h" bodystart="249"
                          bodyend="249"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a8a40514efe951801df6896a596ed8563" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Key
                </definition>
                <argsstring>(const Ch *str)</argsstring>
                <name>Key</name>
                <param>
                    <type>const Ch *</type>
                    <declname>str</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="250" column="1" bodyfile="rapidjson/writer.h" bodystart="250"
                          bodyend="250"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="public-type">
            <memberdef kind="typedef" id="class_writer_1ab08bff5fd2daec65f4a78779ca3d2139" prot="public" static="no">
                <type>SourceEncoding::Ch</type>
                <definition>typedef SourceEncoding::Ch Writer&lt; OutputStream, SourceEncoding, TargetEncoding,
                    StackAllocator, writeFlags &gt;::Ch
                </definition>
                <argsstring></argsstring>
                <name>Ch</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="90" column="1" bodyfile="rapidjson/writer.h" bodystart="90"
                          bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="public-static-attrib">
            <memberdef kind="variable" id="class_writer_1ab46d66ae0ca78cb03ab7fb865d129934" prot="public" static="yes"
                       mutable="no">
                <type>const int</type>
                <definition>const int Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator,
                    writeFlags &gt;::kDefaultMaxDecimalPlaces
                </definition>
                <argsstring></argsstring>
                <name>kDefaultMaxDecimalPlaces</name>
                <initializer>= 324</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="92" column="1" bodyfile="rapidjson/writer.h" bodystart="92"
                          bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="protected-static-attrib">
            <memberdef kind="variable" id="class_writer_1a9cb4caeb9d8971f305edff1d70e67acb" prot="protected"
                       static="yes" mutable="no">
                <type>const size_t</type>
                <definition>const size_t Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator,
                    writeFlags &gt;::kDefaultLevelDepth
                </definition>
                <argsstring></argsstring>
                <name>kDefaultLevelDepth</name>
                <initializer>= 32</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="276" column="1" bodyfile="rapidjson/writer.h" bodystart="276"
                          bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="protected-attrib">
            <memberdef kind="variable" id="class_writer_1a3a3f60140f78dd67b5274978fd3a33ff" prot="protected" static="no"
                       mutable="no">
                <type>OutputStream *</type>
                <definition>OutputStream* Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator,
                    writeFlags &gt;::os_
                </definition>
                <argsstring></argsstring>
                <name>os_</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="478" column="1" bodyfile="rapidjson/writer.h" bodystart="478"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="class_writer_1a9e6c13c06fc721dfd8486f17b9ff29de" prot="protected" static="no"
                       mutable="no">
                <type><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack</ref>&lt; StackAllocator
                    &gt;
                </type>
                <definition>internal::Stack&lt;StackAllocator&gt; Writer&lt; OutputStream, SourceEncoding,
                    TargetEncoding, StackAllocator, writeFlags &gt;::level_stack_
                </definition>
                <argsstring></argsstring>
                <name>level_stack_</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="479" column="1" bodyfile="rapidjson/writer.h" bodystart="479"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="class_writer_1a3d4ef664c3cdf34a286b13d27adcdd4d" prot="protected" static="no"
                       mutable="no">
                <type>int</type>
                <definition>int Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::maxDecimalPlaces_</definition>
                <argsstring></argsstring>
                <name>maxDecimalPlaces_</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="480" column="1" bodyfile="rapidjson/writer.h" bodystart="480"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="class_writer_1affc6b9e0332b50bee0d33f8b1841c9a6" prot="protected" static="no"
                       mutable="no">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::hasRoot_
                </definition>
                <argsstring></argsstring>
                <name>hasRoot_</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="481" column="1" bodyfile="rapidjson/writer.h" bodystart="481"
                          bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="public-func">
            <memberdef kind="function" id="class_writer_1af4f54830d6927d9daf5bd53bfd134dd3" prot="public" static="no"
                       const="no" explicit="yes" inline="yes" virt="non-virtual">
                <type></type>
                <definition>Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Writer</definition>
                <argsstring>(OutputStream &amp;os, StackAllocator *stackAllocator=0, size_t
                    levelDepth=kDefaultLevelDepth)
                </argsstring>
                <name>Writer</name>
                <param>
                    <type>OutputStream &amp;</type>
                    <declname>os</declname>
                </param>
                <param>
                    <type>StackAllocator *</type>
                    <declname>stackAllocator</declname>
                    <defval>0</defval>
                </param>
                <param>
                    <type>size_t</type>
                    <declname>levelDepth</declname>
                    <defval>kDefaultLevelDepth</defval>
                </param>
                <briefdescription>
                    <para>Constructor.</para>
                </briefdescription>
                <detaileddescription>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>os</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Output stream.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>stackAllocator</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>User supplied allocator. If it is null, it will create a private one.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>levelDepth</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Initial capacity of stack.</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="100" column="1" bodyfile="rapidjson/writer.h" bodystart="100"
                          bodyend="101"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a7b885cea71542fc436be80eff447fb64" prot="public" static="no"
                       const="no" explicit="yes" inline="yes" virt="non-virtual">
                <type></type>
                <definition>Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Writer</definition>
                <argsstring>(StackAllocator *allocator=0, size_t levelDepth=kDefaultLevelDepth)</argsstring>
                <name>Writer</name>
                <param>
                    <type>StackAllocator *</type>
                    <declname>allocator</declname>
                    <defval>0</defval>
                </param>
                <param>
                    <type>size_t</type>
                    <declname>levelDepth</declname>
                    <defval>kDefaultLevelDepth</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="104" column="1" bodyfile="rapidjson/writer.h" bodystart="104"
                          bodyend="105"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a8b53e8f137f7fcf694f5500711b3f58d" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Reset
                </definition>
                <argsstring>(OutputStream &amp;os)</argsstring>
                <name>Reset</name>
                <param>
                    <type>OutputStream &amp;</type>
                    <declname>os</declname>
                </param>
                <briefdescription>
                    <para>Reset the writer with a new stream.</para>
                </briefdescription>
                <detaileddescription>
                    <para>This function reset the writer with a new stream and default settings, in order to make a <ref
                            refid="class_writer" kindref="compound">Writer
                    </ref> object reusable for output multiple JSONs.
                    </para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>os</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>New output stream.
                                        <programlisting>
                                            <codeline>
                                                <highlight class="normal">Writer&lt;OutputStream&gt;<sp/>writer(os1);
                                                </highlight>
                                            </codeline>
                                            <codeline>
                                                <highlight class="normal">writer.StartObject();</highlight>
                                            </codeline>
                                            <codeline>
                                                <highlight class="normal">//<sp/>...
                                                </highlight>
                                            </codeline>
                                            <codeline>
                                                <highlight class="normal">writer.EndObject();</highlight>
                                            </codeline>
                                            <codeline></codeline>
                                            <codeline>
                                                <highlight class="normal">writer.Reset(os2);</highlight>
                                            </codeline>
                                            <codeline>
                                                <highlight class="normal">writer.StartObject();</highlight>
                                            </codeline>
                                            <codeline>
                                                <highlight class="normal">//<sp/>...
                                                </highlight>
                                            </codeline>
                                            <codeline>
                                                <highlight class="normal">writer.EndObject();</highlight>
                                            </codeline>
                                        </programlisting>
                                    </para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="132" column="1" bodyfile="rapidjson/writer.h" bodystart="132"
                          bodyend="136"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a07d74d36dd3191b06e0aab678c246157" prot="public" static="no"
                       const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::IsComplete
                </definition>
                <argsstring>() const</argsstring>
                <name>IsComplete</name>
                <briefdescription>
                    <para>Checks whether the output is a complete JSON.</para>
                </briefdescription>
                <detaileddescription>
                    <para>A complete JSON has a complete root object or array.</para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="142" column="1" bodyfile="rapidjson/writer.h" bodystart="142"
                          bodyend="144"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1ad35ddb56c6969d9584bf1e73bebda5ab" prot="public" static="no"
                       const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type>int</type>
                <definition>int Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::GetMaxDecimalPlaces</definition>
                <argsstring>() const</argsstring>
                <name>GetMaxDecimalPlaces</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="146" column="1" bodyfile="rapidjson/writer.h" bodystart="146"
                          bodyend="148"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a58e3f94dc5af1432a8eace5ba427eca7" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::SetMaxDecimalPlaces
                </definition>
                <argsstring>(int maxDecimalPlaces)</argsstring>
                <name>SetMaxDecimalPlaces</name>
                <param>
                    <type>int</type>
                    <declname>maxDecimalPlaces</declname>
                </param>
                <briefdescription>
                    <para>Sets the maximum number of decimal places for double output.</para>
                </briefdescription>
                <detaileddescription>
                    <para>This setting truncates the output with specified number of decimal places.</para>
                    <para>For example,</para>
                    <para>
                        <programlisting>
                            <codeline>
                                <highlight class="normal">writer.SetMaxDecimalPlaces(3);</highlight>
                            </codeline>
                            <codeline>
                                <highlight class="normal">writer.StartArray();</highlight>
                            </codeline>
                            <codeline>
                                <highlight class="normal">writer.Double(0.12345);
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>//<sp/>&quot;0.123&quot;
                                </highlight>
                            </codeline>
                            <codeline>
                                <highlight class="normal">writer.Double(0.0001);
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>//<sp/>&quot;0.0&quot;
                                </highlight>
                            </codeline>
                            <codeline>
                                <highlight class="normal">writer.Double(1.234567890123456e30);
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>//<sp/>&quot;1.234567890123456e30&quot;<sp/>(do<sp/>not<sp/>truncate<sp/>
                                    significand<sp/>for<sp/>positive<sp/>exponent)
                                </highlight>
                            </codeline>
                            <codeline>
                                <highlight class="normal">writer.Double(1.23e-4);
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>//<sp/>&quot;0.0&quot;
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>
                                    <sp/>(do<sp/>truncate<sp/>significand<sp/>for<sp/>negative<sp/>exponent)
                                </highlight>
                            </codeline>
                            <codeline>
                                <highlight class="normal">writer.EndArray();</highlight>
                            </codeline>
                        </programlisting>
                    </para>
                    <para>The default setting does not truncate any decimal places. You can restore to this setting by
                        calling
                        <programlisting>
                            <codeline>
                                <highlight class="normal">
                                    writer.SetMaxDecimalPlaces(Writer::kDefaultMaxDecimalPlaces);
                                </highlight>
                            </codeline>
                        </programlisting>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="171" column="1" bodyfile="rapidjson/writer.h" bodystart="171"
                          bodyend="173"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1ae0d1615104e4e88040b9640e6784008a" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::RawValue
                </definition>
                <argsstring>(const Ch *json, size_t length, Type type)</argsstring>
                <name>RawValue</name>
                <param>
                    <type>const Ch *</type>
                    <declname>json</declname>
                </param>
                <param>
                    <type>size_t</type>
                    <declname>length</declname>
                </param>
                <param>
                    <type>
                        <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                    </type>
                    <declname>type</declname>
                </param>
                <briefdescription>
                    <para>Write a raw JSON value.</para>
                </briefdescription>
                <detaileddescription>
                    <para>For user to write a stringified JSON as a value.</para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>json</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>A well-formed JSON value. It should not contain null character within [0,
                                        length - 1] range.
                                    </para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>length</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Length of the json.</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>type</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Type of the root of json.</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="262" column="1" bodyfile="rapidjson/writer.h" bodystart="262"
                          bodyend="266"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="protected-func">
            <memberdef kind="function" id="class_writer_1a44862b3eba8d84b909c69aba875c9f4d" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteNull
                </definition>
                <argsstring>()</argsstring>
                <name>WriteNull</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="278" column="1" bodyfile="rapidjson/writer.h" bodystart="278"
                          bodyend="281"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a42ad68b6950431bb8ca0199568546eaf" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteBool
                </definition>
                <argsstring>(bool b)</argsstring>
                <name>WriteBool</name>
                <param>
                    <type>bool</type>
                    <declname>b</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="283" column="1" bodyfile="rapidjson/writer.h" bodystart="283"
                          bodyend="293"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a31d0feda654ca245c41462be7dc59998" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteInt
                </definition>
                <argsstring>(int i)</argsstring>
                <name>WriteInt</name>
                <param>
                    <type>int</type>
                    <declname>i</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="295" column="1" bodyfile="rapidjson/writer.h" bodystart="295"
                          bodyend="302"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a2861227e93707d1478d2cf56644dca3b" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteUint
                </definition>
                <argsstring>(unsigned u)</argsstring>
                <name>WriteUint</name>
                <param>
                    <type>unsigned</type>
                    <declname>u</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="304" column="1" bodyfile="rapidjson/writer.h" bodystart="304"
                          bodyend="311"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1aa58d3f80c06394648de5055ecfb41587" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteInt64
                </definition>
                <argsstring>(int64_t i64)</argsstring>
                <name>WriteInt64</name>
                <param>
                    <type>int64_t</type>
                    <declname>i64</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="313" column="1" bodyfile="rapidjson/writer.h" bodystart="313"
                          bodyend="320"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1ad07b325157220e3aa791c1c8c904021e" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteUint64
                </definition>
                <argsstring>(uint64_t u64)</argsstring>
                <name>WriteUint64</name>
                <param>
                    <type>uint64_t</type>
                    <declname>u64</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="322" column="1" bodyfile="rapidjson/writer.h" bodystart="322"
                          bodyend="329"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1ae7a0fc4740681d845d92c1213bd25aa1" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteDouble
                </definition>
                <argsstring>(double d)</argsstring>
                <name>WriteDouble</name>
                <param>
                    <type>double</type>
                    <declname>d</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="331" column="1" bodyfile="rapidjson/writer.h" bodystart="331"
                          bodyend="357"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1acda4412ef5f4cac6e89f9544e4b10f70" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteString
                </definition>
                <argsstring>(const Ch *str, SizeType length)</argsstring>
                <name>WriteString</name>
                <param>
                    <type>const Ch *</type>
                    <declname>str</declname>
                </param>
                <param>
                    <type>
                        <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    </type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="359" column="1" bodyfile="rapidjson/writer.h" bodystart="359"
                          bodyend="431"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a94140803bba7863a1b39c936bbe6d262" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::ScanWriteUnescapedString
                </definition>
                <argsstring>(GenericStringStream&lt; SourceEncoding &gt; &amp;is, size_t length)</argsstring>
                <name>ScanWriteUnescapedString</name>
                <param>
                    <type><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream</ref>&lt;
                        SourceEncoding &gt; &amp;
                    </type>
                    <declname>is</declname>
                </param>
                <param>
                    <type>size_t</type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="433" column="1" bodyfile="rapidjson/writer.h" bodystart="433"
                          bodyend="435"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a81c72a2eecd47e042f56ca93a27a5cb1" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteStartObject
                </definition>
                <argsstring>()</argsstring>
                <name>WriteStartObject</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="437" column="1" bodyfile="rapidjson/writer.h" bodystart="437"
                          bodyend="437"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a7e3f6760a50a72f4217a9b2d625c43ee" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteEndObject
                </definition>
                <argsstring>()</argsstring>
                <name>WriteEndObject</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="438" column="1" bodyfile="rapidjson/writer.h" bodystart="438"
                          bodyend="438"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a3c3560a96cac58f98f4a74d6cb227204" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteStartArray
                </definition>
                <argsstring>()</argsstring>
                <name>WriteStartArray</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="439" column="1" bodyfile="rapidjson/writer.h" bodystart="439"
                          bodyend="439"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1aabda2df1be6e83cef416e9b1f042e8f4" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteEndArray
                </definition>
                <argsstring>()</argsstring>
                <name>WriteEndArray</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="440" column="1" bodyfile="rapidjson/writer.h" bodystart="440"
                          bodyend="440"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a8ee1135b2595261819b134907f67614e" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::WriteRawValue
                </definition>
                <argsstring>(const Ch *json, size_t length)</argsstring>
                <name>WriteRawValue</name>
                <param>
                    <type>const Ch *</type>
                    <declname>json</declname>
                </param>
                <param>
                    <type>size_t</type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="442" column="1" bodyfile="rapidjson/writer.h" bodystart="442"
                          bodyend="449"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a1fc40f8b9f3abc2548c0c5782ce1755d" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::Prefix
                </definition>
                <argsstring>(Type type)</argsstring>
                <name>Prefix</name>
                <param>
                    <type>
                        <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                    </type>
                    <declname>type</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="451" column="1" bodyfile="rapidjson/writer.h" bodystart="451"
                          bodyend="469"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1adc1cadbabc309d31f19cf7463251d879" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;::EndValue
                </definition>
                <argsstring>(bool ret)</argsstring>
                <name>EndValue</name>
                <param>
                    <type>bool</type>
                    <declname>ret</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="472" column="1" bodyfile="rapidjson/writer.h" bodystart="472"
                          bodyend="476"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1abefb163a93b376d056edecad5a7a82ef" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <templateparamlist>
                </templateparamlist>
                <type>bool</type>
                <definition>bool Writer&lt; StringBuffer &gt;::WriteInt</definition>
                <argsstring>(int i)</argsstring>
                <name>WriteInt</name>
                <param>
                    <type>int</type>
                    <declname>i</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="492" column="1" bodyfile="rapidjson/writer.h" bodystart="492"
                          bodyend="497"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a9665a4a1549b286944b21927b80060cf" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <templateparamlist>
                </templateparamlist>
                <type>bool</type>
                <definition>bool Writer&lt; StringBuffer &gt;::WriteUint</definition>
                <argsstring>(unsigned u)</argsstring>
                <name>WriteUint</name>
                <param>
                    <type>unsigned</type>
                    <declname>u</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="500" column="1" bodyfile="rapidjson/writer.h" bodystart="500"
                          bodyend="505"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a3528a42394d50f3b92659de517433c85" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <templateparamlist>
                </templateparamlist>
                <type>bool</type>
                <definition>bool Writer&lt; StringBuffer &gt;::WriteInt64</definition>
                <argsstring>(int64_t i64)</argsstring>
                <name>WriteInt64</name>
                <param>
                    <type>int64_t</type>
                    <declname>i64</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="508" column="1" bodyfile="rapidjson/writer.h" bodystart="508"
                          bodyend="513"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1a025b3d2ca07d539a7067575e95f5578d" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <templateparamlist>
                </templateparamlist>
                <type>bool</type>
                <definition>bool Writer&lt; StringBuffer &gt;::WriteUint64</definition>
                <argsstring>(uint64_t u)</argsstring>
                <name>WriteUint64</name>
                <param>
                    <type>uint64_t</type>
                    <declname>u</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="516" column="1" bodyfile="rapidjson/writer.h" bodystart="516"
                          bodyend="521"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1af317e1d24249b8c68503a6253c703bd2" prot="protected" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <templateparamlist>
                </templateparamlist>
                <type>bool</type>
                <definition>bool Writer&lt; StringBuffer &gt;::WriteDouble</definition>
                <argsstring>(double d)</argsstring>
                <name>WriteDouble</name>
                <param>
                    <type>double</type>
                    <declname>d</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="524" column="1" bodyfile="rapidjson/writer.h" bodystart="524"
                          bodyend="549"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="private-func">
            <memberdef kind="function" id="class_writer_1a23d333973ed2cc4a315d482bd2acaa78" prot="private" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type></type>
                <definition>Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;::Writer</definition>
                <argsstring>(const Writer &amp;)</argsstring>
                <name>Writer</name>
                <param>
                    <type>const <ref refid="class_writer" kindref="compound">Writer</ref> &amp;
                    </type>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="485" column="1"/>
            </memberdef>
            <memberdef kind="function" id="class_writer_1ac033345791d1ff181715a588da16bde5" prot="private" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>
                    <ref refid="class_writer" kindref="compound">Writer</ref>
                    &amp;
                </type>
                <definition>Writer&amp; Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator,
                    writeFlags &gt;::operator=
                </definition>
                <argsstring>(const Writer &amp;)</argsstring>
                <name>operator=</name>
                <param>
                    <type>const <ref refid="class_writer" kindref="compound">Writer</ref> &amp;
                    </type>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/writer.h" line="486" column="1"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
            <para>JSON writer.</para>
        </briefdescription>
        <detaileddescription>
            <para>
                <ref refid="class_writer" kindref="compound">Writer</ref>
                implements the concept Handler. It generates JSON text by events to an output os.
            </para>
            <para>User may programmatically calls the functions of a writer to generate JSON text.</para>
            <para>On the other side, a writer can also be passed to objects that generates events,</para>
            <para>for example <ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">
                Reader::Parse()
            </ref> and Document::Accept().
            </para>
            <para>
                <parameterlist kind="templateparam">
                    <parameteritem>
                        <parameternamelist>
                            <parametername>OutputStream</parametername>
                        </parameternamelist>
                        <parameterdescription>
                            <para>Type of output stream.</para>
                        </parameterdescription>
                    </parameteritem>
                    <parameteritem>
                        <parameternamelist>
                            <parametername>SourceEncoding</parametername>
                        </parameternamelist>
                        <parameterdescription>
                            <para>Encoding of source string.</para>
                        </parameterdescription>
                    </parameteritem>
                    <parameteritem>
                        <parameternamelist>
                            <parametername>TargetEncoding</parametername>
                        </parameternamelist>
                        <parameterdescription>
                            <para>Encoding of output stream.</para>
                        </parameterdescription>
                    </parameteritem>
                    <parameteritem>
                        <parameternamelist>
                            <parametername>StackAllocator</parametername>
                        </parameternamelist>
                        <parameterdescription>
                            <para>Type of allocator for allocating memory of stack.</para>
                        </parameterdescription>
                    </parameteritem>
                </parameterlist>
                <simplesect kind="note">
                    <para>implements Handler concept</para>
                </simplesect>
            </para>
        </detaileddescription>
        <inheritancegraph>
            <node id="363">
                <label>Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</label>
                <link refid="class_writer"/>
            </node>
            <node id="364">
                <label>PrettyWriter&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags
                    &gt;</label>
                <link refid="class_pretty_writer"/>
                <childnode refid="363" relation="public-inheritance">
                </childnode>
            </node>
        </inheritancegraph>
        <collaborationgraph>
            <node id="367">
                <label>size_t</label>
            </node>
            <node id="366">
                <label>internal::Stack&lt; StackAllocator &gt;</label>
                <link refid="classinternal_1_1_stack"/>
            </node>
            <node id="365">
                <label>Writer&lt; OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags &gt;</label>
                <link refid="class_writer"/>
                <childnode refid="366" relation="usage">
                    <edgelabel>level_stack_</edgelabel>
                </childnode>
                <childnode refid="367" relation="usage">
                    <edgelabel>kDefaultLevelDepth</edgelabel>
                </childnode>
            </node>
        </collaborationgraph>
        <location file="rapidjson/fwd.h" line="95" column="1" bodyfile="rapidjson/fwd.h" bodystart="95" bodyend="-1"/>
        <listofallmembers>
            <member refid="class_writer_1ad7491f4dedb02e7456b240b23ef8c1ad" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Bool</name>
            </member>
            <member refid="class_writer_1ab08bff5fd2daec65f4a78779ca3d2139" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Ch</name>
            </member>
            <member refid="class_writer_1a22a43e8a7193105deec6b808736f7a1a" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Double</name>
            </member>
            <member refid="class_writer_1ac88d533095591a878500b63b351d4013" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>EndArray</name>
            </member>
            <member refid="class_writer_1a0771a565261564c27676b7300b11f2b5" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>EndObject</name>
            </member>
            <member refid="class_writer_1adc1cadbabc309d31f19cf7463251d879" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>EndValue</name>
            </member>
            <member refid="class_writer_1ad35ddb56c6969d9584bf1e73bebda5ab" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>GetMaxDecimalPlaces</name>
            </member>
            <member refid="class_writer_1affc6b9e0332b50bee0d33f8b1841c9a6" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>hasRoot_</name>
            </member>
            <member refid="class_writer_1ad471415aa7741e732bab0bcfbb9522a8" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Int</name>
            </member>
            <member refid="class_writer_1a4144d7086ed9d3d807c373de242bde45" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Int64</name>
            </member>
            <member refid="class_writer_1a07d74d36dd3191b06e0aab678c246157" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>IsComplete</name>
            </member>
            <member refid="class_writer_1a9cb4caeb9d8971f305edff1d70e67acb" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>kDefaultLevelDepth</name>
            </member>
            <member refid="class_writer_1ab46d66ae0ca78cb03ab7fb865d129934" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>kDefaultMaxDecimalPlaces</name>
            </member>
            <member refid="class_writer_1a19096d2ccb90761f63ab1240337bf90a" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Key</name>
            </member>
            <member refid="class_writer_1a8a40514efe951801df6896a596ed8563" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Key</name>
            </member>
            <member refid="class_writer_1a9e6c13c06fc721dfd8486f17b9ff29de" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>level_stack_</name>
            </member>
            <member refid="class_writer_1a3d4ef664c3cdf34a286b13d27adcdd4d" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>maxDecimalPlaces_</name>
            </member>
            <member refid="class_writer_1af700ed03c8810d48a4aaa3c5baeaf26c" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Null</name>
            </member>
            <member refid="class_writer_1ac033345791d1ff181715a588da16bde5" prot="private" virt="non-virtual">
                <scope>Writer</scope>
                <name>operator=</name>
            </member>
            <member refid="class_writer_1a3a3f60140f78dd67b5274978fd3a33ff" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>os_</name>
            </member>
            <member refid="class_writer_1a1fc40f8b9f3abc2548c0c5782ce1755d" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>Prefix</name>
            </member>
            <member refid="class_writer_1ad462dc606fddea0f34fc0e190c3bdaee" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>RawNumber</name>
            </member>
            <member refid="class_writer_1ae0d1615104e4e88040b9640e6784008a" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>RawValue</name>
            </member>
            <member refid="class_writer_1a8b53e8f137f7fcf694f5500711b3f58d" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Reset</name>
            </member>
            <member refid="class_writer_1a94140803bba7863a1b39c936bbe6d262" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>ScanWriteUnescapedString</name>
            </member>
            <member refid="class_writer_1a58e3f94dc5af1432a8eace5ba427eca7" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>SetMaxDecimalPlaces</name>
            </member>
            <member refid="class_writer_1a38715785194b42cd67ba5dd52bf7967e" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>StartArray</name>
            </member>
            <member refid="class_writer_1aec3200b2fc80ec87d1c37f775256b2e1" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>StartObject</name>
            </member>
            <member refid="class_writer_1a8b4dc44f471403a83c9959575796ceab" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>String</name>
            </member>
            <member refid="class_writer_1a24eb1a72b42da5fe51ff99d9c293dd11" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>String</name>
            </member>
            <member refid="class_writer_1a5fb0c3228f89f6f9bef15f3e6e6f1739" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Uint</name>
            </member>
            <member refid="class_writer_1a55bb9f286ecdaf4cdb07bddb02e0cb2d" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Uint64</name>
            </member>
            <member refid="class_writer_1a42ad68b6950431bb8ca0199568546eaf" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteBool</name>
            </member>
            <member refid="class_writer_1ae7a0fc4740681d845d92c1213bd25aa1" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteDouble</name>
            </member>
            <member refid="class_writer_1af317e1d24249b8c68503a6253c703bd2" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteDouble</name>
            </member>
            <member refid="class_writer_1aabda2df1be6e83cef416e9b1f042e8f4" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteEndArray</name>
            </member>
            <member refid="class_writer_1a7e3f6760a50a72f4217a9b2d625c43ee" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteEndObject</name>
            </member>
            <member refid="class_writer_1a31d0feda654ca245c41462be7dc59998" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteInt</name>
            </member>
            <member refid="class_writer_1abefb163a93b376d056edecad5a7a82ef" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteInt</name>
            </member>
            <member refid="class_writer_1aa58d3f80c06394648de5055ecfb41587" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteInt64</name>
            </member>
            <member refid="class_writer_1a3528a42394d50f3b92659de517433c85" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteInt64</name>
            </member>
            <member refid="class_writer_1a44862b3eba8d84b909c69aba875c9f4d" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteNull</name>
            </member>
            <member refid="class_writer_1af4f54830d6927d9daf5bd53bfd134dd3" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Writer</name>
            </member>
            <member refid="class_writer_1a7b885cea71542fc436be80eff447fb64" prot="public" virt="non-virtual">
                <scope>Writer</scope>
                <name>Writer</name>
            </member>
            <member refid="class_writer_1a23d333973ed2cc4a315d482bd2acaa78" prot="private" virt="non-virtual">
                <scope>Writer</scope>
                <name>Writer</name>
            </member>
            <member refid="class_writer_1a8ee1135b2595261819b134907f67614e" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteRawValue</name>
            </member>
            <member refid="class_writer_1a3c3560a96cac58f98f4a74d6cb227204" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteStartArray</name>
            </member>
            <member refid="class_writer_1a81c72a2eecd47e042f56ca93a27a5cb1" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteStartObject</name>
            </member>
            <member refid="class_writer_1acda4412ef5f4cac6e89f9544e4b10f70" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteString</name>
            </member>
            <member refid="class_writer_1a2861227e93707d1478d2cf56644dca3b" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteUint</name>
            </member>
            <member refid="class_writer_1a9665a4a1549b286944b21927b80060cf" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteUint</name>
            </member>
            <member refid="class_writer_1ad07b325157220e3aa791c1c8c904021e" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteUint64</name>
            </member>
            <member refid="class_writer_1a025b3d2ca07d539a7067575e95f5578d" prot="protected" virt="non-virtual">
                <scope>Writer</scope>
                <name>WriteUint64</name>
            </member>
        </listofallmembers>
    </compounddef>
</doxygen>
