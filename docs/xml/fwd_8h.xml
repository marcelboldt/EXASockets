<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="fwd_8h" kind="file" language="C++">
        <compoundname>fwd.h</compoundname>
        <includes refid="rapidjson_8h" local="yes">rapidjson.h</includes>
        <incdepgraph>
            <node id="273">
                <label>cassert</label>
            </node>
            <node id="269">
                <label>rapidjson/fwd.h</label>
                <link refid="fwd_8h"/>
                <childnode refid="270" relation="include">
                </childnode>
            </node>
            <node id="270">
                <label>rapidjson.h</label>
                <link refid="rapidjson_8h"/>
                <childnode refid="271" relation="include">
                </childnode>
                <childnode refid="272" relation="include">
                </childnode>
                <childnode refid="273" relation="include">
                </childnode>
            </node>
            <node id="271">
                <label>cstdlib</label>
            </node>
            <node id="272">
                <label>cstring</label>
            </node>
        </incdepgraph>
        <innerclass refid="struct_u_t_f8" prot="public">UTF8</innerclass>
        <innerclass refid="struct_u_t_f16" prot="public">UTF16</innerclass>
        <innerclass refid="struct_u_t_f16_b_e" prot="public">UTF16BE</innerclass>
        <innerclass refid="struct_u_t_f16_l_e" prot="public">UTF16LE</innerclass>
        <innerclass refid="struct_u_t_f32" prot="public">UTF32</innerclass>
        <innerclass refid="struct_u_t_f32_b_e" prot="public">UTF32BE</innerclass>
        <innerclass refid="struct_u_t_f32_l_e" prot="public">UTF32LE</innerclass>
        <innerclass refid="struct_a_s_c_i_i" prot="public">ASCII</innerclass>
        <innerclass refid="struct_auto_u_t_f" prot="public">AutoUTF</innerclass>
        <innerclass refid="struct_transcoder" prot="public">Transcoder</innerclass>
        <innerclass refid="class_memory_pool_allocator" prot="public">MemoryPoolAllocator</innerclass>
        <innerclass refid="struct_generic_string_stream" prot="public">GenericStringStream</innerclass>
        <innerclass refid="struct_generic_insitu_string_stream" prot="public">GenericInsituStringStream</innerclass>
        <innerclass refid="class_generic_string_buffer" prot="public">GenericStringBuffer</innerclass>
        <innerclass refid="struct_generic_memory_buffer" prot="public">GenericMemoryBuffer</innerclass>
        <innerclass refid="struct_base_reader_handler" prot="public">BaseReaderHandler</innerclass>
        <innerclass refid="class_generic_reader" prot="public">GenericReader</innerclass>
        <innerclass refid="class_writer" prot="public">Writer</innerclass>
        <innerclass refid="class_pretty_writer" prot="public">PrettyWriter</innerclass>
        <innerclass refid="struct_generic_member" prot="public">GenericMember</innerclass>
        <innerclass refid="class_generic_member_iterator" prot="public">GenericMemberIterator</innerclass>
        <innerclass refid="struct_generic_string_ref" prot="public">GenericStringRef</innerclass>
        <innerclass refid="class_generic_value" prot="public">GenericValue</innerclass>
        <innerclass refid="class_generic_document" prot="public">GenericDocument</innerclass>
        <innerclass refid="class_generic_pointer" prot="public">GenericPointer</innerclass>
        <innerclass refid="class_i_generic_remote_schema_document_provider" prot="public">
            IGenericRemoteSchemaDocumentProvider
        </innerclass>
        <innerclass refid="class_generic_schema_document" prot="public">GenericSchemaDocument</innerclass>
        <innerclass refid="class_generic_schema_validator" prot="public">GenericSchemaValidator</innerclass>
        <sectiondef kind="typedef">
            <memberdef kind="typedef" id="fwd_8h_1a2d1473c3dd9ab6c975589b45436fe55e" prot="public" static="no">
                <type><ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream</ref>&lt; <ref
                        refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt; &gt;
                </type>
                <definition>typedef GenericStringStream&lt;UTF8&lt;char&gt; &gt; StringStream</definition>
                <argsstring></argsstring>
                <name>StringStream</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="49" column="1" bodyfile="rapidjson/fwd.h" bodystart="47"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1a87256fd77e335ea15cd195ed8c55e312" prot="public" static="no">
                <type><ref refid="struct_generic_insitu_string_stream" kindref="compound">
                    GenericInsituStringStream</ref>&lt; <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;
                    char &gt; &gt;
                </type>
                <definition>typedef GenericInsituStringStream&lt;UTF8&lt;char&gt; &gt; InsituStringStream</definition>
                <argsstring></argsstring>
                <name>InsituStringStream</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="54" column="1" bodyfile="rapidjson/fwd.h" bodystart="52"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1ab956b6537825abf8aac4112e81cfad7e" prot="public" static="no">
                <type><ref refid="class_generic_string_buffer" kindref="compound">GenericStringBuffer</ref>&lt; <ref
                        refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, <ref
                        refid="class_crt_allocator" kindref="compound">CrtAllocator
                </ref> &gt;
                </type>
                <definition>typedef GenericStringBuffer&lt;UTF8&lt;char&gt;, CrtAllocator&gt; StringBuffer</definition>
                <argsstring></argsstring>
                <name>StringBuffer</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="61" column="1" bodyfile="rapidjson/fwd.h" bodystart="59"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1a611aeb4e5d606f0b099c6408fd8e8e4d" prot="public" static="no">
                <type><ref refid="struct_generic_memory_buffer" kindref="compound">GenericMemoryBuffer</ref>&lt; <ref
                        refid="class_crt_allocator" kindref="compound">CrtAllocator
                </ref> &gt;
                </type>
                <definition>typedef GenericMemoryBuffer&lt;CrtAllocator&gt; MemoryBuffer</definition>
                <argsstring></argsstring>
                <name>MemoryBuffer</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="76" column="1" bodyfile="rapidjson/fwd.h" bodystart="74"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1ab7f1c1207749ff25c0d7f0cc88e62788" prot="public" static="no">
                <type><ref refid="class_generic_reader" kindref="compound">GenericReader</ref>&lt; <ref
                        refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, <ref refid="struct_u_t_f8"
                                                                                                kindref="compound">
                    UTF8</ref>&lt; char &gt;, <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref> &gt;
                </type>
                <definition>typedef GenericReader&lt;UTF8&lt;char&gt;, UTF8&lt;char&gt;, CrtAllocator&gt; Reader
                </definition>
                <argsstring></argsstring>
                <name>Reader</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="90" column="1" bodyfile="rapidjson/fwd.h" bodystart="88"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1a887ce50b3fe61c5e9cfd9b9506548dd9" prot="public" static="no">
                <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref
                        refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, <ref
                        refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>&lt; <ref
                        refid="class_crt_allocator" kindref="compound">CrtAllocator
                </ref> &gt; &gt;
                </type>
                <definition>typedef GenericValue&lt;UTF8&lt;char&gt;, MemoryPoolAllocator&lt;CrtAllocator&gt; &gt;
                    Value
                </definition>
                <argsstring></argsstring>
                <name>Value</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="116" column="1" bodyfile="rapidjson/fwd.h" bodystart="114"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1a90f4c2712ef99a3f016ce5f8eee03292" prot="public" static="no">
                <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&lt; <ref
                        refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, <ref
                        refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator</ref>&lt; <ref
                        refid="class_crt_allocator" kindref="compound">CrtAllocator
                </ref> &gt;, <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref> &gt;
                </type>
                <definition>typedef GenericDocument&lt;UTF8&lt;char&gt;, MemoryPoolAllocator&lt;CrtAllocator&gt;,
                    CrtAllocator&gt; Document
                </definition>
                <argsstring></argsstring>
                <name>Document</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="121" column="1" bodyfile="rapidjson/fwd.h" bodystart="119"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1a0e5c49dba7ec654cdda5735347c00397" prot="public" static="no">
                <type><ref refid="class_generic_pointer" kindref="compound">GenericPointer</ref>&lt; <ref
                        refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref>, <ref
                        refid="class_crt_allocator" kindref="compound">CrtAllocator
                </ref> &gt;
                </type>
                <definition>typedef GenericPointer&lt;Value, CrtAllocator&gt; Pointer</definition>
                <argsstring></argsstring>
                <name>Pointer</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="128" column="1" bodyfile="rapidjson/fwd.h" bodystart="126"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1a05c97278ec100471e77a4d678957701b" prot="public" static="no">
                <type><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>&lt; <ref
                        refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref>, <ref
                        refid="class_crt_allocator" kindref="compound">CrtAllocator
                </ref> &gt;
                </type>
                <definition>typedef GenericSchemaDocument&lt;Value, CrtAllocator&gt; SchemaDocument</definition>
                <argsstring></argsstring>
                <name>SchemaDocument</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="138" column="1" bodyfile="rapidjson/fwd.h" bodystart="136"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1afec32b8c8d16360397849fd8bcd28441" prot="public" static="no">
                <type><ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">
                    IGenericRemoteSchemaDocumentProvider</ref>&lt; <ref refid="class_generic_schema_document"
                                                                        kindref="compound">SchemaDocument
                </ref> &gt;
                </type>
                <definition>typedef IGenericRemoteSchemaDocumentProvider&lt;SchemaDocument&gt;
                    IRemoteSchemaDocumentProvider
                </definition>
                <argsstring></argsstring>
                <name>IRemoteSchemaDocumentProvider</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="139" column="1" bodyfile="rapidjson/fwd.h" bodystart="139"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="fwd_8h_1a2c91a2e7dd109dba1803ed2280a2dfa4" prot="public" static="no">
                <type><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>
                    &lt; <ref refid="class_generic_schema_document" kindref="compound">SchemaDocument</ref>, <ref
                            refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler</ref>&lt; <ref
                            refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt; char &gt;, void &gt;, <ref
                            refid="class_crt_allocator" kindref="compound">CrtAllocator
                    </ref> &gt;
                </type>
                <definition>typedef GenericSchemaValidator&lt;SchemaDocument, BaseReaderHandler&lt;UTF8&lt;char&gt;,
                    void&gt;, CrtAllocator&gt; SchemaValidator
                </definition>
                <argsstring></argsstring>
                <name>SchemaValidator</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/fwd.h" line="147" column="1" bodyfile="rapidjson/fwd.h" bodystart="145"
                          bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>
                    source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>
                    Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);
                    <sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>
                    obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>http://opensource.org/licenses/MIT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed
                    <sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>
                    &quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>
                    implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>
                    limitations<sp/>under<sp/>the<sp/>License.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_FWD_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_FWD_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="rapidjson_8h" kindref="compound">
                    rapidjson.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc"
                         kindref="member">RAPIDJSON_NAMESPACE_BEGIN
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>encodings.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_u_t_f8" kindref="compound">UTF8</ref>;
                </highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_u_t_f16" kindref="compound">UTF16</ref>;
                </highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_u_t_f16_b_e" kindref="compound">UTF16BE</ref>;
                </highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_u_t_f16_l_e" kindref="compound">UTF16LE</ref>;
                </highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_u_t_f32" kindref="compound">UTF32</ref>;
                </highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_u_t_f32_b_e" kindref="compound">UTF32BE</ref>;
                </highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_u_t_f32_l_e" kindref="compound">UTF32LE</ref>;
                </highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_a_s_c_i_i" kindref="compound">ASCII</ref>;
                </highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_auto_u_t_f" kindref="compound">AutoUTF</ref>;
                </highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>TargetEncoding&gt;
                </highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_transcoder" kindref="compound">Transcoder</ref>;
                </highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>allocators.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>BaseAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_memory_pool_allocator" kindref="compound">
                    MemoryPoolAllocator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>stream.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding&gt;
                </highlight>
            </codeline>
            <codeline lineno="47" refid="struct_generic_string_stream" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_generic_string_stream" kindref="compound">
                    GenericStringStream</ref>;
                </highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_stream" kindref="compound">
                        GenericStringStream&lt;UTF8&lt;char&gt;</ref>
                    <sp/>&gt;
                    <sp/>
                    <ref refid="struct_generic_string_stream" kindref="compound">StringStream</ref>;
                </highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding&gt;
                </highlight>
            </codeline>
            <codeline lineno="52" refid="struct_generic_insitu_string_stream" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_generic_insitu_string_stream" kindref="compound">
                    GenericInsituStringStream</ref>;
                </highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_insitu_string_stream" kindref="compound">GenericInsituStringStream&lt;UTF8&lt;char&gt;</ref>
                    <sp/>&gt;
                    <sp/>
                    <ref refid="struct_generic_insitu_string_stream" kindref="compound">InsituStringStream</ref>;
                </highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>stringbuffer.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="59" refid="class_generic_string_buffer" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_string_buffer" kindref="compound">
                    GenericStringBuffer</ref>;
                </highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_string_buffer" kindref="compound">
                        GenericStringBuffer&lt;UTF8&lt;char&gt;</ref>,
                    <sp/>
                    <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;
                    <sp/>
                    <ref refid="class_generic_string_buffer" kindref="compound">StringBuffer</ref>;
                </highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>filereadstream.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_file_read_stream" kindref="compound">FileReadStream</ref>;
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>filewritestream.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_file_write_stream" kindref="compound">FileWriteStream</ref>;
                </highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>memorybuffer.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="74" refid="struct_generic_memory_buffer" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_generic_memory_buffer" kindref="compound">
                    GenericMemoryBuffer</ref>;
                </highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_memory_buffer" kindref="compound">
                        GenericMemoryBuffer&lt;CrtAllocator&gt;</ref>
                    <sp/>
                    <ref refid="struct_generic_memory_buffer" kindref="compound">MemoryBuffer</ref>;
                </highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>memorystream.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_memory_stream" kindref="compound">MemoryStream</ref>;
                </highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>reader.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Derived&gt;
                </highlight>
            </codeline>
            <codeline lineno="85" refid="struct_base_reader_handler" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_base_reader_handler" kindref="compound">
                    BaseReaderHandler</ref>;
                </highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>TargetEncoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="88" refid="class_generic_reader" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_reader" kindref="compound">GenericReader</ref>;
                </highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_reader" kindref="compound">GenericReader&lt;UTF8&lt;char&gt;</ref>,
                    <sp/>
                    <ref refid="struct_u_t_f8" kindref="compound">UTF8&lt;char&gt;</ref>,
                    <sp/>
                    <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;
                    <sp/>
                    <ref refid="reader_8h_1a84f3b66a66647f4ac4267078359188ba" kindref="member">Reader</ref>;
                </highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>writer.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>OutputStream,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>TargetEncoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>writeFlags&gt;
                </highlight>
            </codeline>
            <codeline lineno="95" refid="class_writer" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_writer" kindref="compound">Writer</ref>;
                </highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>prettywriter.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>OutputStream,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>TargetEncoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>writeFlags&gt;
                </highlight>
            </codeline>
            <codeline lineno="100" refid="class_pretty_writer" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_pretty_writer" kindref="compound">PrettyWriter</ref>;
                </highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>document.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_generic_member" kindref="compound">GenericMember</ref>;
                </highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Const,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">
                    GenericMemberIterator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                </highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="struct_generic_string_ref" kindref="compound">
                    GenericStringRef</ref>;
                </highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;
                </highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;UTF8&lt;char&gt;</ref>,
                    <sp/>
                    <ref refid="class_memory_pool_allocator" kindref="compound">
                        MemoryPoolAllocator&lt;CrtAllocator&gt;</ref>
                    <sp/>&gt;
                    <sp/>
                    <ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref>;
                </highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>;
                </highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument&lt;UTF8&lt;char&gt;</ref>,
                    <sp/>
                    <ref refid="class_memory_pool_allocator" kindref="compound">
                        MemoryPoolAllocator&lt;CrtAllocator&gt;</ref>,
                    <sp/>
                    <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;
                    <sp/>
                    <ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">Document</ref>;
                </highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>pointer.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="126" refid="class_generic_pointer" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_pointer" kindref="compound">GenericPointer</ref>;
                </highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_pointer" kindref="compound">GenericPointer&lt;Value,
                        CrtAllocator&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_pointer" kindref="compound">Pointer</ref>;
                </highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>schema.h
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&gt;
                </highlight>
            </codeline>
            <codeline lineno="133" refid="class_i_generic_remote_schema_document_provider" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_i_generic_remote_schema_document_provider"
                                               kindref="compound">IGenericRemoteSchemaDocumentProvider</ref>;
                </highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueT,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="136" refid="class_generic_schema_document" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_schema_document" kindref="compound">
                    GenericSchemaDocument</ref>;
                </highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument&lt;Value,
                        CrtAllocator&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_schema_document" kindref="compound">SchemaDocument</ref>;
                </highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">
                        IGenericRemoteSchemaDocumentProvider&lt;SchemaDocument&gt;</ref>
                    <sp/>
                    <ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">
                        IRemoteSchemaDocumentProvider</ref>;
                </highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType,
                </highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>OutputHandler,
                </highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StateAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="145" refid="class_generic_schema_validator" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_schema_validator" kindref="compound">
                    GenericSchemaValidator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator&lt;SchemaDocument,
                        BaseReaderHandler&lt;UTF8&lt;char&gt;</ref>,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">&gt;,
                    <sp/>
                    <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;
                    <sp/>
                    <ref refid="class_generic_schema_validator" kindref="compound">SchemaValidator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1"
                         kindref="member">RAPIDJSON_NAMESPACE_END
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_RAPIDJSONFWD_H_
                </highlight>
            </codeline>
        </programlisting>
        <location file="rapidjson/fwd.h"/>
    </compounddef>
</doxygen>
