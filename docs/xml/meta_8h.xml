<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="meta_8h" kind="file" language="C++">
        <compoundname>meta.h</compoundname>
        <includes refid="rapidjson_8h" local="yes">../rapidjson.h</includes>
        <includedby refid="reader_8h" local="yes">rapidjson/reader.h</includedby>
        <includedby refid="document_8h" local="yes">rapidjson/document.h</includedby>
        <incdepgraph>
            <node id="345">
                <label>cassert</label>
            </node>
            <node id="342">
                <label>../rapidjson.h</label>
                <link refid="rapidjson_8h"/>
                <childnode refid="343" relation="include">
                </childnode>
                <childnode refid="344" relation="include">
                </childnode>
                <childnode refid="345" relation="include">
                </childnode>
            </node>
            <node id="343">
                <label>cstdlib</label>
            </node>
            <node id="341">
                <label>rapidjson/internal/meta.h</label>
                <link refid="meta_8h"/>
                <childnode refid="342" relation="include">
                </childnode>
            </node>
            <node id="344">
                <label>cstring</label>
            </node>
        </incdepgraph>
        <invincdepgraph>
            <node id="350">
                <label>rapidjson/pointer.h</label>
                <link refid="pointer_8h_source"/>
                <childnode refid="351" relation="include">
                </childnode>
            </node>
            <node id="347">
                <label>rapidjson/reader.h</label>
                <link refid="reader_8h"/>
                <childnode refid="348" relation="include">
                </childnode>
            </node>
            <node id="349">
                <label>exasockets/exasockets.h</label>
                <link refid="exasockets_8h_source"/>
            </node>
            <node id="346">
                <label>rapidjson/internal/meta.h</label>
                <link refid="meta_8h"/>
                <childnode refid="347" relation="include">
                </childnode>
                <childnode refid="348" relation="include">
                </childnode>
            </node>
            <node id="351">
                <label>rapidjson/schema.h</label>
                <link refid="schema_8h_source"/>
            </node>
            <node id="348">
                <label>rapidjson/document.h</label>
                <link refid="document_8h"/>
                <childnode refid="349" relation="include">
                </childnode>
                <childnode refid="350" relation="include">
                </childnode>
                <childnode refid="351" relation="include">
                </childnode>
            </node>
        </invincdepgraph>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>
                    source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>
                    Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);
                    <sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>
                    obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>http://opensource.org/licenses/MIT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed
                    <sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>
                    &quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>
                    implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>
                    limitations<sp/>under<sp/>the<sp/>License.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_INTERNAL_META_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_INTERNAL_META_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;../rapidjson.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__GNUC__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>defined(_MSC_VER)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(6334)</highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_TYPETRAITS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal"></highlight>
                <highlight class="comment">//@cond<sp/>RAPIDJSON_INTERNAL
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc"
                         kindref="member">RAPIDJSON_NAMESPACE_BEGIN
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal"></highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="namespaceinternal" kindref="compound">internal</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Helper<sp/>to<sp/>wrap/convert<sp/>arbitrary<sp/>types<sp/>to<sp/>
                    void,<sp/>useful<sp/>for<sp/>arbitrary<sp/>type<sp/>matching
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">Void<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="comment">//<sp/>BoolType,<sp/>TrueType,<sp/>FalseType
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Cond&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">BoolType<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">Value</ref>
                    <sp/>=<sp/>Cond;
                </highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>BoolType
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;
                </highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>BoolType&lt;true&gt;<sp/>TrueType;
                </highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>BoolType&lt;false&gt;<sp/>FalseType;
                </highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="comment">//<sp/>SelectIf,<sp/>BoolExpr,<sp/>NotExpr,<sp/>AndExpr,<sp/>OrExpr
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>C&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">SelectIfImpl<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T1,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T2&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">Apply<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>T1
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;<sp/>};
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">SelectIfImpl&lt;false&gt;<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T1,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T2&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">Apply<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>T2
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;<sp/>};
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>C,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T1,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T2&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">SelectIfCond<sp/>:<sp/>SelectIfImpl&lt;C&gt;::template<sp/>Apply&lt;T1,T2&gt;
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>C,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T1,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T2&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">SelectIf<sp/>:<sp/>SelectIfCond&lt;C::Value,<sp/>T1,<sp/>T2&gt;<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Cond1,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Cond2&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">AndExprCond<sp/>:<sp/>FalseType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">AndExprCond&lt;true,<sp/>true&gt;<sp/>:<sp/>TrueType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Cond1,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Cond2&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">OrExprCond<sp/>:<sp/>TrueType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">OrExprCond&lt;false,<sp/>false&gt;<sp/>:<sp/>FalseType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>C&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">BoolExpr<sp/>:<sp/>SelectIf&lt;C,TrueType,FalseType&gt;
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>C&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">NotExpr
                    <sp/>
                    <sp/>:<sp/>SelectIf&lt;C,FalseType,TrueType&gt;
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>C1,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>C2&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">AndExpr<sp/>:<sp/>AndExprCond&lt;C1::Value,<sp/>C2::Value&gt;
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>C1,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>C2&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">OrExpr
                    <sp/>
                    <sp/>:<sp/>OrExprCond&lt;C1::Value,<sp/>C2::Value&gt;
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="comment">//<sp/>AddConst,<sp/>MaybeAddConst,<sp/>RemoveConst
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">AddConst<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>T
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Constify,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">MaybeAddConst<sp/>:<sp/>SelectIfCond&lt;Constify,<sp/>const<sp/>T,<sp/>T&gt;
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">RemoveConst<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>T
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">RemoveConst&lt;const<sp/>T&gt;<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>T
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="comment">//<sp/>IsSame,<sp/>IsConst,<sp/>IsMoreConst,<sp/>IsPointer
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>U&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsSame<sp/>:<sp/>FalseType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsSame&lt;T,<sp/>T&gt;<sp/>:<sp/>TrueType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="85">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsConst<sp/>:<sp/>FalseType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsConst&lt;const<sp/>T&gt;<sp/>:<sp/>TrueType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CT,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsMoreConst</highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:<sp/>AndExpr&lt;IsSame&lt;typename<sp/>RemoveConst&lt;CT&gt;::Type,<sp/>typename<sp/>
                    RemoveConst&lt;T&gt;::Type&gt;,
                </highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BoolType&lt;IsConst&lt;CT&gt;::Value<sp/>&gt;=<sp/>IsConst&lt;T&gt;::Value&gt;<sp/>&gt;
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsPointer<sp/>:<sp/>FalseType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsPointer&lt;T*&gt;<sp/>:<sp/>TrueType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="comment">//<sp/>IsBaseOf
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_TYPETRAITS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>B,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>D&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsBaseOf</highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:<sp/>BoolType&lt;<sp/>::std::is_base_of&lt;B,D&gt;::value&gt;<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else<sp/>//<sp/>simplified<sp/>version<sp/>adopted<sp/>from<sp/>Boost
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>B,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>D&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsBaseOfImpl<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4" kindref="member">
                        RAPIDJSON_STATIC_ASSERT</ref>(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(B)<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4" kindref="member">
                        RAPIDJSON_STATIC_ASSERT</ref>(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(D)<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>char<sp/>(&amp;Yes)[1];
                </highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>char<sp/>(&amp;No)<sp/>[2];
                </highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>Yes<sp/>Check(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>D*,<sp/>T);
                </highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>No
                    <sp/>
                    <sp/>Check(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>B*,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">Host<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">operator</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>B*()
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">operator</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>D*();
                </highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">enum</highlight>
                <highlight class="normal"><sp/>{
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">Value</ref>
                    <sp/>=<sp/>(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Check(Host(),<sp/>0))<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Yes))<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>B,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>D&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">IsBaseOf</highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:<sp/>OrExpr&lt;IsSame&lt;B,<sp/>D&gt;,<sp/>BoolExpr&lt;IsBaseOfImpl&lt;B,<sp/>D&gt;<sp/>&gt;
                    <sp/>&gt;
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_HAS_CXX11_TYPETRAITS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="comment">//<sp/>EnableIf<sp/>/<sp/>DisableIf
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="133">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Condition,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">EnableIfCond
                    <sp/>
                    <sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>T
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">EnableIfCond&lt;false,<sp/>T&gt;<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>empty<sp/>*/
                </highlight>
                <highlight class="normal"><sp/>};
                </highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Condition,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">DisableIfCond<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>T
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">DisableIfCond&lt;true,<sp/>T&gt;<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>empty<sp/>*/
                </highlight>
                <highlight class="normal"><sp/>};
                </highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Condition,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">&gt;</highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">EnableIf<sp/>:<sp/>EnableIfCond&lt;Condition::Value,<sp/>T&gt;<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Condition,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">&gt;</highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">DisableIf<sp/>:<sp/>DisableIfCond&lt;Condition::Value,<sp/>T&gt;<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>SFINAE<sp/>helpers
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">SfinaeTag<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">RemoveSfinaeTag;</highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">RemoveSfinaeTag&lt;SfinaeTag&amp;(*)(T)&gt;<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>T
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>;<sp/>};
                </highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_REMOVEFPTR_(type)<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>typename<sp/>::RAPIDJSON_NAMESPACE::internal::RemoveSfinaeTag<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&lt;<sp/>::RAPIDJSON_NAMESPACE::internal::SfinaeTag&amp;(*)<sp/>type&gt;::Type
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_ENABLEIF(cond)<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>typename<sp/>::RAPIDJSON_NAMESPACE::internal::EnableIf<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&lt;RAPIDJSON_REMOVEFPTR_(cond)&gt;::Type<sp/>*<sp/>=<sp/>NULL
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="159">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_DISABLEIF(cond)<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="160">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>typename<sp/>::RAPIDJSON_NAMESPACE::internal::DisableIf<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="161">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&lt;RAPIDJSON_REMOVEFPTR_(cond)&gt;::Type<sp/>*<sp/>=<sp/>NULL
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_ENABLEIF_RETURN(cond,returntype)<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>typename<sp/>::RAPIDJSON_NAMESPACE::internal::EnableIf<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&lt;RAPIDJSON_REMOVEFPTR_(cond),<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_REMOVEFPTR_(returntype)&gt;::Type
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_DISABLEIF_RETURN(cond,returntype)<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="169">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>typename<sp/>::RAPIDJSON_NAMESPACE::internal::DisableIf<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&lt;RAPIDJSON_REMOVEFPTR_(cond),<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_REMOVEFPTR_(returntype)&gt;::Type
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal">}
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>namespace<sp/>internal
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1"
                         kindref="member">RAPIDJSON_NAMESPACE_END
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="normal"></highlight>
                <highlight class="comment">//@endcond</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>defined(__GNUC__)<sp/>||<sp/>defined(_MSC_VER)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="normal">RAPIDJSON_DIAG_POP</highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_INTERNAL_META_H_
                </highlight>
            </codeline>
        </programlisting>
        <location file="rapidjson/internal/meta.h"/>
    </compounddef>
</doxygen>
