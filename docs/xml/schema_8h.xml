<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="schema_8h" kind="file" language="C++">
        <compoundname>schema.h</compoundname>
        <includes refid="document_8h" local="yes">document.h</includes>
        <includes refid="pointer_8h" local="yes">pointer.h</includes>
        <includes local="no">cmath</includes>
        <includes refid="regex_8h" local="yes">internal/regex.h</includes>
        <incdepgraph>
            <node id="625">
                <label>internal/strfunc.h</label>
                <link refid="strfunc_8h_source"/>
                <childnode refid="611" relation="include">
                </childnode>
            </node>
            <node id="623">
                <label>limits</label>
            </node>
            <node id="627">
                <label>iterator</label>
            </node>
            <node id="628">
                <label>pointer.h</label>
                <link refid="pointer_8h_source"/>
                <childnode refid="604" relation="include">
                </childnode>
                <childnode refid="629" relation="include">
                </childnode>
            </node>
            <node id="629">
                <label>internal/itoa.h</label>
                <link refid="itoa_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="624">
                <label>error/error.h</label>
                <link refid="error_8h"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="630">
                <label>cmath</label>
            </node>
            <node id="610">
                <label>cassert</label>
            </node>
            <node id="617">
                <label>swap.h</label>
                <link refid="swap_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="612">
                <label>encodings.h</label>
                <link refid="encodings_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="622">
                <label>pow10.h</label>
                <link refid="pow10_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="621">
                <label>diyfp.h</label>
                <link refid="diyfp_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="620">
                <label>biginteger.h</label>
                <link refid="biginteger_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="605">
                <label>reader.h</label>
                <link refid="reader_8h"/>
                <childnode refid="606" relation="include">
                </childnode>
                <childnode refid="611" relation="include">
                </childnode>
                <childnode refid="613" relation="include">
                </childnode>
                <childnode refid="615" relation="include">
                </childnode>
                <childnode refid="616" relation="include">
                </childnode>
                <childnode refid="618" relation="include">
                </childnode>
                <childnode refid="623" relation="include">
                </childnode>
                <childnode refid="624" relation="include">
                </childnode>
            </node>
            <node id="631">
                <label>internal/regex.h</label>
                <link refid="regex_8h_source"/>
                <childnode refid="606" relation="include">
                </childnode>
                <childnode refid="611" relation="include">
                </childnode>
                <childnode refid="616" relation="include">
                </childnode>
            </node>
            <node id="611">
                <label>stream.h</label>
                <link refid="stream_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
                <childnode refid="612" relation="include">
                </childnode>
            </node>
            <node id="607">
                <label>rapidjson.h</label>
                <link refid="rapidjson_8h"/>
                <childnode refid="608" relation="include">
                </childnode>
                <childnode refid="609" relation="include">
                </childnode>
                <childnode refid="610" relation="include">
                </childnode>
            </node>
            <node id="613">
                <label>encodedstream.h</label>
                <link refid="encodedstream_8h_source"/>
                <childnode refid="611" relation="include">
                </childnode>
                <childnode refid="614" relation="include">
                </childnode>
            </node>
            <node id="619">
                <label>ieee754.h</label>
                <link refid="ieee754_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="616">
                <label>internal/stack.h</label>
                <link refid="stack_8h_source"/>
                <childnode refid="606" relation="include">
                </childnode>
                <childnode refid="617" relation="include">
                </childnode>
            </node>
            <node id="626">
                <label>new</label>
            </node>
            <node id="608">
                <label>cstdlib</label>
            </node>
            <node id="615">
                <label>internal/meta.h</label>
                <link refid="meta_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="614">
                <label>memorystream.h</label>
                <link refid="memorystream_8h_source"/>
                <childnode refid="611" relation="include">
                </childnode>
            </node>
            <node id="606">
                <label>allocators.h</label>
                <link refid="allocators_8h_source"/>
                <childnode refid="607" relation="include">
                </childnode>
            </node>
            <node id="603">
                <label>rapidjson/schema.h</label>
                <link refid="schema_8h"/>
                <childnode refid="604" relation="include">
                </childnode>
                <childnode refid="628" relation="include">
                </childnode>
                <childnode refid="630" relation="include">
                </childnode>
                <childnode refid="631" relation="include">
                </childnode>
            </node>
            <node id="618">
                <label>internal/strtod.h</label>
                <link refid="strtod_8h_source"/>
                <childnode refid="619" relation="include">
                </childnode>
                <childnode refid="620" relation="include">
                </childnode>
                <childnode refid="621" relation="include">
                </childnode>
                <childnode refid="622" relation="include">
                </childnode>
            </node>
            <node id="609">
                <label>cstring</label>
            </node>
            <node id="604">
                <label>document.h</label>
                <link refid="document_8h"/>
                <childnode refid="605" relation="include">
                </childnode>
                <childnode refid="615" relation="include">
                </childnode>
                <childnode refid="625" relation="include">
                </childnode>
                <childnode refid="614" relation="include">
                </childnode>
                <childnode refid="613" relation="include">
                </childnode>
                <childnode refid="626" relation="include">
                </childnode>
                <childnode refid="623" relation="include">
                </childnode>
                <childnode refid="627" relation="include">
                </childnode>
            </node>
        </incdepgraph>
        <innerclass refid="class_generic_schema_document" prot="public">GenericSchemaDocument</innerclass>
        <innerclass refid="classinternal_1_1_schema" prot="public">internal::Schema</innerclass>
        <innerclass refid="classinternal_1_1_i_schema_validator" prot="public">internal::ISchemaValidator</innerclass>
        <innerclass refid="classinternal_1_1_i_schema_state_factory" prot="public">internal::ISchemaStateFactory
        </innerclass>
        <innerclass refid="classinternal_1_1_hasher" prot="public">internal::Hasher</innerclass>
        <innerclass refid="structinternal_1_1_hasher_1_1_number" prot="private">internal::Hasher::Number</innerclass>
        <innerclass refid="unioninternal_1_1_hasher_1_1_number_1_1_u" prot="public">internal::Hasher::Number::U
        </innerclass>
        <innerclass refid="structinternal_1_1_schema_validation_context" prot="public">
            internal::SchemaValidationContext
        </innerclass>
        <innerclass refid="classinternal_1_1_schema" prot="public">internal::Schema</innerclass>
        <innerclass refid="structinternal_1_1_schema_1_1_schema_array" prot="private">internal::Schema::SchemaArray
        </innerclass>
        <innerclass refid="structinternal_1_1_schema_1_1_property" prot="private">internal::Schema::Property
        </innerclass>
        <innerclass refid="structinternal_1_1_schema_1_1_pattern_property" prot="private">
            internal::Schema::PatternProperty
        </innerclass>
        <innerclass refid="structinternal_1_1_token_helper" prot="public">internal::TokenHelper</innerclass>
        <innerclass refid="structinternal_1_1_token_helper_3_01_stack_00_01char_01_4" prot="public">
            internal::TokenHelper&lt; Stack, char &gt;</innerclass>
        <innerclass refid="class_i_generic_remote_schema_document_provider" prot="public">
            IGenericRemoteSchemaDocumentProvider
        </innerclass>
        <innerclass refid="class_generic_schema_document" prot="public">GenericSchemaDocument</innerclass>
        <innerclass refid="struct_generic_schema_document_1_1_schema_ref_entry" prot="private">
            GenericSchemaDocument::SchemaRefEntry
        </innerclass>
        <innerclass refid="struct_generic_schema_document_1_1_schema_entry" prot="private">
            GenericSchemaDocument::SchemaEntry
        </innerclass>
        <innerclass refid="class_generic_schema_validator" prot="public">GenericSchemaValidator</innerclass>
        <innerclass refid="class_schema_validating_reader" prot="public">SchemaValidatingReader</innerclass>
        <innernamespace refid="namespaceinternal">internal</innernamespace>
        <sectiondef kind="define">
            <memberdef kind="define" id="schema_8h_1a6b8264e3ff82da125826f173a42c67e9" prot="public" static="no">
                <name>RAPIDJSON_SCHEMA_USE_INTERNALREGEX</name>
                <initializer>1</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="23" column="9" bodyfile="rapidjson/schema.h" bodystart="23"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1a9486b808605189c7ee677bb41d52f368" prot="public" static="no">
                <name>RAPIDJSON_SCHEMA_USE_STDREGEX</name>
                <initializer>0</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="31" column="10" bodyfile="rapidjson/schema.h" bodystart="31"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1a67269b1317b737ca47bcf5636091db1e" prot="public" static="no">
                <name>RAPIDJSON_SCHEMA_HAS_REGEX</name>
                <initializer>1</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="41" column="9" bodyfile="rapidjson/schema.h" bodystart="41"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1a40c690b6fd0b7ae8d8484b613255cc72" prot="public" static="no">
                <name>RAPIDJSON_SCHEMA_VERBOSE</name>
                <initializer>0</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="47" column="9" bodyfile="rapidjson/schema.h" bodystart="47"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1a876f2526fe0190b8c5b44dfc77c5b259" prot="public" static="no">
                <name>RAPIDJSON_INVALID_KEYWORD_VERBOSE</name>
                <param>
                    <defname>keyword</defname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="114" column="10" bodyfile="rapidjson/schema.h" bodystart="114"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1abf82306dd6fbd0fba9a5373b9ebe1c3c" prot="public" static="no">
                <name>RAPIDJSON_INVALID_KEYWORD_RETURN</name>
                <param>
                    <defname>keyword</defname>
                </param>
                <initializer>RAPIDJSON_MULTILINEMACRO_BEGIN\
                    context.invalidKeyword = keyword.GetString();\
                    RAPIDJSON_INVALID_KEYWORD_VERBOSE(keyword.GetString());\
                    return false;\
                    RAPIDJSON_MULTILINEMACRO_END
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="117" column="9" bodyfile="rapidjson/schema.h" bodystart="117"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1ab63115d6dc8a0c74d5fb0d66f217cabb" prot="public" static="no">
                <name>RAPIDJSON_STRING_</name>
                <param>
                    <defname>name</defname>
                </param>
                <param>
                    <defname>...</defname>
                </param>
                <initializer>static const ValueType&amp; Get##name##String() {\
                    static const Ch s[] = { __VA_ARGS__, &apos;\0&apos; };\
                    static const ValueType v(s, sizeof(s) / sizeof(Ch) - 1);\
                    return v;\
                    }
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="881" column="9" bodyfile="rapidjson/schema.h" bodystart="881"
                          bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1a722c98cfe486c35d086ea33144f4a3b8" prot="public" static="no">
                <name>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_</name>
                <param></param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="1660" column="10" bodyfile="rapidjson/schema.h"
                          bodystart="1660" bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1a25701b28a823cc7621f1e01ae7031007" prot="public" static="no">
                <name>RAPIDJSON_SCHEMA_HANDLE_BEGIN_</name>
                <param>
                    <defname>method</defname>
                </param>
                <param>
                    <defname>arg1</defname>
                </param>
                <initializer>if (!valid_) return false; \
                    if (!BeginValue() || !CurrentSchema().method arg1) {\
                    RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_();\
                    return valid_ = false;\
                    }
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="1663" column="9" bodyfile="rapidjson/schema.h"
                          bodystart="1663" bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1af17aaed9cdb88ac6faa2b7ca7029da63" prot="public" static="no">
                <name>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_</name>
                <param>
                    <defname>method</defname>
                </param>
                <param>
                    <defname>arg2</defname>
                </param>
                <initializer>for (Context* context = schemaStack_.template Bottom&lt;Context&gt;(); context !=
                    schemaStack_.template End&lt;Context&gt;(); context++) {\
                    if (context-&gt;hasher)\
                    static_cast&lt;HasherType*&gt;(context-&gt;hasher)-&gt;method arg2;\
                    if (context-&gt;validators)\
                    for (<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref> i_
                    = 0; i_ &lt; context-&gt;validatorCount; i_++)\
                    static_cast&lt;<ref refid="class_generic_schema_validator" kindref="compound">
                        GenericSchemaValidator</ref>*&gt;(context-&gt;validators[i_])-&gt;method arg2;\
                    if (context-&gt;patternPropertiesValidators)\
                    for (<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref> i_
                    = 0; i_ &lt; context-&gt;patternPropertiesValidatorCount; i_++)\
                    static_cast&lt;<ref refid="class_generic_schema_validator" kindref="compound">
                        GenericSchemaValidator</ref>*&gt;(context-&gt;patternPropertiesValidators[i_])-&gt;method arg2;\
                    }
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="1670" column="9" bodyfile="rapidjson/schema.h"
                          bodystart="1670" bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1ab1cb400ef08159e3e417f03c8adefaff" prot="public" static="no">
                <name>RAPIDJSON_SCHEMA_HANDLE_END_</name>
                <param>
                    <defname>method</defname>
                </param>
                <param>
                    <defname>arg2</defname>
                </param>
                <initializer>return valid_ = EndValue() &amp;&amp; outputHandler_.method arg2</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="1682" column="9" bodyfile="rapidjson/schema.h"
                          bodystart="1682" bodyend="-1"/>
            </memberdef>
            <memberdef kind="define" id="schema_8h_1a8c347782f5ba7abab760e5dbc5795c41" prot="public" static="no">
                <name>RAPIDJSON_SCHEMA_HANDLE_VALUE_</name>
                <param>
                    <defname>method</defname>
                </param>
                <param>
                    <defname>arg1</defname>
                </param>
                <param>
                    <defname>arg2</defname>
                </param>
                <initializer>RAPIDJSON_SCHEMA_HANDLE_BEGIN_ (method, arg1);\
                    RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(method, arg2);\
                    RAPIDJSON_SCHEMA_HANDLE_END_ (method, arg2)
                </initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="1685" column="9" bodyfile="rapidjson/schema.h"
                          bodystart="1685" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="typedef">
            <memberdef kind="typedef" id="schema_8h_1a49355f280272b969cfd756ef556935c4" prot="public" static="no">
                <type><ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>&lt; <ref
                        refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value
                </ref> &gt;
                </type>
                <definition>typedef GenericSchemaDocument&lt;Value&gt; SchemaDocument</definition>
                <argsstring></argsstring>
                <name>SchemaDocument</name>
                <briefdescription>
                    <para>
                        <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>
                        using Value type.
                    </para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="1531" column="1" bodyfile="rapidjson/schema.h"
                          bodystart="1531" bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="schema_8h_1afec32b8c8d16360397849fd8bcd28441" prot="public" static="no">
                <type><ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">
                    IGenericRemoteSchemaDocumentProvider</ref>&lt; <ref refid="class_generic_schema_document"
                                                                        kindref="compound">SchemaDocument
                </ref> &gt;
                </type>
                <definition>typedef IGenericRemoteSchemaDocumentProvider&lt;SchemaDocument&gt;
                    IRemoteSchemaDocumentProvider
                </definition>
                <argsstring></argsstring>
                <name>IRemoteSchemaDocumentProvider</name>
                <briefdescription>
                    <para>
                        <ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">
                            IGenericRemoteSchemaDocumentProvider
                        </ref>
                        using SchemaDocument.
                    </para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="1533" column="1" bodyfile="rapidjson/schema.h"
                          bodystart="1533" bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="schema_8h_1a09740efe5c13e9c508a4f067d85aa8c0" prot="public" static="no">
                <type><ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>&lt; <ref
                        refid="class_generic_schema_document" kindref="compound">SchemaDocument
                </ref> &gt;
                </type>
                <definition>typedef GenericSchemaValidator&lt;SchemaDocument&gt; SchemaValidator</definition>
                <argsstring></argsstring>
                <name>SchemaValidator</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/schema.h" line="1933" column="1" bodyfile="rapidjson/schema.h"
                          bodystart="1933" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>
                    source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available-&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>
                    Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip-&gt;<sp/>All<sp/>rights<sp/>reserved-&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);
                    <sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License-&gt;<sp/>You<sp/>may
                    <sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>http://opensource-&gt;org/licenses/MIT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed
                    <sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>
                    &quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>
                    implied-&gt;<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>
                    limitations<sp/>under<sp/>the<sp/>License-&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_SCHEMA_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="document_8h" kindref="compound">
                    document.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;pointer.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;cmath&gt;
                </highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>abs,<sp/>floor
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>!defined(RAPIDJSON_SCHEMA_USE_INTERNALREGEX)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX<sp/>1
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX<sp/>0
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>!RAPIDJSON_SCHEMA_USE_INTERNALREGEX<sp/>&amp;&amp;<sp/>
                    !defined(RAPIDJSON_SCHEMA_USE_STDREGEX)<sp/>&amp;&amp;<sp/>(__cplusplus<sp/>&gt;=201103L<sp/>||<sp/>
                    (defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1800))
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX<sp/>1
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX<sp/>0
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;internal/regex.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#elif<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;regex&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX<sp/>||<sp/>
                    RAPIDJSON_SCHEMA_USE_STDREGEX
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HAS_REGEX<sp/>1
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HAS_REGEX<sp/>0
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_VERBOSE<sp/>0
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;stringbuffer.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>defined(__GNUC__)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__clang__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(weak-vtables)</highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(exit-time-destructors)</highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(c++98-compat-pedantic)</highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(variadic-macros)</highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>_MSC_VER
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(4512)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>assignment<sp/>operator<sp/>could<sp/>not<sp/>be<sp/>generated
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc"
                         kindref="member">RAPIDJSON_NAMESPACE_BEGIN
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="comment">//<sp/>Verbose<sp/>Utilities
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal"></highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="namespaceinternal" kindref="compound">internal</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>PrintInvalidKeyword(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>keyword)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf(
                </highlight>
                <highlight class="stringliteral">&quot;Fail<sp/>keyword:<sp/>%s\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>keyword);
                </highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>PrintInvalidKeyword(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">wchar_t</highlight>
                <highlight class="normal">*<sp/>keyword)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="85">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>wprintf(L
                </highlight>
                <highlight class="stringliteral">&quot;Fail<sp/>keyword:<sp/>%ls\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>keyword);
                </highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>PrintInvalidDocument(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>document)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf(
                </highlight>
                <highlight class="stringliteral">&quot;Fail<sp/>document:<sp/>%s\n\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>PrintInvalidDocument(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">wchar_t</highlight>
                <highlight class="normal">*<sp/>document)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>wprintf(L
                </highlight>
                <highlight class="stringliteral">&quot;Fail<sp/>document:<sp/>%ls\n\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>PrintValidatorPointers(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>depth,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>s,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>d)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf(
                </highlight>
                <highlight class="stringliteral">&quot;S:<sp/>%*s%s\nD:<sp/>%*s%s\n\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>depth<sp/>*<sp/>4,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;<sp/>&quot;
                </highlight>
                <highlight class="normal">,<sp/>s,<sp/>depth<sp/>*<sp/>4,
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;<sp/>&quot;
                </highlight>
                <highlight class="normal">,<sp/>d);
                </highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>PrintValidatorPointers(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>depth,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">wchar_t</highlight>
                <highlight class="normal">*<sp/>s,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">wchar_t</highlight>
                <highlight class="normal">*<sp/>d)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>wprintf(L
                </highlight>
                <highlight class="stringliteral">&quot;S:<sp/>%*ls%ls\nD:<sp/>%*ls%ls\n\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>depth<sp/>*<sp/>4,<sp/>L
                </highlight>
                <highlight class="stringliteral">&quot;<sp/>&quot;
                </highlight>
                <highlight class="normal">,<sp/>s,<sp/>depth<sp/>*<sp/>4,<sp/>L
                </highlight>
                <highlight class="stringliteral">&quot;<sp/>&quot;
                </highlight>
                <highlight class="normal">,<sp/>d);
                </highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal">}
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>namespace<sp/>internal
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="comment">//<sp/>RAPIDJSON_INVALID_KEYWORD_RETURN
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_INVALID_KEYWORD_VERBOSE(keyword)<sp/>
                    internal::PrintInvalidKeyword(keyword)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_INVALID_KEYWORD_VERBOSE(keyword)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(keyword)\
                </highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="preprocessor">RAPIDJSON_MULTILINEMACRO_BEGIN\</highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.invalidKeyword<sp/>=<sp/>keyword.GetString();\
                </highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_VERBOSE(keyword.GetString());\
                </highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>return<sp/>false;\
                </highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="preprocessor">RAPIDJSON_MULTILINEMACRO_END</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="comment">//<sp/>Forward<sp/>declarations
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_schema_document" kindref="compound">
                    GenericSchemaDocument</ref>;
                </highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal"></highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="namespaceinternal" kindref="compound">internal</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&gt;
                </highlight>
            </codeline>
            <codeline lineno="133" refid="classinternal_1_1_schema" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="classinternal_1_1_schema" kindref="compound">Schema</ref>;
                </highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="comment">//<sp/>ISchemaValidator
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="138" refid="classinternal_1_1_i_schema_validator" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal"><sp/>~<ref refid="classinternal_1_1_i_schema_validator" kindref="compound">
                    ISchemaValidator</ref>()<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsValid()
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="comment">//<sp/>ISchemaStateFactory
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaType&gt;
                </highlight>
            </codeline>
            <codeline lineno="148" refid="classinternal_1_1_i_schema_state_factory" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="classinternal_1_1_i_schema_state_factory" kindref="compound">ISchemaStateFactory</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal"><sp/>~<ref refid="classinternal_1_1_i_schema_state_factory"
                                                     kindref="compound">ISchemaStateFactory</ref>()<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>*<sp/>
                    CreateSchemaValidator(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType&amp;)<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>DestroySchemaValidator(<ref refid="classinternal_1_1_i_schema_validator"
                                                                           kindref="compound">ISchemaValidator</ref>*
                    <sp/>validator)<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>CreateHasher()<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal"><sp/>uint64_t<sp/>GetHashCode(
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>hasher)<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>DestroryHasher(
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>hasher)<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>MallocState(
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>size)<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>FreeState(
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>p)<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="159">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="161">
                <highlight class="comment">//<sp/>Hasher
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>For<sp/>comparison<sp/>of<sp/>compound<sp/>value
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="165" refid="classinternal_1_1_hasher" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="classinternal_1_1_hasher" kindref="compound">Hasher</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding::Ch<sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="169">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_hasher" kindref="compound">Hasher</ref>(Allocator*<sp/>allocator<sp/>=
                    <sp/>0,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>stackCapacity<sp/>=<sp/>kDefaultSize)<sp/>:<sp/>stack_(allocator,<sp/>
                    stackCapacity)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Null()<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteType(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087"
                        kindref="member">kNullType</ref>);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Bool(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>b)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteType(b<sp/>?
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6"
                         kindref="member">kTrueType
                    </ref>
                    <sp/>:
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54"
                         kindref="member">kFalseType</ref>);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i)<sp/>{<sp/>Number<sp/>n;<sp/>n.u.i<sp/>=<sp/>i;<sp/>n.d<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(i);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteNumber(n);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u)<sp/>{<sp/>Number<sp/>n;<sp/>n.u.u<sp/>=<sp/>u;<sp/>n.d<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(u);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteNumber(n);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int64(int64_t<sp/>i)<sp/>{<sp/>Number<sp/>n;<sp/>n.u.i<sp/>=<sp/>i;<sp/>
                    n.d<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(i);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteNumber(n);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint64(uint64_t<sp/>u)<sp/>{<sp/>Number<sp/>n;<sp/>n.u.u<sp/>=<sp/>u;
                    <sp/>n.d<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(u);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteNumber(n);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_double" kindref="compound">Double</ref>(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)<sp/>{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Number<sp/>n;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)<sp/>n.u.i<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">int64_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(d);</highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>n.u.u<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">uint64_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(d);
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>n.d<sp/>=<sp/>d;
                </highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteNumber(n);
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RawNumber(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>WriteBuffer(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                        kindref="member">kNumberType</ref>,<sp/>str,<sp/>len<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Ch));</highlight>
            </codeline>
            <codeline lineno="187">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="190">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>String(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>WriteBuffer(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                        kindref="member">kStringType</ref>,<sp/>str,<sp/>len<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Ch));</highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartObject()<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Key(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>String(str,<sp/>len,<sp/>copy);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndObject(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>memberCount)<sp/>{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>h<sp/>=<sp/>Hash(0,
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                         kindref="member">kObjectType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t*<sp/>kv<sp/>=<sp/>stack_.template<sp/>Pop&lt;uint64_t&gt;(memberCount<sp/>*<sp/>2);
                </highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>memberCount;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>h<sp/>^=<sp/>Hash(kv[i<sp/>*<sp/>2],<sp/>kv[i<sp/>*<sp/>2<sp/>+<sp/>1]);
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Use<sp/>xor<sp/>to<sp/>achieve<sp/>member<sp/>order<sp/>insensitive
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*stack_.template<sp/>Push&lt;uint64_t&gt;()<sp/>=<sp/>h;
                </highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartArray()<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndArray(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>elementCount)<sp/>{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>h<sp/>=<sp/>Hash(0,
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                         kindref="member">kArrayType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t*<sp/>e<sp/>=<sp/>stack_.template<sp/>Pop&lt;uint64_t&gt;(elementCount);
                </highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>elementCount;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>h<sp/>=<sp/>Hash(h,<sp/>e[i]);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Use<sp/>hash<sp/>to<sp/>achieve<sp/>element<sp/>order<sp/>sensitive
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*stack_.template<sp/>Push&lt;uint64_t&gt;()<sp/>=<sp/>h;
                </highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsValid()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>stack_.GetSize()<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(uint64_t);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>GetHashCode()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsValid());
                </highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*stack_.template<sp/>Top&lt;uint64_t&gt;();
                </highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="222">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="223">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="224">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>kDefaultSize<sp/>=<sp/>256;
                </highlight>
            </codeline>
            <codeline lineno="225">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">Number<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="226" refid="unioninternal_1_1_hasher_1_1_number_1_1_u" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">union
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="unioninternal_1_1_hasher_1_1_number_1_1_u" kindref="compound">U</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="227">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>u;
                </highlight>
            </codeline>
            <codeline lineno="228">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>int64_t<sp/>i;
                </highlight>
            </codeline>
            <codeline lineno="229">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}u;
                </highlight>
            </codeline>
            <codeline lineno="230">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d;
                </highlight>
            </codeline>
            <codeline lineno="231">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="232">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="233">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteType(
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                    <sp/>type)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteBuffer(type,<sp/>0,<sp/>0);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="235">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteNumber(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Number&amp;<sp/>n)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>WriteBuffer(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                        kindref="member">kNumberType</ref>,<sp/>&amp;n,
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(n));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="236">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="237">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>WriteBuffer(
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                    <sp/>type,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>len)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="238">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>FNV-1a<sp/>from<sp/>http://isthe.com/chongo/tech/comp/fnv/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="239">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>h<sp/>=<sp/>Hash(<ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f"
                                                            kindref="member">RAPIDJSON_UINT64_C2</ref>(0x84222325,<sp/>
                    0xcbf29ce4),<sp/>type);
                </highlight>
            </codeline>
            <codeline lineno="240">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>d<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keyword">const
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(data);</highlight>
            </codeline>
            <codeline lineno="241">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="242">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>h<sp/>=<sp/>Hash(h,<sp/>d[i]);
                </highlight>
            </codeline>
            <codeline lineno="243">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*stack_.template<sp/>Push&lt;uint64_t&gt;()<sp/>=<sp/>h;
                </highlight>
            </codeline>
            <codeline lineno="244">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="245">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="246">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="247">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>uint64_t<sp/>Hash(uint64_t<sp/>h,<sp/>uint64_t<sp/>d)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="248">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>uint64_t<sp/>kPrime<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                        RAPIDJSON_UINT64_C2</ref>(0x00000100,<sp/>0x000001b3);
                </highlight>
            </codeline>
            <codeline lineno="249">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>h<sp/>^=<sp/>d;
                </highlight>
            </codeline>
            <codeline lineno="250">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>h<sp/>*=<sp/>kPrime;
                </highlight>
            </codeline>
            <codeline lineno="251">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>h;
                </highlight>
            </codeline>
            <codeline lineno="252">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="253">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="254">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_stack" kindref="compound">Stack&lt;Allocator&gt;</ref>
                    <sp/>stack_;
                </highlight>
            </codeline>
            <codeline lineno="255">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="256">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="258">
                <highlight class="comment">//<sp/>SchemaValidationContext
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="259">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="260">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&gt;
                </highlight>
            </codeline>
            <codeline lineno="261" refid="structinternal_1_1_schema_validation_context" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structinternal_1_1_schema_validation_context" kindref="compound">
                        SchemaValidationContext
                    </ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="262">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_schema" kindref="compound">Schema&lt;SchemaDocumentType&gt;</ref>
                    <sp/>
                    <ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>;
                </highlight>
            </codeline>
            <codeline lineno="263">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_i_schema_state_factory" kindref="compound">ISchemaStateFactory&lt;SchemaType&gt;</ref>
                    <sp/>
                    <ref refid="classinternal_1_1_i_schema_state_factory" kindref="compound">
                        SchemaValidatorFactoryType</ref>;
                </highlight>
            </codeline>
            <codeline lineno="264">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaType::ValueType<sp/>ValueType;
                </highlight>
            </codeline>
            <codeline lineno="265">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::Ch<sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="266">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="267">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">enum</highlight>
                <highlight class="normal"><sp/>PatternValidatorType<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="268">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kPatternValidatorOnly,
                </highlight>
            </codeline>
            <codeline lineno="269">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kPatternValidatorWithProperty,
                </highlight>
            </codeline>
            <codeline lineno="270">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kPatternValidatorWithAdditionalProperty
                </highlight>
            </codeline>
            <codeline lineno="271">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="272">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="273">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="structinternal_1_1_schema_validation_context" kindref="compound">
                        SchemaValidationContext</ref>(SchemaValidatorFactoryType&amp;<sp/>f,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>s)<sp/>:
                </highlight>
            </codeline>
            <codeline lineno="274">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>factory(f),
                </highlight>
            </codeline>
            <codeline lineno="275">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schema(s),
                </highlight>
            </codeline>
            <codeline lineno="276">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>valueSchema(),
                </highlight>
            </codeline>
            <codeline lineno="277">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>invalidKeyword(),
                </highlight>
            </codeline>
            <codeline lineno="278">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hasher(),
                </highlight>
            </codeline>
            <codeline lineno="279">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>arrayElementHashCodes(),
                </highlight>
            </codeline>
            <codeline lineno="280">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>validators(),
                </highlight>
            </codeline>
            <codeline lineno="281">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>validatorCount(),
                </highlight>
            </codeline>
            <codeline lineno="282">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternPropertiesValidators(),
                </highlight>
            </codeline>
            <codeline lineno="283">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternPropertiesValidatorCount(),
                </highlight>
            </codeline>
            <codeline lineno="284">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternPropertiesSchemas(),
                </highlight>
            </codeline>
            <codeline lineno="285">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternPropertiesSchemaCount(),
                </highlight>
            </codeline>
            <codeline lineno="286">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>valuePatternValidatorType(kPatternValidatorOnly),
                </highlight>
            </codeline>
            <codeline lineno="287">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>propertyExist(),
                </highlight>
            </codeline>
            <codeline lineno="288">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>inArray(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">),</highlight>
            </codeline>
            <codeline lineno="289">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>valueUniqueness(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">),</highlight>
            </codeline>
            <codeline lineno="290">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>arrayUniqueness(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="291">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="292">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="293">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="294">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~<ref refid="structinternal_1_1_schema_validation_context" kindref="compound">
                    SchemaValidationContext</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="295">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(hasher)
                </highlight>
            </codeline>
            <codeline lineno="296">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>factory.DestroryHasher(hasher);
                </highlight>
            </codeline>
            <codeline lineno="297">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(validators)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="298">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>validatorCount;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="299">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>factory.DestroySchemaValidator(validators[i]);
                </highlight>
            </codeline>
            <codeline lineno="300">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>factory.FreeState(validators);
                </highlight>
            </codeline>
            <codeline lineno="301">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="302">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(patternPropertiesValidators)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="303">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>patternPropertiesValidatorCount;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="304">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>factory.DestroySchemaValidator(patternPropertiesValidators[i]);
                </highlight>
            </codeline>
            <codeline lineno="305">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>factory.FreeState(patternPropertiesValidators);
                </highlight>
            </codeline>
            <codeline lineno="306">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="307">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(patternPropertiesSchemas)
                </highlight>
            </codeline>
            <codeline lineno="308">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>factory.FreeState(patternPropertiesSchemas);
                </highlight>
            </codeline>
            <codeline lineno="309">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(propertyExist)
                </highlight>
            </codeline>
            <codeline lineno="310">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>factory.FreeState(propertyExist);
                </highlight>
            </codeline>
            <codeline lineno="311">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="312">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="313">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaValidatorFactoryType&amp;<sp/>factory;
                </highlight>
            </codeline>
            <codeline lineno="314">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>schema;
                </highlight>
            </codeline>
            <codeline lineno="315">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>valueSchema;
                </highlight>
            </codeline>
            <codeline lineno="316">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>invalidKeyword;
                </highlight>
            </codeline>
            <codeline lineno="317">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>hasher;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Only<sp/>validator<sp/>access
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="318">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>arrayElementHashCodes;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Only<sp/>validator<sp/>access<sp/>this
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="319">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>**<sp/>
                    validators;
                </highlight>
            </codeline>
            <codeline lineno="320">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>validatorCount;
                </highlight>
            </codeline>
            <codeline lineno="321">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_i_schema_validator" kindref="compound">ISchemaValidator</ref>**<sp/>
                    patternPropertiesValidators;
                </highlight>
            </codeline>
            <codeline lineno="322">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>patternPropertiesValidatorCount;
                </highlight>
            </codeline>
            <codeline lineno="323">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType**<sp/>patternPropertiesSchemas;
                </highlight>
            </codeline>
            <codeline lineno="324">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>patternPropertiesSchemaCount;
                </highlight>
            </codeline>
            <codeline lineno="325">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PatternValidatorType<sp/>valuePatternValidatorType;
                </highlight>
            </codeline>
            <codeline lineno="326">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PatternValidatorType<sp/>objectPatternValidatorType;
                </highlight>
            </codeline>
            <codeline lineno="327">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>arrayElementIndex;
                </highlight>
            </codeline>
            <codeline lineno="328">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">*<sp/>propertyExist;
                </highlight>
            </codeline>
            <codeline lineno="329">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>inArray;
                </highlight>
            </codeline>
            <codeline lineno="330">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>valueUniqueness;
                </highlight>
            </codeline>
            <codeline lineno="331">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>arrayUniqueness;
                </highlight>
            </codeline>
            <codeline lineno="332">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="333">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="335">
                <highlight class="comment">//<sp/>Schema
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="336">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="337">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&gt;
                </highlight>
            </codeline>
            <codeline lineno="338">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="classinternal_1_1_schema" kindref="compound">Schema</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="339">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="340">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType::ValueType<sp/>ValueType;
                </highlight>
            </codeline>
            <codeline lineno="341">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType::AllocatorType<sp/>AllocatorType;
                </highlight>
            </codeline>
            <codeline lineno="342">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType::PointerType<sp/>PointerType;
                </highlight>
            </codeline>
            <codeline lineno="343">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::EncodingType<sp/>EncodingType;
                </highlight>
            </codeline>
            <codeline lineno="344">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>EncodingType::Ch<sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="345">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="structinternal_1_1_schema_validation_context" kindref="compound">SchemaValidationContext&lt;SchemaDocumentType&gt;</ref>
                    <sp/>Context;
                </highlight>
            </codeline>
            <codeline lineno="346">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_schema" kindref="compound">Schema&lt;SchemaDocumentType&gt;</ref>
                    <sp/>
                    <ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>;
                </highlight>
            </codeline>
            <codeline lineno="347">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType,
                        AllocatorType&gt;</ref>
                    <sp/>SValue;
                </highlight>
            </codeline>
            <codeline lineno="348">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_schema_document" kindref="compound">
                    GenericSchemaDocument</ref>&lt;ValueType,<sp/>AllocatorType&gt;;
                </highlight>
            </codeline>
            <codeline lineno="349">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="350">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_schema" kindref="compound">Schema</ref>(SchemaDocumentType*<sp/>
                    schemaDocument,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>p,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>value,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>document,<sp/>AllocatorType*<sp/>allocator)<sp/>:
                </highlight>
            </codeline>
            <codeline lineno="351">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>allocator_(allocator),
                </highlight>
            </codeline>
            <codeline lineno="352">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>enum_(),
                </highlight>
            </codeline>
            <codeline lineno="353">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>enumCount_(),
                </highlight>
            </codeline>
            <codeline lineno="354">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>not_(),
                </highlight>
            </codeline>
            <codeline lineno="355">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>type_((1<sp/>&lt;&lt;<sp/>kTotalSchemaType)<sp/>-<sp/>1),
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>typeless
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="356">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>validatorCount_(),
                </highlight>
            </codeline>
            <codeline lineno="357">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>properties_(),
                </highlight>
            </codeline>
            <codeline lineno="358">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>additionalPropertiesSchema_(),
                </highlight>
            </codeline>
            <codeline lineno="359">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternProperties_(),
                </highlight>
            </codeline>
            <codeline lineno="360">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternPropertyCount_(),
                </highlight>
            </codeline>
            <codeline lineno="361">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>propertyCount_(),
                </highlight>
            </codeline>
            <codeline lineno="362">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>minProperties_(),
                </highlight>
            </codeline>
            <codeline lineno="363">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>maxProperties_(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">
                    SizeType</ref>(~0)),
                </highlight>
            </codeline>
            <codeline lineno="364">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>additionalProperties_(
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">),</highlight>
            </codeline>
            <codeline lineno="365">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hasDependencies_(),
                </highlight>
            </codeline>
            <codeline lineno="366">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hasRequired_(),
                </highlight>
            </codeline>
            <codeline lineno="367">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hasSchemaDependencies_(),
                </highlight>
            </codeline>
            <codeline lineno="368">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>additionalItemsSchema_(),
                </highlight>
            </codeline>
            <codeline lineno="369">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>itemsList_(),
                </highlight>
            </codeline>
            <codeline lineno="370">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>itemsTuple_(),
                </highlight>
            </codeline>
            <codeline lineno="371">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>itemsTupleCount_(),
                </highlight>
            </codeline>
            <codeline lineno="372">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>minItems_(),
                </highlight>
            </codeline>
            <codeline lineno="373">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>maxItems_(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">
                    SizeType</ref>(~0)),
                </highlight>
            </codeline>
            <codeline lineno="374">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>additionalItems_(
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">),</highlight>
            </codeline>
            <codeline lineno="375">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uniqueItems_(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">),</highlight>
            </codeline>
            <codeline lineno="376">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>pattern_(),
                </highlight>
            </codeline>
            <codeline lineno="377">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>minLength_(0),
                </highlight>
            </codeline>
            <codeline lineno="378">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>maxLength_(~<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">
                    SizeType</ref>(0)),
                </highlight>
            </codeline>
            <codeline lineno="379">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>exclusiveMinimum_(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">),</highlight>
            </codeline>
            <codeline lineno="380">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>exclusiveMaximum_(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="381">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="382">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType::ValueType<sp/>ValueType;
                </highlight>
            </codeline>
            <codeline lineno="383">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::ConstValueIterator<sp/>ConstValueIterator;
                </highlight>
            </codeline>
            <codeline lineno="384">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::ConstMemberIterator<sp/>ConstMemberIterator;
                </highlight>
            </codeline>
            <codeline lineno="385">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="386">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!value.IsObject())
                </highlight>
            </codeline>
            <codeline lineno="387">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="388">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="389">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>GetTypeString()))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="390">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>type_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="391">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsString())
                </highlight>
            </codeline>
            <codeline lineno="392">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AddType(*v);
                </highlight>
            </codeline>
            <codeline lineno="393">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsArray())
                </highlight>
            </codeline>
            <codeline lineno="394">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>v-&gt;Begin();<sp/>itr<sp/>!=<sp/>
                    v-&gt;End();<sp/>++itr)
                </highlight>
            </codeline>
            <codeline lineno="395">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AddType(*itr);
                </highlight>
            </codeline>
            <codeline lineno="396">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="397">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="398">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>GetEnumString()))
                </highlight>
            </codeline>
            <codeline lineno="399">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsArray()<sp/>&amp;&amp;<sp/>v-&gt;Size()<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="400">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>enum_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">uint64_t*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(allocator_-&gt;Malloc(</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(uint64_t)<sp/>*<sp/>v-&gt;Size()));
                </highlight>
            </codeline>
            <codeline lineno="401">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>v-&gt;Begin();<sp/>itr<sp/>!=<sp/>
                    v-&gt;End();<sp/>++itr)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="402">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_hasher" kindref="compound">Hasher&lt;EncodingType, MemoryPoolAllocator&lt;&gt;</ref>
                    <sp/>&gt;<sp/>EnumHasherType;
                </highlight>
            </codeline>
            <codeline lineno="403">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>buffer[256<sp/>+<sp/>24];
                </highlight>
            </codeline>
            <codeline lineno="404">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_memory_pool_allocator" kindref="compound">MemoryPoolAllocator&lt;&gt;</ref>
                    <sp/>hasherAllocator(buffer,
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(buffer));</highlight>
            </codeline>
            <codeline lineno="405">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>EnumHasherType<sp/>h(&amp;hasherAllocator,<sp/>256);
                </highlight>
            </codeline>
            <codeline lineno="406">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>itr-&gt;Accept(h);
                </highlight>
            </codeline>
            <codeline lineno="407">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>enum_[enumCount_++]<sp/>=<sp/>h.GetHashCode();
                </highlight>
            </codeline>
            <codeline lineno="408">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="409">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="410">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="411">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(schemaDocument)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="412">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(allOf_,<sp/>*schemaDocument,<sp/>p,<sp/>value,<sp/>GetAllOfString(),<sp/>
                    document);
                </highlight>
            </codeline>
            <codeline lineno="413">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(anyOf_,<sp/>*schemaDocument,<sp/>p,<sp/>value,<sp/>GetAnyOfString(),<sp/>
                    document);
                </highlight>
            </codeline>
            <codeline lineno="414">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(oneOf_,<sp/>*schemaDocument,<sp/>p,<sp/>value,<sp/>GetOneOfString(),<sp/>
                    document);
                </highlight>
            </codeline>
            <codeline lineno="415">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="416">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>GetNotString()))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="418">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument-&gt;CreateSchema(&amp;not_,<sp/>p.Append(GetNotString(),<sp/>allocator_),<sp/>
                    *v,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="419">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>notValidatorIndex_<sp/>=<sp/>validatorCount_;
                </highlight>
            </codeline>
            <codeline lineno="420">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>validatorCount_++;
                </highlight>
            </codeline>
            <codeline lineno="421">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="422">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="423">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Object
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="424">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="425">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>properties<sp/>=<sp/>GetMember(value,<sp/>
                    GetPropertiesString());
                </highlight>
            </codeline>
            <codeline lineno="426">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>required<sp/>=<sp/>GetMember(value,<sp/>
                    GetRequiredString());
                </highlight>
            </codeline>
            <codeline lineno="427">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>dependencies<sp/>=<sp/>GetMember(value,<sp/>
                    GetDependenciesString());
                </highlight>
            </codeline>
            <codeline lineno="428">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="429">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Gather<sp/>properties<sp/>from<sp/>properties/required/dependencies
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="430">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SValue<sp/>allProperties(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                        kindref="member">kArrayType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="431">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="432">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(properties<sp/>&amp;&amp;<sp/>properties-&gt;IsObject())
                </highlight>
            </codeline>
            <codeline lineno="433">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>properties-&gt;MemberBegin();<sp/>
                    itr<sp/>!=<sp/>properties-&gt;MemberEnd();<sp/>++itr)
                </highlight>
            </codeline>
            <codeline lineno="434">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AddUniqueElement(allProperties,<sp/>itr-&gt;name);
                </highlight>
            </codeline>
            <codeline lineno="435">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="436">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(required<sp/>&amp;&amp;<sp/>required-&gt;IsArray())
                </highlight>
            </codeline>
            <codeline lineno="437">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>required-&gt;Begin();<sp/>itr<sp/>
                    !=<sp/>required-&gt;End();<sp/>++itr)
                </highlight>
            </codeline>
            <codeline lineno="438">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itr-&gt;IsString())
                </highlight>
            </codeline>
            <codeline lineno="439">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AddUniqueElement(allProperties,<sp/>*itr);
                </highlight>
            </codeline>
            <codeline lineno="440">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="441">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(dependencies<sp/>&amp;&amp;<sp/>dependencies-&gt;IsObject())
                </highlight>
            </codeline>
            <codeline lineno="442">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>dependencies-&gt;MemberBegin();
                    <sp/>itr<sp/>!=<sp/>dependencies-&gt;MemberEnd();<sp/>++itr)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="443">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AddUniqueElement(allProperties,<sp/>itr-&gt;name);
                </highlight>
            </codeline>
            <codeline lineno="444">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itr-&gt;value.IsArray())
                </highlight>
            </codeline>
            <codeline lineno="445">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstValueIterator<sp/>i<sp/>=<sp/>itr-&gt;value.Begin();<sp/>i<sp/>!=
                    <sp/>itr-&gt;value.End();<sp/>++i)
                </highlight>
            </codeline>
            <codeline lineno="446">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(i-&gt;IsString())
                </highlight>
            </codeline>
            <codeline lineno="447">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AddUniqueElement(allProperties,<sp/>*i);
                </highlight>
            </codeline>
            <codeline lineno="448">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="449">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="450">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(allProperties.Size()<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="451">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>propertyCount_<sp/>=<sp/>allProperties.Size();
                </highlight>
            </codeline>
            <codeline lineno="452">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>properties_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">Property*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(allocator_-&gt;Malloc(</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Property)<sp/>*<sp/>propertyCount_));
                </highlight>
            </codeline>
            <codeline lineno="453">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>propertyCount_;<sp/>i++)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="454">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(&amp;properties_[i])<sp/>Property();
                </highlight>
            </codeline>
            <codeline lineno="455">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>properties_[i].name<sp/>=<sp/>allProperties[i];
                </highlight>
            </codeline>
            <codeline lineno="456">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>properties_[i].schema<sp/>=<sp/>GetTypeless();
                </highlight>
            </codeline>
            <codeline lineno="457">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="458">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="459">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="460">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="461">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(properties<sp/>&amp;&amp;<sp/>properties-&gt;IsObject())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="462">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>q<sp/>=<sp/>p.Append(GetPropertiesString(),<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="463">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>properties-&gt;MemberBegin();<sp/>
                    itr<sp/>!=<sp/>properties-&gt;MemberEnd();<sp/>++itr)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="464">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index;
                </highlight>
            </codeline>
            <codeline lineno="465">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(FindPropertyIndex(itr-&gt;name,<sp/>&amp;index))
                </highlight>
            </codeline>
            <codeline lineno="466">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument-&gt;CreateSchema(&amp;properties_[index].schema,<sp/>q.Append(itr-&gt;name,<sp/>
                    allocator_),<sp/>itr-&gt;value,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="467">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="468">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="469">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="470">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>
                    GetPatternPropertiesString()))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="471">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>q<sp/>=<sp/>p.Append(GetPatternPropertiesString(),<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="472">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternProperties_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">PatternProperty*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(allocator_-&gt;Malloc(</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(PatternProperty)<sp/>*<sp/>v-&gt;MemberCount()));
                </highlight>
            </codeline>
            <codeline lineno="473">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternPropertyCount_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="474">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="475">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>v-&gt;MemberBegin();<sp/>itr<sp/>
                    !=<sp/>v-&gt;MemberEnd();<sp/>++itr)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="476">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(&amp;patternProperties_[patternPropertyCount_])<sp/>PatternProperty();
                </highlight>
            </codeline>
            <codeline lineno="477">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternProperties_[patternPropertyCount_].pattern<sp/>=<sp/>CreatePattern(itr-&gt;name);
                </highlight>
            </codeline>
            <codeline lineno="478">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument-&gt;CreateSchema(&amp;patternProperties_[patternPropertyCount_].schema,<sp/>
                    q.Append(itr-&gt;name,<sp/>allocator_),<sp/>itr-&gt;value,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="479">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternPropertyCount_++;
                </highlight>
            </codeline>
            <codeline lineno="480">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="481">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="482">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="483">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(required<sp/>&amp;&amp;<sp/>required-&gt;IsArray())
                </highlight>
            </codeline>
            <codeline lineno="484">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>required-&gt;Begin();<sp/>itr<sp/>
                    !=<sp/>required-&gt;End();<sp/>++itr)
                </highlight>
            </codeline>
            <codeline lineno="485">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itr-&gt;IsString())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="486">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index;
                </highlight>
            </codeline>
            <codeline lineno="487">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(FindPropertyIndex(*itr,<sp/>&amp;index))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="488">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>properties_[index].required<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="489">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hasRequired_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="490">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="491">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="492">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="493">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(dependencies<sp/>&amp;&amp;<sp/>dependencies-&gt;IsObject())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="494">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>q<sp/>=<sp/>p.Append(GetDependenciesString(),<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="495">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hasDependencies_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="496">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstMemberIterator<sp/>itr<sp/>=<sp/>dependencies-&gt;MemberBegin();
                    <sp/>itr<sp/>!=<sp/>dependencies-&gt;MemberEnd();<sp/>++itr)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="497">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>sourceIndex;
                </highlight>
            </codeline>
            <codeline lineno="498">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(FindPropertyIndex(itr-&gt;name,<sp/>&amp;sourceIndex))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="499">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itr-&gt;value.IsArray())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="500">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>properties_[sourceIndex].dependencies<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(allocator_-&gt;Malloc(</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">)<sp/>*<sp/>propertyCount_));
                </highlight>
            </codeline>
            <codeline lineno="501">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memset(properties_[sourceIndex].dependencies,<sp/>0,
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">)*<sp/>propertyCount_);
                </highlight>
            </codeline>
            <codeline lineno="502">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstValueIterator<sp/>targetItr<sp/>=<sp/>itr-&gt;value.Begin();<sp/>
                    targetItr<sp/>!=<sp/>itr-&gt;value.End();<sp/>++targetItr)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="503">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>targetIndex;
                </highlight>
            </codeline>
            <codeline lineno="504">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(FindPropertyIndex(*targetItr,<sp/>&amp;targetIndex))
                </highlight>
            </codeline>
            <codeline lineno="505">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>properties_[sourceIndex].dependencies[targetIndex]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="506">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="507">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="508">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itr-&gt;value.IsObject())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="509">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>hasSchemaDependencies_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="510">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument-&gt;CreateSchema(&amp;properties_[sourceIndex].dependenciesSchema,<sp/>
                    q.Append(itr-&gt;name,<sp/>allocator_),<sp/>itr-&gt;value,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="511">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>properties_[sourceIndex].dependenciesValidatorIndex<sp/>=<sp/>validatorCount_;
                </highlight>
            </codeline>
            <codeline lineno="512">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>validatorCount_++;
                </highlight>
            </codeline>
            <codeline lineno="513">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="514">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="515">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="516">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="517">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="518">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>
                    GetAdditionalPropertiesString()))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="519">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsBool())
                </highlight>
            </codeline>
            <codeline lineno="520">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>additionalProperties_<sp/>=<sp/>v-&gt;GetBool();
                </highlight>
            </codeline>
            <codeline lineno="521">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsObject())
                </highlight>
            </codeline>
            <codeline lineno="522">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument-&gt;CreateSchema(&amp;additionalPropertiesSchema_,<sp/>
                    p.Append(GetAdditionalPropertiesString(),<sp/>allocator_),<sp/>*v,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="523">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="524">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="525">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(minProperties_,<sp/>value,<sp/>GetMinPropertiesString());
                </highlight>
            </codeline>
            <codeline lineno="526">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(maxProperties_,<sp/>value,<sp/>GetMaxPropertiesString());
                </highlight>
            </codeline>
            <codeline lineno="527">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="528">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Array
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="529">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>GetItemsString()))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="530">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>q<sp/>=<sp/>p.Append(GetItemsString(),<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="531">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsObject())
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>List<sp/>validation
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="532">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument-&gt;CreateSchema(&amp;itemsList_,<sp/>q,<sp/>*v,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="533">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsArray())<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Tuple<sp/>validation
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="534">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>itemsTuple_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keyword">const
                    <sp/>
                </highlight>
                <highlight class="normal">Schema**</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(allocator_-&gt;Malloc(</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Schema*)<sp/>*<sp/>v-&gt;Size()));
                </highlight>
            </codeline>
            <codeline lineno="535">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="536">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstValueIterator<sp/>itr<sp/>=<sp/>v-&gt;Begin();<sp/>itr<sp/>!=<sp/>
                    v-&gt;End();<sp/>++itr,<sp/>index++)
                </highlight>
            </codeline>
            <codeline lineno="537">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument-&gt;CreateSchema(&amp;itemsTuple_[itemsTupleCount_++],<sp/>q.Append(index,<sp/>
                    allocator_),<sp/>*itr,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="538">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="539">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="540">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="541">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(minItems_,<sp/>value,<sp/>GetMinItemsString());
                </highlight>
            </codeline>
            <codeline lineno="542">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(maxItems_,<sp/>value,<sp/>GetMaxItemsString());
                </highlight>
            </codeline>
            <codeline lineno="543">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="544">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>
                    GetAdditionalItemsString()))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="545">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsBool())
                </highlight>
            </codeline>
            <codeline lineno="546">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>additionalItems_<sp/>=<sp/>v-&gt;GetBool();
                </highlight>
            </codeline>
            <codeline lineno="547">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsObject())
                </highlight>
            </codeline>
            <codeline lineno="548">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument-&gt;CreateSchema(&amp;additionalItemsSchema_,<sp/>
                    p.Append(GetAdditionalItemsString(),<sp/>allocator_),<sp/>*v,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="549">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="550">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="551">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(uniqueItems_,<sp/>value,<sp/>GetUniqueItemsString());
                </highlight>
            </codeline>
            <codeline lineno="552">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="553">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>String
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="554">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(minLength_,<sp/>value,<sp/>GetMinLengthString());
                </highlight>
            </codeline>
            <codeline lineno="555">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(maxLength_,<sp/>value,<sp/>GetMaxLengthString());
                </highlight>
            </codeline>
            <codeline lineno="556">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="557">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>GetPatternString()))
                </highlight>
            </codeline>
            <codeline lineno="558">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>pattern_<sp/>=<sp/>CreatePattern(*v);
                </highlight>
            </codeline>
            <codeline lineno="559">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="560">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Number
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="561">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>GetMinimumString()))
                </highlight>
            </codeline>
            <codeline lineno="562">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsNumber())
                </highlight>
            </codeline>
            <codeline lineno="563">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>minimum_.CopyFrom(*v,<sp/>*allocator_);
                </highlight>
            </codeline>
            <codeline lineno="564">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="565">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>GetMaximumString()))
                </highlight>
            </codeline>
            <codeline lineno="566">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsNumber())
                </highlight>
            </codeline>
            <codeline lineno="567">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>maximum_.CopyFrom(*v,<sp/>*allocator_);
                </highlight>
            </codeline>
            <codeline lineno="568">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="569">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(exclusiveMinimum_,<sp/>value,<sp/>GetExclusiveMinimumString());
                </highlight>
            </codeline>
            <codeline lineno="570">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AssignIfExist(exclusiveMaximum_,<sp/>value,<sp/>GetExclusiveMaximumString());
                </highlight>
            </codeline>
            <codeline lineno="571">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="572">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>GetMultipleOfString()))
                </highlight>
            </codeline>
            <codeline lineno="573">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsNumber()<sp/>&amp;&amp;<sp/>v-&gt;GetDouble()<sp/>&gt;<sp/>0.0)
                </highlight>
            </codeline>
            <codeline lineno="574">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>multipleOf_.CopyFrom(*v,<sp/>*allocator_);
                </highlight>
            </codeline>
            <codeline lineno="575">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="576">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="577">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~Schema()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="578">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(allocator_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="579">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>allocator_-&gt;Free(enum_);
                </highlight>
            </codeline>
            <codeline lineno="580">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="581">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(properties_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="582">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>propertyCount_;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="583">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>properties_[i].~Property();
                </highlight>
            </codeline>
            <codeline lineno="584">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AllocatorType::Free(properties_);
                </highlight>
            </codeline>
            <codeline lineno="585">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="586">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(patternProperties_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="587">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>patternPropertyCount_;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="588">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternProperties_[i].~PatternProperty();
                </highlight>
            </codeline>
            <codeline lineno="589">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AllocatorType::Free(patternProperties_);
                </highlight>
            </codeline>
            <codeline lineno="590">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="591">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AllocatorType::Free(itemsTuple_);
                </highlight>
            </codeline>
            <codeline lineno="592">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_HAS_REGEX
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="593">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pattern_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="594">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>pattern_-&gt;~RegexType();
                </highlight>
            </codeline>
            <codeline lineno="595">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>allocator_-&gt;Free(pattern_);
                </highlight>
            </codeline>
            <codeline lineno="596">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="597">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="598">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="599">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="600">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>BeginValue(Context&amp;<sp/>context)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="601">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.inArray)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="602">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(uniqueItems_)
                </highlight>
            </codeline>
            <codeline lineno="603">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueUniqueness<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="604">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="605">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itemsList_)
                </highlight>
            </codeline>
            <codeline lineno="606">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>itemsList_;
                </highlight>
            </codeline>
            <codeline lineno="607">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itemsTuple_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="608">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.arrayElementIndex<sp/>&lt;<sp/>itemsTupleCount_)
                </highlight>
            </codeline>
            <codeline lineno="609">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>itemsTuple_[context.arrayElementIndex];
                </highlight>
            </codeline>
            <codeline lineno="610">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(additionalItemsSchema_)
                </highlight>
            </codeline>
            <codeline lineno="611">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>additionalItemsSchema_;
                </highlight>
            </codeline>
            <codeline lineno="612">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(additionalItems_)
                </highlight>
            </codeline>
            <codeline lineno="613">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>GetTypeless();
                </highlight>
            </codeline>
            <codeline lineno="614">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="615">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetItemsString());
                </highlight>
            </codeline>
            <codeline lineno="616">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="617">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="618">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>GetTypeless();
                </highlight>
            </codeline>
            <codeline lineno="619">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="620">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.arrayElementIndex++;
                </highlight>
            </codeline>
            <codeline lineno="621">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="622">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="623">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="624">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="625">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndValue(Context&amp;<sp/>context)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="626">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.patternPropertiesValidatorCount<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="627">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>otherValid<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="628">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>count<sp/>=<sp/>context.patternPropertiesValidatorCount;
                </highlight>
            </codeline>
            <codeline lineno="629">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.objectPatternValidatorType<sp/>!=<sp/>
                    Context::kPatternValidatorOnly)
                </highlight>
            </codeline>
            <codeline lineno="630">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>otherValid<sp/>=<sp/>context.patternPropertiesValidators[--count]-&gt;IsValid();
                </highlight>
            </codeline>
            <codeline lineno="631">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="632">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>patternValid<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="633">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="634">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!context.patternPropertiesValidators[i]-&gt;IsValid())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="635">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>patternValid<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="636">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="637">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="638">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="639">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.objectPatternValidatorType<sp/>==<sp/>
                    Context::kPatternValidatorOnly)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="640">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!patternValid)
                </highlight>
            </codeline>
            <codeline lineno="641">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetPatternPropertiesString());
                </highlight>
            </codeline>
            <codeline lineno="642">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="643">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.objectPatternValidatorType<sp/>==<sp/>
                    Context::kPatternValidatorWithProperty)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="644">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!patternValid<sp/>||<sp/>!otherValid)
                </highlight>
            </codeline>
            <codeline lineno="645">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetPatternPropertiesString());
                </highlight>
            </codeline>
            <codeline lineno="646">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="647">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!patternValid<sp/>&amp;&amp;<sp/>!otherValid)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>kPatternValidatorWithAdditionalProperty)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="648">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetPatternPropertiesString());
                </highlight>
            </codeline>
            <codeline lineno="649">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="650">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="651">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(enum_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="652">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>uint64_t<sp/>h<sp/>=<sp/>context.factory.GetHashCode(context.hasher);
                </highlight>
            </codeline>
            <codeline lineno="653">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>enumCount_;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="654">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(enum_[i]<sp/>==<sp/>h)
                </highlight>
            </codeline>
            <codeline lineno="655">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">goto</highlight>
                <highlight class="normal"><sp/>foundEnum;
                </highlight>
            </codeline>
            <codeline lineno="656">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetEnumString());
                </highlight>
            </codeline>
            <codeline lineno="657">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>foundEnum:;
                </highlight>
            </codeline>
            <codeline lineno="658">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="659">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="660">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(allOf_.schemas)
                </highlight>
            </codeline>
            <codeline lineno="661">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>allOf_.begin;<sp/>i<sp/>&lt;<sp/>allOf_.begin<sp/>+<sp/>allOf_.count;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="662">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!context.validators[i]-&gt;IsValid())
                </highlight>
            </codeline>
            <codeline lineno="663">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetAllOfString());
                </highlight>
            </codeline>
            <codeline lineno="664">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="665">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(anyOf_.schemas)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="666">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>anyOf_.begin;<sp/>i<sp/>&lt;<sp/>anyOf_.begin<sp/>+<sp/>anyOf_.count;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="667">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.validators[i]-&gt;IsValid())
                </highlight>
            </codeline>
            <codeline lineno="668">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">goto</highlight>
                <highlight class="normal"><sp/>foundAny;
                </highlight>
            </codeline>
            <codeline lineno="669">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetAnyOfString());
                </highlight>
            </codeline>
            <codeline lineno="670">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>foundAny:;
                </highlight>
            </codeline>
            <codeline lineno="671">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="672">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="673">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(oneOf_.schemas)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="674">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>oneValid<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="675">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>oneOf_.begin;<sp/>i<sp/>&lt;<sp/>oneOf_.begin<sp/>+<sp/>oneOf_.count;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="676">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.validators[i]-&gt;IsValid())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="677">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(oneValid)
                </highlight>
            </codeline>
            <codeline lineno="678">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetOneOfString());
                </highlight>
            </codeline>
            <codeline lineno="679">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="680">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>oneValid<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="681">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="682">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!oneValid)
                </highlight>
            </codeline>
            <codeline lineno="683">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetOneOfString());
                </highlight>
            </codeline>
            <codeline lineno="684">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="685">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="686">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(not_<sp/>&amp;&amp;<sp/>context.validators[notValidatorIndex_]-&gt;IsValid())
                </highlight>
            </codeline>
            <codeline lineno="687">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetNotString());
                </highlight>
            </codeline>
            <codeline lineno="688">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="689">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="690">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="691">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="692">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Null(Context&amp;<sp/>context)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="693">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kNullSchemaType)))
                </highlight>
            </codeline>
            <codeline lineno="694">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetTypeString());
                </highlight>
            </codeline>
            <codeline lineno="695">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="696">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="697">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="698">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Bool(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">)</highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="699">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kBooleanSchemaType)))
                </highlight>
            </codeline>
            <codeline lineno="700">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetTypeString());
                </highlight>
            </codeline>
            <codeline lineno="701">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="702">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="703">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="704">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="705">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckInt(context,<sp/>i))
                </highlight>
            </codeline>
            <codeline lineno="706">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="707">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="708">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="709">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="710">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="711">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckUint(context,<sp/>u))
                </highlight>
            </codeline>
            <codeline lineno="712">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="713">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="714">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="715">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="716">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int64(Context&amp;<sp/>context,<sp/>int64_t<sp/>i)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="717">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckInt(context,<sp/>i))
                </highlight>
            </codeline>
            <codeline lineno="718">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="719">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="720">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="721">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="722">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint64(Context&amp;<sp/>context,<sp/>uint64_t<sp/>u)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="723">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckUint(context,<sp/>u))
                </highlight>
            </codeline>
            <codeline lineno="724">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="725">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="726">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="727">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="728">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_double" kindref="compound">Double</ref>(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="729">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kNumberSchemaType)))
                </highlight>
            </codeline>
            <codeline lineno="730">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetTypeString());
                </highlight>
            </codeline>
            <codeline lineno="731">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="732">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!minimum_.IsNull()<sp/>&amp;&amp;<sp/>!CheckDoubleMinimum(context,<sp/>
                    d))
                </highlight>
            </codeline>
            <codeline lineno="733">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="734">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="735">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!maximum_.IsNull()<sp/>&amp;&amp;<sp/>!CheckDoubleMaximum(context,<sp/>
                    d))
                </highlight>
            </codeline>
            <codeline lineno="736">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="737">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="738">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!multipleOf_.IsNull()<sp/>&amp;&amp;<sp/>!CheckDoubleMultipleOf(context,
                    <sp/>d))
                </highlight>
            </codeline>
            <codeline lineno="739">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="740">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="741">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="742">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="743">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="744">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>String(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">)</highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="745">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kStringSchemaType)))
                </highlight>
            </codeline>
            <codeline lineno="746">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetTypeString());
                </highlight>
            </codeline>
            <codeline lineno="747">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="748">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(minLength_<sp/>!=<sp/>0<sp/>||<sp/>maxLength_<sp/>!=
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(~0))
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="749">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>count;
                </highlight>
            </codeline>
            <codeline lineno="750">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(internal::CountStringCodePoint&lt;EncodingType&gt;(str,<sp/>length,<sp/>
                    &amp;count))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="751">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(count<sp/>&lt;<sp/>minLength_)
                </highlight>
            </codeline>
            <codeline lineno="752">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMinLengthString());
                </highlight>
            </codeline>
            <codeline lineno="753">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(count<sp/>&gt;<sp/>maxLength_)
                </highlight>
            </codeline>
            <codeline lineno="754">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMaxLengthString());
                </highlight>
            </codeline>
            <codeline lineno="755">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="756">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="757">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="758">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pattern_<sp/>&amp;&amp;<sp/>!IsPatternMatch(pattern_,<sp/>str,<sp/>
                    length))
                </highlight>
            </codeline>
            <codeline lineno="759">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetPatternString());
                </highlight>
            </codeline>
            <codeline lineno="760">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="761">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="762">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="763">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="764">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartObject(Context&amp;<sp/>context)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="765">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kObjectSchemaType)))
                </highlight>
            </codeline>
            <codeline lineno="766">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetTypeString());
                </highlight>
            </codeline>
            <codeline lineno="767">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="768">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(hasDependencies_<sp/>||<sp/>hasRequired_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="769">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.propertyExist<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(context.factory.MallocState(</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">)<sp/>*<sp/>propertyCount_));
                </highlight>
            </codeline>
            <codeline lineno="770">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memset(context.propertyExist,<sp/>0,
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">)<sp/>*<sp/>propertyCount_);
                </highlight>
            </codeline>
            <codeline lineno="771">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="772">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="773">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(patternProperties_)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>pre-allocate<sp/>schema<sp/>array
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="774">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>count<sp/>=<sp/>patternPropertyCount_<sp/>+<sp/>1;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>extra<sp/>for<sp/>valuePatternValidatorType
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="775">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.patternPropertiesSchemas<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keyword">const
                    <sp/>
                </highlight>
                <highlight class="normal">SchemaType**</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(context.factory.MallocState(</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*)<sp/>*<sp/>count));
                </highlight>
            </codeline>
            <codeline lineno="776">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.patternPropertiesSchemaCount<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="777">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memset(context.patternPropertiesSchemas,<sp/>0,
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(SchemaType*)<sp/>*<sp/>count);
                </highlight>
            </codeline>
            <codeline lineno="778">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="779">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="780">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="781">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="782">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="783">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Key(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">)</highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="784">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(patternProperties_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="785">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.patternPropertiesSchemaCount<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="786">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>patternPropertyCount_;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="787">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(patternProperties_[i].pattern<sp/>&amp;&amp;<sp/>
                    IsPatternMatch(patternProperties_[i].pattern,<sp/>str,<sp/>len))
                </highlight>
            </codeline>
            <codeline lineno="788">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.patternPropertiesSchemas[context.patternPropertiesSchemaCount++]<sp/>=<sp/>
                    patternProperties_[i].schema;
                </highlight>
            </codeline>
            <codeline lineno="789">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="790">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="791">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index;
                </highlight>
            </codeline>
            <codeline lineno="792">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(FindPropertyIndex(ValueType(str,<sp/>len).Move(),<sp/>&amp;index))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="793">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.patternPropertiesSchemaCount<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="794">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.patternPropertiesSchemas[context.patternPropertiesSchemaCount++]<sp/>=<sp/>
                    properties_[index].schema;
                </highlight>
            </codeline>
            <codeline lineno="795">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>GetTypeless();
                </highlight>
            </codeline>
            <codeline lineno="796">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valuePatternValidatorType<sp/>=<sp/>Context::kPatternValidatorWithProperty;
                </highlight>
            </codeline>
            <codeline lineno="797">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="798">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="799">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>properties_[index].schema;
                </highlight>
            </codeline>
            <codeline lineno="800">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="801">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.propertyExist)
                </highlight>
            </codeline>
            <codeline lineno="802">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.propertyExist[index]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="803">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="804">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="805">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="806">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="807">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(additionalPropertiesSchema_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="808">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(additionalPropertiesSchema_<sp/>&amp;&amp;<sp/>
                    context.patternPropertiesSchemaCount<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="809">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.patternPropertiesSchemas[context.patternPropertiesSchemaCount++]<sp/>=<sp/>
                    additionalPropertiesSchema_;
                </highlight>
            </codeline>
            <codeline lineno="810">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>GetTypeless();
                </highlight>
            </codeline>
            <codeline lineno="811">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valuePatternValidatorType<sp/>=<sp/>Context::kPatternValidatorWithAdditionalProperty;
                </highlight>
            </codeline>
            <codeline lineno="812">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="813">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="814">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>additionalPropertiesSchema_;
                </highlight>
            </codeline>
            <codeline lineno="815">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="816">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="817">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(additionalProperties_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="818">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.valueSchema<sp/>=<sp/>GetTypeless();
                </highlight>
            </codeline>
            <codeline lineno="819">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="820">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="821">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="822">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.patternPropertiesSchemaCount<sp/>==<sp/>0)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>patternProperties<sp/>are<sp/>not<sp/>additional<sp/>properties
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="823">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetAdditionalPropertiesString());
                </highlight>
            </codeline>
            <codeline lineno="824">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="825">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="826">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="827">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="828">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndObject(Context&amp;<sp/>context,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>memberCount)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="829">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(hasRequired_)
                </highlight>
            </codeline>
            <codeline lineno="830">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>propertyCount_;<sp/>index++)
                </highlight>
            </codeline>
            <codeline lineno="831">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(properties_[index].required)
                </highlight>
            </codeline>
            <codeline lineno="832">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!context.propertyExist[index])
                </highlight>
            </codeline>
            <codeline lineno="833">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetRequiredString());
                </highlight>
            </codeline>
            <codeline lineno="834">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="835">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(memberCount<sp/>&lt;<sp/>minProperties_)
                </highlight>
            </codeline>
            <codeline lineno="836">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMinPropertiesString());
                </highlight>
            </codeline>
            <codeline lineno="837">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="838">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(memberCount<sp/>&gt;<sp/>maxProperties_)
                </highlight>
            </codeline>
            <codeline lineno="839">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMaxPropertiesString());
                </highlight>
            </codeline>
            <codeline lineno="840">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="841">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(hasDependencies_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="842">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>sourceIndex<sp/>=<sp/>0;<sp/>sourceIndex<sp/>&lt;<sp/>propertyCount_;<sp/>sourceIndex++)
                </highlight>
            </codeline>
            <codeline lineno="843">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.propertyExist[sourceIndex])<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="844">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(properties_[sourceIndex].dependencies)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="845">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>targetIndex<sp/>=<sp/>0;<sp/>targetIndex<sp/>&lt;<sp/>propertyCount_;<sp/>targetIndex++)
                </highlight>
            </codeline>
            <codeline lineno="846">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(properties_[sourceIndex].dependencies[targetIndex]<sp/>&amp;&amp;<sp/>
                    !context.propertyExist[targetIndex])
                </highlight>
            </codeline>
            <codeline lineno="847">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetDependenciesString());
                </highlight>
            </codeline>
            <codeline lineno="848">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="849">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(properties_[sourceIndex].dependenciesSchema)
                </highlight>
            </codeline>
            <codeline lineno="850">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>
                    (!context.validators[properties_[sourceIndex].dependenciesValidatorIndex]-&gt;IsValid())
                </highlight>
            </codeline>
            <codeline lineno="851">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetDependenciesString());
                </highlight>
            </codeline>
            <codeline lineno="852">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="853">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="854">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="855">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="856">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="857">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="858">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartArray(Context&amp;<sp/>context)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="859">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>kArraySchemaType)))
                </highlight>
            </codeline>
            <codeline lineno="860">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetTypeString());
                </highlight>
            </codeline>
            <codeline lineno="861">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="862">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.arrayElementIndex<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="863">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.inArray<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="864">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="865">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(context);
                </highlight>
            </codeline>
            <codeline lineno="866">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="867">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="868">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndArray(Context&amp;<sp/>context,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>elementCount)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="869">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.inArray<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="870">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="871">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(elementCount<sp/>&lt;<sp/>minItems_)
                </highlight>
            </codeline>
            <codeline lineno="872">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMinItemsString());
                </highlight>
            </codeline>
            <codeline lineno="873">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="874">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(elementCount<sp/>&gt;<sp/>maxItems_)
                </highlight>
            </codeline>
            <codeline lineno="875">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMaxItemsString());
                </highlight>
            </codeline>
            <codeline lineno="876">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="877">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="878">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="879">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="880">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Generate<sp/>functions<sp/>for<sp/>string<sp/>literal<sp/>according
                    <sp/>to<sp/>Ch
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="881">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_STRING_(name,<sp/>...)<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="882">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>static<sp/>const<sp/>ValueType&amp;<sp/>Get##name##String()<sp/>{\
                </highlight>
            </codeline>
            <codeline lineno="883">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>static<sp/>const<sp/>Ch<sp/>s[]<sp/>=<sp/>{<sp/>__VA_ARGS__,<sp/>&apos;\0&apos;<sp/>};\
                </highlight>
            </codeline>
            <codeline lineno="884">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>static<sp/>const<sp/>ValueType<sp/>v(s,<sp/>sizeof(s)<sp/>/<sp/>sizeof(Ch)<sp/>-<sp/>1);\
                </highlight>
            </codeline>
            <codeline lineno="885">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>return<sp/>v;\
                </highlight>
            </codeline>
            <codeline lineno="886">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="887">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="888">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Null,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="889">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Boolean,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;b&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="890">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Object,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;b&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;j&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;c&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="891">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Array,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;y&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="892">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(String,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;g&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="893">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Number,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;b&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="894">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Integer,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;g&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="895">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7"
                                                kindref="member">Type</ref>,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;y&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="896">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Enum,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="897">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(AllOf,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;O&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;f&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="898">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(AnyOf,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;y&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;O&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;f&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="899">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(OneOf,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;O&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;f&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="900">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Not,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="901">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Properties,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="902">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Required,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;q&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;d&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="903">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Dependencies,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;d&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;d&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;c&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="904">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(PatternProperties,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;P&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="905">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(AdditionalProperties,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;d&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;d&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;P&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="906">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(MinProperties,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;P&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="907">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(MaxProperties,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;x&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;P&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="908">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Items,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="909">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(MinItems,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;I&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="910">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(MaxItems,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;x&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;I&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="911">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(AdditionalItems,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;d&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;d&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;o&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;I&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="912">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(UniqueItems,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;q&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;I&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="913">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(MinLength,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;L&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;g&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;h&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="914">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(MaxLength,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;x&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;L&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;g&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;h&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="915">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Pattern,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="916">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Minimum,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="917">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(Maximum,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;x&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="918">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(ExclusiveMinimum,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;x&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;c&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;v&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;M&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;n&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="919">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(ExclusiveMaximum,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;x&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;c&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;s&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;v&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;M&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;a&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;x&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="920">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_STRING_(MultipleOf,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;m&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;u&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;t&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;i&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;p&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;l&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;O&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;f&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="921">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="922">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#undef<sp/>RAPIDJSON_STRING_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="923">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="924">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="925">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">enum</highlight>
                <highlight class="normal"><sp/>SchemaValueType<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="926">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNullSchemaType,
                </highlight>
            </codeline>
            <codeline lineno="927">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kBooleanSchemaType,
                </highlight>
            </codeline>
            <codeline lineno="928">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kObjectSchemaType,
                </highlight>
            </codeline>
            <codeline lineno="929">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kArraySchemaType,
                </highlight>
            </codeline>
            <codeline lineno="930">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kStringSchemaType,
                </highlight>
            </codeline>
            <codeline lineno="931">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNumberSchemaType,
                </highlight>
            </codeline>
            <codeline lineno="932">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kIntegerSchemaType,
                </highlight>
            </codeline>
            <codeline lineno="933">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kTotalSchemaType
                </highlight>
            </codeline>
            <codeline lineno="934">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="935">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="936">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="937">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_generic_regex" kindref="compound">internal::GenericRegex&lt;EncodingType&gt;</ref>
                    <sp/>RegexType;
                </highlight>
            </codeline>
            <codeline lineno="938">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#elif<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="939">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>std::basic_regex&lt;Ch&gt;<sp/>RegexType;
                </highlight>
            </codeline>
            <codeline lineno="940">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="941">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>RegexType;
                </highlight>
            </codeline>
            <codeline lineno="942">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="943">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="944">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">SchemaArray<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="945">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaArray()<sp/>:<sp/>schemas(),<sp/>count()<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="946">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~SchemaArray()<sp/>{<sp/>AllocatorType::Free(schemas);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="947">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType**<sp/>schemas;
                </highlight>
            </codeline>
            <codeline lineno="948">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>begin;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>begin<sp/>index<sp/>of<sp/>context.validators
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="949">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>count;
                </highlight>
            </codeline>
            <codeline lineno="950">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="951">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="952">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>GetTypeless()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="953">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>SchemaType<sp/>typeless(0,<sp/>PointerType(),<sp/>ValueType(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                        kindref="member">kObjectType</ref>).Move(),<sp/>ValueType(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                        kindref="member">kObjectType</ref>).Move(),<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="954">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>&amp;typeless;
                </highlight>
            </codeline>
            <codeline lineno="955">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="956">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="957">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>V1,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>V2&gt;
                </highlight>
            </codeline>
            <codeline lineno="958">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>AddUniqueElement(V1&amp;<sp/>a,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>V2&amp;<sp/>v)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="959">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>V1::ConstValueIterator<sp/>itr<sp/>=<sp/>a.Begin();<sp/>itr<sp/>!=<sp/>
                    a.End();<sp/>++itr)
                </highlight>
            </codeline>
            <codeline lineno="960">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(*itr<sp/>==<sp/>v)
                </highlight>
            </codeline>
            <codeline lineno="961">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="962">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>V1<sp/>c(v,<sp/>*allocator_);
                </highlight>
            </codeline>
            <codeline lineno="963">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>a.PushBack(c,<sp/>*allocator_);
                </highlight>
            </codeline>
            <codeline lineno="964">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="965">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="966">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>GetMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>value,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="967">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::ConstMemberIterator<sp/>itr<sp/>=<sp/>value.FindMember(name);
                </highlight>
            </codeline>
            <codeline lineno="968">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>itr<sp/>!=<sp/>value.MemberEnd()<sp/>?<sp/>&amp;(itr-&gt;value)<sp/>:
                    <sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="969">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="970">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="971">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>AssignIfExist(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">&amp;<sp/>out,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>value,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="972">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>name))
                </highlight>
            </codeline>
            <codeline lineno="973">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsBool())
                </highlight>
            </codeline>
            <codeline lineno="974">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>out<sp/>=<sp/>v-&gt;GetBool();
                </highlight>
            </codeline>
            <codeline lineno="975">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="976">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="977">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>AssignIfExist(<ref
                        refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>&amp;
                    <sp/>out,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>value,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="978">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>name))
                </highlight>
            </codeline>
            <codeline lineno="979">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsUint64()<sp/>&amp;&amp;<sp/>v-&gt;GetUint64()<sp/>&lt;=
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>(~0))
                </highlight>
            </codeline>
            <codeline lineno="980">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>out<sp/>=<sp/>static_cast&lt;SizeType&gt;(v-&gt;GetUint64());
                </highlight>
            </codeline>
            <codeline lineno="981">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="982">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="983">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>AssignIfExist(SchemaArray&amp;<sp/>out,<sp/>SchemaDocumentType&amp;<sp/>
                    schemaDocument,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>p,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>value,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>name,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>document)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="984">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>v<sp/>=<sp/>GetMember(value,<sp/>name))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="985">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v-&gt;IsArray()<sp/>&amp;&amp;<sp/>v-&gt;Size()<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="986">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>q<sp/>=<sp/>p.Append(name,<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="987">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>out.count<sp/>=<sp/>v-&gt;Size();
                </highlight>
            </codeline>
            <codeline lineno="988">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>out.schemas<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keyword">const
                    <sp/>
                </highlight>
                <highlight class="normal">Schema**</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(allocator_-&gt;Malloc(out.count<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Schema*)));
                </highlight>
            </codeline>
            <codeline lineno="989">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>memset(out.schemas,<sp/>0,
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Schema*)*<sp/>out.count);
                </highlight>
            </codeline>
            <codeline lineno="990">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>out.count;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="991">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument.CreateSchema(&amp;out.schemas[i],<sp/>q.Append(i,<sp/>allocator_),<sp/>(*v)[i],
                    <sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="992">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>out.begin<sp/>=<sp/>validatorCount_;
                </highlight>
            </codeline>
            <codeline lineno="993">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>validatorCount_<sp/>+=<sp/>out.count;
                </highlight>
            </codeline>
            <codeline lineno="994">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="995">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="996">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="997">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="998">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_USE_INTERNALREGEX
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="999">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                </highlight>
            </codeline>
            <codeline lineno="1000">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RegexType*<sp/>CreatePattern(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>value)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1001">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(value.IsString())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1002">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RegexType*<sp/>r<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(allocator_-&gt;Malloc(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(RegexType)))<sp/>RegexType(value.GetString());
                </highlight>
            </codeline>
            <codeline lineno="1003">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!r-&gt;IsValid())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1004">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>r-&gt;~RegexType();
                </highlight>
            </codeline>
            <codeline lineno="1005">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AllocatorType::Free(r);
                </highlight>
            </codeline>
            <codeline lineno="1006">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>r<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1007">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1008">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>r;
                </highlight>
            </codeline>
            <codeline lineno="1009">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1010">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1011">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1012">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1013">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsPatternMatch(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>RegexType*<sp/>pattern,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch<sp/>*str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1014">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_generic_regex_search" kindref="compound">GenericRegexSearch&lt;RegexType&gt;</ref>
                    <sp/>rs(*pattern);
                </highlight>
            </codeline>
            <codeline lineno="1015">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>rs.Search(str);
                </highlight>
            </codeline>
            <codeline lineno="1016">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1017">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#elif<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1018">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                </highlight>
            </codeline>
            <codeline lineno="1019">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RegexType*<sp/>CreatePattern(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>value)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1020">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(value.IsString())
                </highlight>
            </codeline>
            <codeline lineno="1021">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">try</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1022">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(allocator_-&gt;Malloc(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(RegexType)))<sp/>RegexType(value.GetString(),<sp/>
                    std::size_t(value.GetStringLength()),<sp/>std::regex_constants::ECMAScript);
                </highlight>
            </codeline>
            <codeline lineno="1023">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1024">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">catch</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::regex_error&amp;)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1025">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1026">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1027">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1028">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1029">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsPatternMatch(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>RegexType*<sp/>pattern,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch<sp/>*str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1030">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::match_results&lt;const<sp/>Ch*&gt;<sp/>r;
                </highlight>
            </codeline>
            <codeline lineno="1031">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>std::regex_search(str,<sp/>str<sp/>+<sp/>length,<sp/>r,<sp/>*pattern);
                </highlight>
            </codeline>
            <codeline lineno="1032">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1033">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1034">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                </highlight>
            </codeline>
            <codeline lineno="1035">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RegexType*<sp/>CreatePattern(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1036">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1037">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsPatternMatch(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>RegexType*,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch<sp/>*,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1038">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_SCHEMA_USE_STDREGEX
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1039">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1040">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>AddType(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>type)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1041">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(type<sp/>==<sp/>GetNullString()
                    <sp/>
                    <sp/>
                    <sp/>)<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>kNullSchemaType;
                </highlight>
            </codeline>
            <codeline lineno="1042">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(type<sp/>==<sp/>GetBooleanString())<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;
                    <sp/>kBooleanSchemaType;
                </highlight>
            </codeline>
            <codeline lineno="1043">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(type<sp/>==<sp/>GetObjectString()<sp/>)<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;
                    <sp/>kObjectSchemaType;
                </highlight>
            </codeline>
            <codeline lineno="1044">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(type<sp/>==<sp/>GetArrayString()
                    <sp/>
                    <sp/>)<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>kArraySchemaType;
                </highlight>
            </codeline>
            <codeline lineno="1045">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(type<sp/>==<sp/>GetStringString()<sp/>)<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;
                    <sp/>kStringSchemaType;
                </highlight>
            </codeline>
            <codeline lineno="1046">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(type<sp/>==<sp/>GetIntegerString())<sp/>type_<sp/>|=<sp/>1<sp/>&lt;&lt;
                    <sp/>kIntegerSchemaType;
                </highlight>
            </codeline>
            <codeline lineno="1047">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(type<sp/>==<sp/>GetNumberString()<sp/>)<sp/>type_<sp/>|=<sp/>(1<sp/>&lt;&lt;
                    <sp/>kNumberSchemaType)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>kIntegerSchemaType);
                </highlight>
            </codeline>
            <codeline lineno="1048">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1049">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1050">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>CreateParallelValidator(Context&amp;<sp/>context)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1051">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(enum_<sp/>||<sp/>context.arrayUniqueness)
                </highlight>
            </codeline>
            <codeline lineno="1052">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.hasher<sp/>=<sp/>context.factory.CreateHasher();
                </highlight>
            </codeline>
            <codeline lineno="1053">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1054">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(validatorCount_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1055">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(context.validators<sp/>==<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="1056">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.validators<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal"><ref refid="classinternal_1_1_i_schema_validator" kindref="compound">
                    ISchemaValidator</ref>**
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(context.factory.MallocState(</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="classinternal_1_1_i_schema_validator" kindref="compound">
                    ISchemaValidator</ref>*)<sp/>*<sp/>validatorCount_));
                </highlight>
            </codeline>
            <codeline lineno="1057">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.validatorCount<sp/>=<sp/>validatorCount_;
                </highlight>
            </codeline>
            <codeline lineno="1058">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1059">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(allOf_.schemas)
                </highlight>
            </codeline>
            <codeline lineno="1060">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CreateSchemaValidators(context,<sp/>allOf_);
                </highlight>
            </codeline>
            <codeline lineno="1061">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1062">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(anyOf_.schemas)
                </highlight>
            </codeline>
            <codeline lineno="1063">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CreateSchemaValidators(context,<sp/>anyOf_);
                </highlight>
            </codeline>
            <codeline lineno="1064">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1065">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(oneOf_.schemas)
                </highlight>
            </codeline>
            <codeline lineno="1066">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CreateSchemaValidators(context,<sp/>oneOf_);
                </highlight>
            </codeline>
            <codeline lineno="1067">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1068">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(not_)
                </highlight>
            </codeline>
            <codeline lineno="1069">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.validators[notValidatorIndex_]<sp/>=<sp/>context.factory.CreateSchemaValidator(*not_);
                </highlight>
            </codeline>
            <codeline lineno="1070">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1071">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(hasSchemaDependencies_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1072">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>propertyCount_;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="1073">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(properties_[i].dependenciesSchema)
                </highlight>
            </codeline>
            <codeline lineno="1074">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.validators[properties_[i].dependenciesValidatorIndex]<sp/>=<sp/>
                    context.factory.CreateSchemaValidator(*properties_[i].dependenciesSchema);
                </highlight>
            </codeline>
            <codeline lineno="1075">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1076">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1077">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1078">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1079">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1080">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1081">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>CreateSchemaValidators(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaArray&amp;<sp/>schemas)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1082">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>schemas.count;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="1083">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>context.validators[schemas.begin<sp/>+<sp/>i]<sp/>=<sp/>
                    context.factory.CreateSchemaValidator(*schemas.schemas[i]);
                </highlight>
            </codeline>
            <codeline lineno="1084">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1085">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1086">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>O(n)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1087">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>FindPropertyIndex(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>name,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>*<sp/>
                    outIndex)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1088">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len<sp/>=<sp/>name.GetStringLength();
                </highlight>
            </codeline>
            <codeline lineno="1089">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str<sp/>=<sp/>name.GetString();
                </highlight>
            </codeline>
            <codeline lineno="1090">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>propertyCount_;<sp/>index++)
                </highlight>
            </codeline>
            <codeline lineno="1091">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(properties_[index].name.GetStringLength()<sp/>==<sp/>len<sp/>&amp;&amp;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1092">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(std::memcmp(properties_[index].name.GetString(),<sp/>str,
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Ch)<sp/>*<sp/>len)<sp/>==<sp/>0))
                </highlight>
            </codeline>
            <codeline lineno="1093">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1094">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*outIndex<sp/>=<sp/>index;
                </highlight>
            </codeline>
            <codeline lineno="1095">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1096">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1097">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1098">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1099">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1100">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>CheckInt(Context&amp;<sp/>context,<sp/>int64_t<sp/>i)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1101">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>kIntegerSchemaType)<sp/>|
                    <sp/>(1<sp/>&lt;&lt;<sp/>kNumberSchemaType))))
                </highlight>
            </codeline>
            <codeline lineno="1102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetTypeString());
                </highlight>
            </codeline>
            <codeline lineno="1103">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1104">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!minimum_.IsNull())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(minimum_.IsInt64())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1106">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(exclusiveMinimum_<sp/>?<sp/>i<sp/>&lt;=<sp/>minimum_.GetInt64()<sp/>:
                    <sp/>i<sp/>&lt;<sp/>minimum_.GetInt64())
                </highlight>
            </codeline>
            <codeline lineno="1107">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMinimumString());
                </highlight>
            </codeline>
            <codeline lineno="1108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(minimum_.IsUint64())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1110">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMinimumString());
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>i<sp/>&lt;=<sp/>max(int64_t)<sp/>&lt;<sp/>minimum.GetUint64()
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1111">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1112">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckDoubleMinimum(context,<sp/>static_cast&lt;double&gt;(i)))
                </highlight>
            </codeline>
            <codeline lineno="1113">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1114">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1115">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1116">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!maximum_.IsNull())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1117">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(maximum_.IsInt64())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1118">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(exclusiveMaximum_<sp/>?<sp/>i<sp/>&gt;=<sp/>maximum_.GetInt64()<sp/>:
                    <sp/>i<sp/>&gt;<sp/>maximum_.GetInt64())
                </highlight>
            </codeline>
            <codeline lineno="1119">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMaximumString());
                </highlight>
            </codeline>
            <codeline lineno="1120">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1121">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(maximum_.IsUint64())
                </highlight>
            </codeline>
            <codeline lineno="1122">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/
                </highlight>
                <highlight class="normal">;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>i<sp/>&lt;=<sp/>max(int64_t)<sp/>&lt;<sp/>maximum_.GetUint64()
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1123">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckDoubleMaximum(context,<sp/>static_cast&lt;double&gt;(i)))
                </highlight>
            </codeline>
            <codeline lineno="1124">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1125">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1126">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1127">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!multipleOf_.IsNull())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1128">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(multipleOf_.IsUint64())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1129">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(static_cast&lt;uint64_t&gt;(i<sp/>&gt;=<sp/>0<sp/>?<sp/>i<sp/>:<sp/>-i)
                    <sp/>%<sp/>multipleOf_.GetUint64()<sp/>!=<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="1130">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMultipleOfString());
                </highlight>
            </codeline>
            <codeline lineno="1131">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1132">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckDoubleMultipleOf(context,<sp/>static_cast&lt;double&gt;(i)))
                </highlight>
            </codeline>
            <codeline lineno="1133">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1134">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1135">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1136">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1137">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1138">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1139">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>CheckUint(Context&amp;<sp/>context,<sp/>uint64_t<sp/>i)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1140">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(type_<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>kIntegerSchemaType)<sp/>|
                    <sp/>(1<sp/>&lt;&lt;<sp/>kNumberSchemaType))))
                </highlight>
            </codeline>
            <codeline lineno="1141">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetTypeString());
                </highlight>
            </codeline>
            <codeline lineno="1142">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1143">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!minimum_.IsNull())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(minimum_.IsUint64())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1145">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(exclusiveMinimum_<sp/>?<sp/>i<sp/>&lt;=<sp/>minimum_.GetUint64()<sp/>:
                    <sp/>i<sp/>&lt;<sp/>minimum_.GetUint64())
                </highlight>
            </codeline>
            <codeline lineno="1146">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMinimumString());
                </highlight>
            </codeline>
            <codeline lineno="1147">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1148">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(minimum_.IsInt64())
                </highlight>
            </codeline>
            <codeline lineno="1149">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>do<sp/>nothing<sp/>*/
                </highlight>
                <highlight class="normal">;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>i<sp/>&gt;=<sp/>0<sp/>&gt;<sp/>minimum.Getint64()
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1150">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckDoubleMinimum(context,<sp/>static_cast&lt;double&gt;(i)))
                </highlight>
            </codeline>
            <codeline lineno="1151">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1152">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1153">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1154">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!maximum_.IsNull())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1155">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(maximum_.IsUint64())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1156">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(exclusiveMaximum_<sp/>?<sp/>i<sp/>&gt;=<sp/>maximum_.GetUint64()<sp/>:
                    <sp/>i<sp/>&gt;<sp/>maximum_.GetUint64())
                </highlight>
            </codeline>
            <codeline lineno="1157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMaximumString());
                </highlight>
            </codeline>
            <codeline lineno="1158">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1159">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(maximum_.IsInt64())
                </highlight>
            </codeline>
            <codeline lineno="1160">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMaximumString());
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>i<sp/>&gt;=<sp/>0<sp/>&gt;<sp/>maximum_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1161">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckDoubleMaximum(context,<sp/>static_cast&lt;double&gt;(i)))
                </highlight>
            </codeline>
            <codeline lineno="1162">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1163">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1164">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1165">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!multipleOf_.IsNull())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1166">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(multipleOf_.IsUint64())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1167">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(i<sp/>%<sp/>multipleOf_.GetUint64()<sp/>!=<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="1168">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMultipleOfString());
                </highlight>
            </codeline>
            <codeline lineno="1169">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1170">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CheckDoubleMultipleOf(context,<sp/>static_cast&lt;double&gt;(i)))
                </highlight>
            </codeline>
            <codeline lineno="1171">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1173">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1174">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1175">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1176">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1177">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>CheckDoubleMinimum(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1178">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(exclusiveMinimum_<sp/>?<sp/>d<sp/>&lt;=<sp/>minimum_.GetDouble()<sp/>:
                    <sp/>d<sp/>&lt;<sp/>minimum_.GetDouble())
                </highlight>
            </codeline>
            <codeline lineno="1179">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMinimumString());
                </highlight>
            </codeline>
            <codeline lineno="1180">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1182">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>CheckDoubleMaximum(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1184">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(exclusiveMaximum_<sp/>?<sp/>d<sp/>&gt;=<sp/>maximum_.GetDouble()<sp/>:
                    <sp/>d<sp/>&gt;<sp/>maximum_.GetDouble())
                </highlight>
            </codeline>
            <codeline lineno="1185">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMaximumString());
                </highlight>
            </codeline>
            <codeline lineno="1186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1187">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1188">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1189">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>CheckDoubleMultipleOf(Context&amp;<sp/>context,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1190">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>a<sp/>=<sp/>std::abs(d),<sp/>b<sp/>=<sp/>
                    std::abs(multipleOf_.GetDouble());
                </highlight>
            </codeline>
            <codeline lineno="1191">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>q<sp/>=<sp/>std::floor(a<sp/>/<sp/>b);
                </highlight>
            </codeline>
            <codeline lineno="1192">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>r<sp/>=<sp/>a<sp/>-<sp/>q<sp/>*<sp/>b;
                </highlight>
            </codeline>
            <codeline lineno="1193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(r<sp/>&gt;<sp/>0.0)
                </highlight>
            </codeline>
            <codeline lineno="1194">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(GetMultipleOfString());
                </highlight>
            </codeline>
            <codeline lineno="1195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1197">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">Property<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Property()<sp/>:<sp/>schema(),<sp/>dependenciesSchema(),<sp/>dependenciesValidatorIndex(),<sp/>
                    dependencies(),<sp/>required(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="1200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~Property()<sp/>{<sp/>AllocatorType::Free(dependencies);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SValue<sp/>name;
                </highlight>
            </codeline>
            <codeline lineno="1202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>schema;
                </highlight>
            </codeline>
            <codeline lineno="1203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>dependenciesSchema;
                </highlight>
            </codeline>
            <codeline lineno="1204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>dependenciesValidatorIndex;
                </highlight>
            </codeline>
            <codeline lineno="1205">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">*<sp/>dependencies;
                </highlight>
            </codeline>
            <codeline lineno="1206">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>required;
                </highlight>
            </codeline>
            <codeline lineno="1207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="1208">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">PatternProperty<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PatternProperty()<sp/>:<sp/>schema(),<sp/>pattern()<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="1211">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~PatternProperty()<sp/>{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1212">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pattern)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1213">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>pattern-&gt;~RegexType();
                </highlight>
            </codeline>
            <codeline lineno="1214">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AllocatorType::Free(pattern);
                </highlight>
            </codeline>
            <codeline lineno="1215">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1216">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>schema;
                </highlight>
            </codeline>
            <codeline lineno="1218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RegexType*<sp/>pattern;
                </highlight>
            </codeline>
            <codeline lineno="1219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="1220">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1221">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AllocatorType*<sp/>allocator_;
                </highlight>
            </codeline>
            <codeline lineno="1222">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t*<sp/>enum_;
                </highlight>
            </codeline>
            <codeline lineno="1223">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>enumCount_;
                </highlight>
            </codeline>
            <codeline lineno="1224">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaArray<sp/>allOf_;
                </highlight>
            </codeline>
            <codeline lineno="1225">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaArray<sp/>anyOf_;
                </highlight>
            </codeline>
            <codeline lineno="1226">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaArray<sp/>oneOf_;
                </highlight>
            </codeline>
            <codeline lineno="1227">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>not_;
                </highlight>
            </codeline>
            <codeline lineno="1228">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>type_;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>bitmask<sp/>of<sp/>kSchemaType
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1229">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>validatorCount_;
                </highlight>
            </codeline>
            <codeline lineno="1230">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>notValidatorIndex_;
                </highlight>
            </codeline>
            <codeline lineno="1231">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1232">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Property*<sp/>properties_;
                </highlight>
            </codeline>
            <codeline lineno="1233">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>additionalPropertiesSchema_;
                </highlight>
            </codeline>
            <codeline lineno="1234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PatternProperty*<sp/>patternProperties_;
                </highlight>
            </codeline>
            <codeline lineno="1235">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>patternPropertyCount_;
                </highlight>
            </codeline>
            <codeline lineno="1236">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>propertyCount_;
                </highlight>
            </codeline>
            <codeline lineno="1237">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>minProperties_;
                </highlight>
            </codeline>
            <codeline lineno="1238">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>maxProperties_;
                </highlight>
            </codeline>
            <codeline lineno="1239">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>additionalProperties_;
                </highlight>
            </codeline>
            <codeline lineno="1240">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>hasDependencies_;
                </highlight>
            </codeline>
            <codeline lineno="1241">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>hasRequired_;
                </highlight>
            </codeline>
            <codeline lineno="1242">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>hasSchemaDependencies_;
                </highlight>
            </codeline>
            <codeline lineno="1243">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1244">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>additionalItemsSchema_;
                </highlight>
            </codeline>
            <codeline lineno="1245">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>itemsList_;
                </highlight>
            </codeline>
            <codeline lineno="1246">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType**<sp/>itemsTuple_;
                </highlight>
            </codeline>
            <codeline lineno="1247">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>itemsTupleCount_;
                </highlight>
            </codeline>
            <codeline lineno="1248">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>minItems_;
                </highlight>
            </codeline>
            <codeline lineno="1249">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>maxItems_;
                </highlight>
            </codeline>
            <codeline lineno="1250">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>additionalItems_;
                </highlight>
            </codeline>
            <codeline lineno="1251">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>uniqueItems_;
                </highlight>
            </codeline>
            <codeline lineno="1252">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1253">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RegexType*<sp/>pattern_;
                </highlight>
            </codeline>
            <codeline lineno="1254">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>minLength_;
                </highlight>
            </codeline>
            <codeline lineno="1255">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>maxLength_;
                </highlight>
            </codeline>
            <codeline lineno="1256">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1257">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SValue<sp/>minimum_;
                </highlight>
            </codeline>
            <codeline lineno="1258">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SValue<sp/>maximum_;
                </highlight>
            </codeline>
            <codeline lineno="1259">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SValue<sp/>multipleOf_;
                </highlight>
            </codeline>
            <codeline lineno="1260">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>exclusiveMinimum_;
                </highlight>
            </codeline>
            <codeline lineno="1261">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>exclusiveMaximum_;
                </highlight>
            </codeline>
            <codeline lineno="1262">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="1263">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1264">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Stack,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Ch&gt;
                </highlight>
            </codeline>
            <codeline lineno="1265" refid="structinternal_1_1_token_helper" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structinternal_1_1_token_helper" kindref="compound">TokenHelper</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1266">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>AppendIndexToken(<ref refid="classinternal_1_1_stack" kindref="compound">
                    Stack</ref>&amp;<sp/>documentStack,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1267">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack.template<sp/>Push&lt;Ch&gt;()<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;/&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1268">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>buffer[21];
                </highlight>
            </codeline>
            <codeline lineno="1269">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">((</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5"
                                                kindref="member">SizeType</ref>)<sp/>==<sp/>4<sp/>?<sp/>u32toa(index,
                    <sp/>buffer)<sp/>:<sp/>u64toa(index,<sp/>buffer))<sp/>-<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="1270">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="1271">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack.template<sp/>Push&lt;Ch&gt;()<sp/>=<sp/>buffer[i];
                </highlight>
            </codeline>
            <codeline lineno="1272">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1273">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="1274">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1275">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Partial<sp/>specialized<sp/>version<sp/>for<sp/>char<sp/>to<sp/>
                    prevent<sp/>buffer<sp/>copying.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1276">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Stack&gt;
                </highlight>
            </codeline>
            <codeline lineno="1277" refid="structinternal_1_1_token_helper_3_01_stack_00_01char_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_token_helper" kindref="compound">
                    TokenHelper</ref>&lt;<ref refid="classinternal_1_1_stack" kindref="compound">Stack</ref>,<sp/>char&gt;
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1278">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>AppendIndexToken(<ref refid="classinternal_1_1_stack" kindref="compound">
                    Stack</ref>&amp;<sp/>documentStack,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1279">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5"
                                                kindref="member">SizeType</ref>)<sp/>==<sp/>4)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1280">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*buffer<sp/>=<sp/>documentStack.template<sp/>Push&lt;char&gt;(1<sp/>+
                    <sp/>10);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>&apos;/&apos;<sp/>+<sp/>uint
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1281">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;/&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1282">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::u32toa(index,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="1283">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>documentStack.template<sp/>Pop&lt;char&gt;(
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(10<sp/>-<sp/>(end<sp/>-<sp/>buffer)));
                </highlight>
            </codeline>
            <codeline lineno="1284">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1285">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1286">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*buffer<sp/>=<sp/>documentStack.template<sp/>Push&lt;char&gt;(1<sp/>+
                    <sp/>20);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>&apos;/&apos;<sp/>+<sp/>uint64
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1287">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*buffer++<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;/&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1288">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">*<sp/>end<sp/>=<sp/>internal::u64toa(index,<sp/>buffer);
                </highlight>
            </codeline>
            <codeline lineno="1289">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>documentStack.template<sp/>Pop&lt;char&gt;(
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(20<sp/>-<sp/>(end<sp/>-<sp/>buffer)));
                </highlight>
            </codeline>
            <codeline lineno="1290">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1291">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1292">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="1293">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1294">
                <highlight class="normal">}
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>namespace<sp/>internal
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1295">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1297">
                <highlight class="comment">//<sp/>IGenericRemoteSchemaDocumentProvider
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1298">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1299">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&gt;
                </highlight>
            </codeline>
            <codeline lineno="1300">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">
                        IGenericRemoteSchemaDocumentProvider
                    </ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1301">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="1302">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType::Ch<sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="1303">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1304">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal"><sp/>~<ref refid="class_i_generic_remote_schema_document_provider"
                                                     kindref="compound">IGenericRemoteSchemaDocumentProvider</ref>()
                    <sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="1305">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType*<sp/>GetRemoteDocument(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>uri,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length)<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1306">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="1307">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1309">
                <highlight class="comment">//<sp/>GenericSchemaDocument
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1310">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1312"></codeline>
            <codeline lineno="1320">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueT,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator<sp/>=<sp/>CrtAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="1321">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_generic_schema_document" kindref="compound">GenericSchemaDocument</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1322">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="1323">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>ValueT<sp/>ValueType;
                </highlight>
            </codeline>
            <codeline lineno="1324">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">
                        IGenericRemoteSchemaDocumentProvider&lt;GenericSchemaDocument&gt;</ref>
                    <sp/>IRemoteSchemaDocumentProviderType;
                </highlight>
            </codeline>
            <codeline lineno="1325">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>Allocator<sp/>AllocatorType;
                </highlight>
            </codeline>
            <codeline lineno="1326">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::EncodingType<sp/>EncodingType;
                </highlight>
            </codeline>
            <codeline lineno="1327">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>EncodingType::Ch<sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="1328">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_schema" kindref="compound">internal::Schema&lt;GenericSchemaDocument&gt;</ref>
                    <sp/>SchemaType;
                </highlight>
            </codeline>
            <codeline lineno="1329">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_pointer" kindref="compound">GenericPointer&lt;ValueType,
                        Allocator&gt;</ref>
                    <sp/>PointerType;
                </highlight>
            </codeline>
            <codeline lineno="1330">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="classinternal_1_1_schema" kindref="compound">
                    internal::Schema</ref>&lt;GenericSchemaDocument&gt;;
                </highlight>
            </codeline>
            <codeline lineno="1331">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">&gt;</highlight>
            </codeline>
            <codeline lineno="1332">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_schema_validator" kindref="compound">
                    GenericSchemaValidator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1333">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1335"></codeline>
            <codeline lineno="1342" refid="class_generic_schema_document_1a5577c9b9a7a898207a50db891388231c"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_schema_document_1a5577c9b9a7a898207a50db891388231c" kindref="member">
                        GenericSchemaDocument</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>document,<sp/>IRemoteSchemaDocumentProviderType*<sp/>
                    remoteProvider<sp/>=<sp/>0,<sp/>Allocator*<sp/>allocator<sp/>=<sp/>0)<sp/>:
                </highlight>
            </codeline>
            <codeline lineno="1343">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>remoteProvider_(remoteProvider),
                </highlight>
            </codeline>
            <codeline lineno="1344">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>allocator_(allocator),
                </highlight>
            </codeline>
            <codeline lineno="1345">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownAllocator_(),
                </highlight>
            </codeline>
            <codeline lineno="1346">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>root_(),
                </highlight>
            </codeline>
            <codeline lineno="1347">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaMap_(allocator,<sp/>kInitialSchemaMapSize),
                </highlight>
            </codeline>
            <codeline lineno="1348">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaRef_(allocator,<sp/>kInitialSchemaRefSize)
                </highlight>
            </codeline>
            <codeline lineno="1349">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1350">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!allocator_)
                </highlight>
            </codeline>
            <codeline lineno="1351">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownAllocator_<sp/>=<sp/>allocator_<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1ab9e102fa2f1a0ae4914d4dac21f690a2" kindref="member">RAPIDJSON_NEW</ref>
                    (Allocator());
                </highlight>
            </codeline>
            <codeline lineno="1352">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1353">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Generate<sp/>root<sp/>schema,<sp/>it<sp/>will<sp/>call<sp/>
                    CreateSchema()<sp/>to<sp/>create<sp/>sub-schemas,
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1354">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>And<sp/>call<sp/>AddRefSchema()<sp/>if<sp/>there<sp/>are<sp/>$ref.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1355">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CreateSchemaRecursive(&amp;root_,<sp/>PointerType(),<sp/>document,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="1356">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1357">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Resolve<sp/>$ref
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1358">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(!schemaRef_.Empty())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1359">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaRefEntry*<sp/>refEntry<sp/>=<sp/>schemaRef_.template<sp/>Pop&lt;SchemaRefEntry&gt;(1);
                </highlight>
            </codeline>
            <codeline lineno="1360">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>s<sp/>=<sp/>GetSchema(refEntry-&gt;target))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1361">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(refEntry-&gt;schema)
                </highlight>
            </codeline>
            <codeline lineno="1362">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*refEntry-&gt;schema<sp/>=<sp/>s;
                </highlight>
            </codeline>
            <codeline lineno="1363">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1364">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Create<sp/>entry<sp/>in<sp/>map<sp/>if<sp/>not<sp/>exist
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1365">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!GetSchema(refEntry-&gt;source))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1366">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(schemaMap_.template<sp/>Push&lt;SchemaEntry&gt;())<sp/>
                    SchemaEntry(refEntry-&gt;source,<sp/>const_cast&lt;SchemaType*&gt;(s),
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">,<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="1367">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1368">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1369">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>refEntry-&gt;~SchemaRefEntry();
                </highlight>
            </codeline>
            <codeline lineno="1370">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1371">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1372">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(root_<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="1373">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1374">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaRef_.ShrinkToFit();
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Deallocate<sp/>all<sp/>memory<sp/>for<sp/>ref
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1375">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1376">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1377">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1378">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GenericSchemaDocument(GenericSchemaDocument&amp;&amp;<sp/>rhs)<sp/>RAPIDJSON_NOEXCEPT<sp/>:
                </highlight>
            </codeline>
            <codeline lineno="1380">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>remoteProvider_(rhs.remoteProvider_),
                </highlight>
            </codeline>
            <codeline lineno="1381">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>allocator_(rhs.allocator_),
                </highlight>
            </codeline>
            <codeline lineno="1382">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownAllocator_(rhs.ownAllocator_),
                </highlight>
            </codeline>
            <codeline lineno="1383">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>root_(rhs.root_),
                </highlight>
            </codeline>
            <codeline lineno="1384">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaMap_(std::move(rhs.schemaMap_)),
                </highlight>
            </codeline>
            <codeline lineno="1385">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaRef_(std::move(rhs.schemaRef_))
                </highlight>
            </codeline>
            <codeline lineno="1386">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1387">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.remoteProvider_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1388">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.allocator_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1389">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.ownAllocator_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1390">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1391">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1392">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1394" refid="class_generic_schema_document_1a6a54dfd1aec0f560f7e47e08f3fcb8f1"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_schema_document_1a6a54dfd1aec0f560f7e47e08f3fcb8f1" kindref="member">
                        ~GenericSchemaDocument</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1395">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(!schemaMap_.Empty())
                </highlight>
            </codeline>
            <codeline lineno="1396">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaMap_.template<sp/>Pop&lt;SchemaEntry&gt;(1)-&gt;~SchemaEntry();
                </highlight>
            </codeline>
            <codeline lineno="1397">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1398">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a" kindref="member">RAPIDJSON_DELETE</ref>
                    (ownAllocator_);
                </highlight>
            </codeline>
            <codeline lineno="1399">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1400">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1402" refid="class_generic_schema_document_1a3b86ad6eab393014cc5b3c52da5c4bc2"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType&amp;
                    <sp/>
                    <ref refid="class_generic_schema_document_1a3b86ad6eab393014cc5b3c52da5c4bc2" kindref="member">
                        GetRoot</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*root_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1403">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1404">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="1406">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GenericSchemaDocument(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>GenericSchemaDocument&amp;);
                </highlight>
            </codeline>
            <codeline lineno="1408">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GenericSchemaDocument&amp;<sp/>operator=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>GenericSchemaDocument&amp;);
                </highlight>
            </codeline>
            <codeline lineno="1409">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1410">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">SchemaRefEntry<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1411">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaRefEntry(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>s,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>t,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType**<sp/>outSchema,<sp/>Allocator<sp/>*allocator)<sp/>:<sp/>
                    source(s,<sp/>allocator),<sp/>target(t,<sp/>allocator),<sp/>schema(outSchema)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="1412">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>source;
                </highlight>
            </codeline>
            <codeline lineno="1413">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>target;
                </highlight>
            </codeline>
            <codeline lineno="1414">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType**<sp/>schema;
                </highlight>
            </codeline>
            <codeline lineno="1415">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="1416">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">SchemaEntry<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1418">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaEntry(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>p,<sp/>SchemaType*<sp/>s,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>o,<sp/>Allocator*<sp/>allocator)<sp/>:<sp/>pointer(p,<sp/>allocator),
                    <sp/>schema(s),<sp/>owned(o)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="1419">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~SchemaEntry()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1420">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(owned)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1421">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schema-&gt;~SchemaType();
                </highlight>
            </codeline>
            <codeline lineno="1422">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Allocator::Free(schema);
                </highlight>
            </codeline>
            <codeline lineno="1423">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1424">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1425">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>pointer;
                </highlight>
            </codeline>
            <codeline lineno="1426">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaType*<sp/>schema;
                </highlight>
            </codeline>
            <codeline lineno="1427">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>owned;
                </highlight>
            </codeline>
            <codeline lineno="1428">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="1429">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1430">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>CreateSchemaRecursive(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType**<sp/>schema,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>pointer,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>document)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1431">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(schema)
                </highlight>
            </codeline>
            <codeline lineno="1432">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*schema<sp/>=<sp/>SchemaType::GetTypeless();
                </highlight>
            </codeline>
            <codeline lineno="1433">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1434">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v.GetType()<sp/>==
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                         kindref="member">kObjectType</ref>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1435">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>s<sp/>=<sp/>GetSchema(pointer);
                </highlight>
            </codeline>
            <codeline lineno="1436">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!s)
                </highlight>
            </codeline>
            <codeline lineno="1437">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CreateSchema(schema,<sp/>pointer,<sp/>v,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="1438">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1439">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::ConstMemberIterator<sp/>itr<sp/>=<sp/>v.MemberBegin();<sp/>itr
                    <sp/>!=<sp/>v.MemberEnd();<sp/>++itr)
                </highlight>
            </codeline>
            <codeline lineno="1440">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CreateSchemaRecursive(0,<sp/>pointer.<ref
                        refid="class_generic_pointer_1aa8f86c0f330807f337351a95ae254b78" kindref="member">Append</ref>(itr-&gt;name,
                    <sp/>allocator_),<sp/>itr-&gt;value,<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="1441">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1442">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v.GetType()<sp/>==
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                         kindref="member">kArrayType</ref>)
                </highlight>
            </codeline>
            <codeline lineno="1443">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>v.Size();<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="1444">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CreateSchemaRecursive(0,<sp/>pointer.<ref
                        refid="class_generic_pointer_1aa8f86c0f330807f337351a95ae254b78" kindref="member">Append</ref>(i,
                    <sp/>allocator_),<sp/>v[i],<sp/>document);
                </highlight>
            </codeline>
            <codeline lineno="1445">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1446">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1447">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>CreateSchema(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType**<sp/>schema,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>pointer,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>document)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1448">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(pointer.IsValid());
                </highlight>
            </codeline>
            <codeline lineno="1449">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(v.IsObject())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1450">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!HandleRefSchema(pointer,<sp/>schema,<sp/>v,<sp/>document))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1451">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SchemaType*<sp/>s<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(allocator_-&gt;Malloc(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(SchemaType)))<sp/>SchemaType(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">,<sp/>pointer,<sp/>v,<sp/>document,<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="1452">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(schemaMap_.template<sp/>Push&lt;SchemaEntry&gt;())<sp/>
                    SchemaEntry(pointer,<sp/>s,
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">,<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="1453">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(schema)
                </highlight>
            </codeline>
            <codeline lineno="1454">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*schema<sp/>=<sp/>s;
                </highlight>
            </codeline>
            <codeline lineno="1455">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1456">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1457">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1458">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1459">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>HandleRefSchema(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>source,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType**<sp/>schema,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>document)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1460">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch<sp/>kRefString[]<sp/>=<sp/>{
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;$&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;r&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;e&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;f&apos;</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal"><sp/>};
                </highlight>
            </codeline>
            <codeline lineno="1461">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType<sp/>kRefValue(kRefString,<sp/>4);
                </highlight>
            </codeline>
            <codeline lineno="1462">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1463">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::ConstMemberIterator<sp/>itr<sp/>=<sp/>v.FindMember(kRefValue);
                </highlight>
            </codeline>
            <codeline lineno="1464">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itr<sp/>==<sp/>v.MemberEnd())
                </highlight>
            </codeline>
            <codeline lineno="1465">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1466">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1467">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itr-&gt;value.IsString())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1468">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len<sp/>=<sp/>itr-&gt;value.GetStringLength();
                </highlight>
            </codeline>
            <codeline lineno="1469">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1470">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>s<sp/>=<sp/>itr-&gt;value.GetString();
                </highlight>
            </codeline>
            <codeline lineno="1471">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1472">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>s[i]<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;#&apos;</highlight>
                <highlight class="normal">)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>#
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1473">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>i++;
                </highlight>
            </codeline>
            <codeline lineno="1474">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1475">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Remote<sp/>reference,<sp/>resolve<sp/>immediately
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1476">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(remoteProvider_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1477">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>GenericSchemaDocument*<sp/>remoteDocument<sp/>=<sp/>remoteProvider_-&gt;GetRemoteDocument(s,
                    <sp/>i))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1478">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>pointer(&amp;s[i],<sp/>len<sp/>-<sp/>i,<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="1479">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pointer.IsValid())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1480">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>sc<sp/>=<sp/>remoteDocument-&gt;GetSchema(pointer))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1481">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(schema)
                </highlight>
            </codeline>
            <codeline lineno="1482">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*schema<sp/>=<sp/>sc;
                </highlight>
            </codeline>
            <codeline lineno="1483">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1484">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1485">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1486">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1487">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1488">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1489">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(s[i]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;#&apos;</highlight>
                <highlight class="normal">)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Local<sp/>reference,<sp/>defer<sp/>resolution
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1490">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>pointer(&amp;s[i],<sp/>len<sp/>-<sp/>i,<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="1491">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pointer.IsValid())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1492">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>nv<sp/>=<sp/>pointer.Get(document))
                </highlight>
            </codeline>
            <codeline lineno="1493">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(HandleRefSchema(source,<sp/>schema,<sp/>*nv,<sp/>document))
                </highlight>
            </codeline>
            <codeline lineno="1494">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1495">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1496">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(schemaRef_.template<sp/>Push&lt;SchemaRefEntry&gt;())<sp/>
                    SchemaRefEntry(source,<sp/>pointer,<sp/>schema,<sp/>allocator_);
                </highlight>
            </codeline>
            <codeline lineno="1497">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1498">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1499">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1500">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1501">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1502">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1503">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1504">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1505">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>GetSchema(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>pointer)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1506">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaEntry*<sp/>target<sp/>=<sp/>schemaMap_.template<sp/>Bottom&lt;SchemaEntry&gt;();
                    <sp/>target<sp/>!=<sp/>schemaMap_.template<sp/>End&lt;SchemaEntry&gt;();<sp/>++target)
                </highlight>
            </codeline>
            <codeline lineno="1507">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(pointer<sp/>==<sp/>target-&gt;pointer)
                </highlight>
            </codeline>
            <codeline lineno="1508">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>target-&gt;schema;
                </highlight>
            </codeline>
            <codeline lineno="1509">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1510">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1511">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1512">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>GetPointer(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>schema)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1513">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaEntry*<sp/>target<sp/>=<sp/>schemaMap_.template<sp/>Bottom&lt;SchemaEntry&gt;();
                    <sp/>target<sp/>!=<sp/>schemaMap_.template<sp/>End&lt;SchemaEntry&gt;();<sp/>++target)
                </highlight>
            </codeline>
            <codeline lineno="1514">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(schema<sp/>==<sp/>target-&gt;schema)
                </highlight>
            </codeline>
            <codeline lineno="1515">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>target-&gt;pointer;
                </highlight>
            </codeline>
            <codeline lineno="1516">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>PointerType();
                </highlight>
            </codeline>
            <codeline lineno="1517">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1518">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1519">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>kInitialSchemaMapSize<sp/>=<sp/>64;
                </highlight>
            </codeline>
            <codeline lineno="1520">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>kInitialSchemaRefSize<sp/>=<sp/>64;
                </highlight>
            </codeline>
            <codeline lineno="1521">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1522">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>IRemoteSchemaDocumentProviderType*<sp/>remoteProvider_;
                </highlight>
            </codeline>
            <codeline lineno="1523">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Allocator<sp/>*allocator_;
                </highlight>
            </codeline>
            <codeline lineno="1524">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Allocator<sp/>*ownAllocator_;
                </highlight>
            </codeline>
            <codeline lineno="1525">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType*<sp/>root_;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1526">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;Allocator&gt;</ref>
                    <sp/>schemaMap_;
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Stores<sp/>created<sp/>Pointer<sp/>-&gt;<sp/>Schemas
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1527">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;Allocator&gt;</ref>
                    <sp/>schemaRef_;
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Stores<sp/>Pointer<sp/>from<sp/>$ref<sp/>and<sp/>schema<sp/>which<sp/>
                    holds<sp/>the<sp/>$ref
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1528">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="1529">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1531">
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_schema_document" kindref="compound">
                        GenericSchemaDocument&lt;Value&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_schema_document" kindref="compound">SchemaDocument</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1533">
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">
                        IGenericRemoteSchemaDocumentProvider&lt;SchemaDocument&gt;</ref>
                    <sp/>
                    <ref refid="class_i_generic_remote_schema_document_provider" kindref="compound">
                        IRemoteSchemaDocumentProvider</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1534">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1536">
                <highlight class="comment">//<sp/>GenericSchemaValidator
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1537">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1539"></codeline>
            <codeline lineno="1550">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
            </codeline>
            <codeline lineno="1551">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType,
                </highlight>
            </codeline>
            <codeline lineno="1552">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>OutputHandler<sp/>=
                    <sp/>
                    <ref refid="struct_base_reader_handler" kindref="compound">BaseReaderHandler&lt;typename
                        SchemaDocumentType::SchemaType::EncodingType&gt;</ref>,
                </highlight>
            </codeline>
            <codeline lineno="1553">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StateAllocator<sp/>=
                    <sp/>
                    <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;
                </highlight>
            </codeline>
            <codeline lineno="1554">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>
                    <sp/>:
                </highlight>
            </codeline>
            <codeline lineno="1555">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_i_schema_state_factory" kindref="compound">
                        internal::ISchemaStateFactory</ref>&lt;typename<sp/>SchemaDocumentType::SchemaType&gt;,
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1556">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_i_schema_validator" kindref="compound">internal::ISchemaValidator
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="1557">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1558">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="1559">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType::SchemaType
                    <sp/>
                    <ref refid="classinternal_1_1_schema" kindref="compound">SchemaType</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1560">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType::PointerType
                    <sp/>
                    <ref refid="class_generic_pointer" kindref="compound">PointerType</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1561">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaType::EncodingType<sp/>EncodingType;
                </highlight>
            </codeline>
            <codeline lineno="1562">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>EncodingType::Ch<sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="1563">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1565"></codeline>
            <codeline lineno="1571" refid="class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_schema_validator_1a202ee6fdbe5ae9eab3e77a81ecdfeb6d" kindref="member">
                        GenericSchemaValidator</ref>(
                </highlight>
            </codeline>
            <codeline lineno="1572">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>schemaDocument,
                </highlight>
            </codeline>
            <codeline lineno="1573">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StateAllocator*<sp/>allocator<sp/>=<sp/>0,
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1574">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>schemaStackCapacity<sp/>=<sp/>kDefaultSchemaStackCapacity,
                </highlight>
            </codeline>
            <codeline lineno="1575">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>documentStackCapacity<sp/>=<sp/>kDefaultDocumentStackCapacity)
                </highlight>
            </codeline>
            <codeline lineno="1576">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:
                </highlight>
            </codeline>
            <codeline lineno="1577">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument_(&amp;schemaDocument),
                </highlight>
            </codeline>
            <codeline lineno="1578">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>root_(schemaDocument.GetRoot()),
                </highlight>
            </codeline>
            <codeline lineno="1579">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>outputHandler_(GetNullHandler()),
                </highlight>
            </codeline>
            <codeline lineno="1580">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stateAllocator_(allocator),
                </highlight>
            </codeline>
            <codeline lineno="1581">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownStateAllocator_(0),
                </highlight>
            </codeline>
            <codeline lineno="1582">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaStack_(allocator,<sp/>schemaStackCapacity),
                </highlight>
            </codeline>
            <codeline lineno="1583">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>documentStack_(allocator,<sp/>documentStackCapacity),
                </highlight>
            </codeline>
            <codeline lineno="1584">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>valid_(true)
                </highlight>
            </codeline>
            <codeline lineno="1585">
                <highlight class="normal">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
            </codeline>
            <codeline lineno="1586">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>,<sp/>depth_(0)
                </highlight>
            </codeline>
            <codeline lineno="1587">
                <highlight class="normal">#endif</highlight>
            </codeline>
            <codeline lineno="1588">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1589">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1590">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1592"></codeline>
            <codeline lineno="1598" refid="class_generic_schema_validator_1ac2027be8ca55b01cd6f38b45f4e233b4"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_schema_validator_1ac2027be8ca55b01cd6f38b45f4e233b4" kindref="member">
                        GenericSchemaValidator</ref>(
                </highlight>
            </codeline>
            <codeline lineno="1599">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>schemaDocument,
                </highlight>
            </codeline>
            <codeline lineno="1600">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>OutputHandler&amp;<sp/>outputHandler,
                </highlight>
            </codeline>
            <codeline lineno="1601">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StateAllocator*<sp/>allocator<sp/>=<sp/>0,
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1602">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>schemaStackCapacity<sp/>=<sp/>kDefaultSchemaStackCapacity,
                </highlight>
            </codeline>
            <codeline lineno="1603">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>documentStackCapacity<sp/>=<sp/>kDefaultDocumentStackCapacity)
                </highlight>
            </codeline>
            <codeline lineno="1604">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:
                </highlight>
            </codeline>
            <codeline lineno="1605">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument_(&amp;schemaDocument),
                </highlight>
            </codeline>
            <codeline lineno="1606">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>root_(schemaDocument.GetRoot()),
                </highlight>
            </codeline>
            <codeline lineno="1607">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>outputHandler_(outputHandler),
                </highlight>
            </codeline>
            <codeline lineno="1608">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stateAllocator_(allocator),
                </highlight>
            </codeline>
            <codeline lineno="1609">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownStateAllocator_(0),
                </highlight>
            </codeline>
            <codeline lineno="1610">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaStack_(allocator,<sp/>schemaStackCapacity),
                </highlight>
            </codeline>
            <codeline lineno="1611">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>documentStack_(allocator,<sp/>documentStackCapacity),
                </highlight>
            </codeline>
            <codeline lineno="1612">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>valid_(true)
                </highlight>
            </codeline>
            <codeline lineno="1613">
                <highlight class="normal">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
            </codeline>
            <codeline lineno="1614">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>,<sp/>depth_(0)
                </highlight>
            </codeline>
            <codeline lineno="1615">
                <highlight class="normal">#endif</highlight>
            </codeline>
            <codeline lineno="1616">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1617">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1618">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1620" refid="class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963" kindref="member">
                        ~GenericSchemaValidator</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1621">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Reset();
                </highlight>
            </codeline>
            <codeline lineno="1622">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a" kindref="member">RAPIDJSON_DELETE</ref>
                    (ownStateAllocator_);
                </highlight>
            </codeline>
            <codeline lineno="1623">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1624">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1626" refid="class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_schema_validator_1a49efbbe098cb77728be3d48cafed17e4" kindref="member">
                        Reset</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1627">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(!schemaStack_.Empty())
                </highlight>
            </codeline>
            <codeline lineno="1628">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PopSchema();
                </highlight>
            </codeline>
            <codeline lineno="1629">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>documentStack_.Clear();
                </highlight>
            </codeline>
            <codeline lineno="1630">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>valid_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1631">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1632">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1634">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Implementation<sp/>of<sp/>ISchemaValidator
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1635" refid="class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19" kindref="member">
                        IsValid</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>valid_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1636">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1638" refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType
                    <sp/>
                    <ref refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" kindref="member">
                        GetInvalidSchemaPointer</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1639">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>schemaStack_.Empty()<sp/>?<sp/>PointerType()<sp/>:<sp/>schemaDocument_-&gt;GetPointer(&amp;CurrentSchema());
                </highlight>
            </codeline>
            <codeline lineno="1640">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1641">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1643" refid="class_generic_schema_validator_1ab71ec18e5a013e5153a10b312a4f03bc"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*
                    <sp/>
                    <ref refid="class_generic_schema_validator_1ab71ec18e5a013e5153a10b312a4f03bc" kindref="member">
                        GetInvalidSchemaKeyword</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1644">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>schemaStack_.Empty()<sp/>?<sp/>0<sp/>:<sp/>
                    CurrentContext().invalidKeyword;
                </highlight>
            </codeline>
            <codeline lineno="1645">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1646">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1648" refid="class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType
                    <sp/>
                    <ref refid="class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0" kindref="member">
                        GetInvalidDocumentPointer</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1649">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>documentStack_.Empty()<sp/>?<sp/>PointerType()<sp/>:<sp/>
                    PointerType(documentStack_.template<sp/>Bottom&lt;Ch&gt;(),<sp/>documentStack_.GetSize()<sp/>/
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Ch));</highlight>
            </codeline>
            <codeline lineno="1650">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1651">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1652">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1653">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_()<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="1654">
                <highlight class="preprocessor">RAPIDJSON_MULTILINEMACRO_BEGIN\</highlight>
            </codeline>
            <codeline lineno="1655">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack_.template<sp/>Push&lt;Ch&gt;()<sp/>=<sp/>&apos;\0&apos;;\
                </highlight>
            </codeline>
            <codeline lineno="1656">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>documentStack_.template<sp/>Pop&lt;Ch&gt;(1);\
                </highlight>
            </codeline>
            <codeline lineno="1657">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>internal::PrintInvalidDocument(documentStack_.template<sp/>Bottom&lt;Ch&gt;());\
                </highlight>
            </codeline>
            <codeline lineno="1658">
                <highlight class="preprocessor">RAPIDJSON_MULTILINEMACRO_END</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1659">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1660">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_()
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1661">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1662">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1663">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_(method,<sp/>arg1)\
                </highlight>
            </codeline>
            <codeline lineno="1664">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>if<sp/>(!valid_)<sp/>return<sp/>false;<sp/>\
                </highlight>
            </codeline>
            <codeline lineno="1665">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>if<sp/>(!BeginValue()<sp/>||<sp/>!CurrentSchema().method<sp/>arg1)<sp/>{\
                </highlight>
            </codeline>
            <codeline lineno="1666">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_();\
                </highlight>
            </codeline>
            <codeline lineno="1667">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>return<sp/>valid_<sp/>=<sp/>false;\
                </highlight>
            </codeline>
            <codeline lineno="1668">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1669">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1670">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(method,<sp/>arg2)\
                </highlight>
            </codeline>
            <codeline lineno="1671">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>for<sp/>(Context*<sp/>context<sp/>=<sp/>schemaStack_.template<sp/>Bottom&lt;Context&gt;();<sp/>
                    context<sp/>!=<sp/>schemaStack_.template<sp/>End&lt;Context&gt;();<sp/>context++)<sp/>{\
                </highlight>
            </codeline>
            <codeline lineno="1672">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>if<sp/>(context-&gt;hasher)\
                </highlight>
            </codeline>
            <codeline lineno="1673">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>static_cast&lt;HasherType*&gt;(context-&gt;hasher)-&gt;method<sp/>arg2;\
                </highlight>
            </codeline>
            <codeline lineno="1674">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>if<sp/>(context-&gt;validators)\
                </highlight>
            </codeline>
            <codeline lineno="1675">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>for<sp/>(SizeType<sp/>i_<sp/>=<sp/>0;<sp/>i_<sp/>&lt;<sp/>context-&gt;validatorCount;<sp/>
                    i_++)\
                </highlight>
            </codeline>
            <codeline lineno="1676">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>static_cast&lt;GenericSchemaValidator*&gt;(context-&gt;validators[i_])-&gt;method<sp/>arg2;\
                </highlight>
            </codeline>
            <codeline lineno="1677">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>if<sp/>(context-&gt;patternPropertiesValidators)\
                </highlight>
            </codeline>
            <codeline lineno="1678">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>for<sp/>(SizeType<sp/>i_<sp/>=<sp/>0;<sp/>i_<sp/>&lt;<sp/>context-&gt;patternPropertiesValidatorCount;
                    <sp/>i_++)\
                </highlight>
            </codeline>
            <codeline lineno="1679">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>static_cast&lt;GenericSchemaValidator*&gt;(context-&gt;patternPropertiesValidators[i_])-&gt;method
                    <sp/>arg2;\
                </highlight>
            </codeline>
            <codeline lineno="1680">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1681">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1682">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_END_(method,<sp/>arg2)\
                </highlight>
            </codeline>
            <codeline lineno="1683">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>return<sp/>valid_<sp/>=<sp/>EndValue()<sp/>&amp;&amp;<sp/>outputHandler_.method<sp/>arg2
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1684">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1685">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(method,<sp/>arg1,<sp/>arg2)
                    <sp/>\
                </highlight>
            </codeline>
            <codeline lineno="1686">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_
                    <sp/>
                    <sp/>
                    <sp/>(method,<sp/>arg1);\
                </highlight>
            </codeline>
            <codeline lineno="1687">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(method,<sp/>arg2);\
                </highlight>
            </codeline>
            <codeline lineno="1688">
                <highlight class="preprocessor">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_END_
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(method,<sp/>arg2)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1689">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1690">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Null()
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(Null,
                    <sp/>
                    <sp/>
                    <sp/>(CurrentContext()
                    <sp/>
                    <sp/>
                    <sp/>),<sp/>(<sp/>));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1691">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Bool(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>b)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(Bool,
                    <sp/>
                    <sp/>
                    <sp/>(CurrentContext(),<sp/>b),<sp/>(b));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1692">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(Int,
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(CurrentContext(),<sp/>i),<sp/>(i));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1693">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u)
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(Uint,
                    <sp/>
                    <sp/>
                    <sp/>(CurrentContext(),<sp/>u),<sp/>(u));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1694">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int64(int64_t<sp/>i)
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(Int64,
                    <sp/>
                    <sp/>(CurrentContext(),<sp/>i),<sp/>(i));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1695">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint64(uint64_t<sp/>u)<sp/>{<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(Uint64,
                    <sp/>(CurrentContext(),<sp/>u),<sp/>(u));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1696">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Double(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(Double,<sp/>(CurrentContext(),<sp/>d),<sp/>(d));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1697">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RawNumber(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy)
                </highlight>
            </codeline>
            <codeline lineno="1698">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(String,<sp/>(CurrentContext(),<sp/>str,<sp/>length,<sp/>
                    copy),<sp/>(str,<sp/>length,<sp/>copy));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1699">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>String(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy)
                </highlight>
            </codeline>
            <codeline lineno="1700">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_(String,<sp/>(CurrentContext(),<sp/>str,<sp/>length,<sp/>
                    copy),<sp/>(str,<sp/>length,<sp/>copy));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1701">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1702">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartObject()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1703">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_(StartObject,<sp/>(CurrentContext()));
                </highlight>
            </codeline>
            <codeline lineno="1704">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(StartObject,<sp/>());
                </highlight>
            </codeline>
            <codeline lineno="1705">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>valid_<sp/>=<sp/>outputHandler_.StartObject();
                </highlight>
            </codeline>
            <codeline lineno="1706">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1707">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1708">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Key(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1709">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!valid_)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1710">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AppendToken(str,<sp/>len);
                </highlight>
            </codeline>
            <codeline lineno="1711">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CurrentSchema().Key(CurrentContext(),<sp/>str,<sp/>len,<sp/>copy))
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>valid_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1712">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(Key,<sp/>(str,<sp/>len,<sp/>copy));
                </highlight>
            </codeline>
            <codeline lineno="1713">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>valid_<sp/>=<sp/>outputHandler_.Key(str,<sp/>len,<sp/>copy);
                </highlight>
            </codeline>
            <codeline lineno="1714">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1715">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1716">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndObject(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>memberCount)<sp/>{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1717">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!valid_)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1718">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(EndObject,<sp/>(memberCount));
                </highlight>
            </codeline>
            <codeline lineno="1719">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CurrentSchema().EndObject(CurrentContext(),<sp/>memberCount))
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>valid_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1720">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_END_(EndObject,<sp/>(memberCount));
                </highlight>
            </codeline>
            <codeline lineno="1721">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1722">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1723">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartArray()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1724">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_(StartArray,<sp/>(CurrentContext()));
                </highlight>
            </codeline>
            <codeline lineno="1725">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(StartArray,<sp/>());
                </highlight>
            </codeline>
            <codeline lineno="1726">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>valid_<sp/>=<sp/>outputHandler_.StartArray();
                </highlight>
            </codeline>
            <codeline lineno="1727">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1728">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1729">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndArray(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>elementCount)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1730">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!valid_)
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1731">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_(EndArray,<sp/>(elementCount));
                </highlight>
            </codeline>
            <codeline lineno="1732">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CurrentSchema().EndArray(CurrentContext(),<sp/>elementCount))
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>valid_<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1733">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_SCHEMA_HANDLE_END_(EndArray,<sp/>(elementCount));
                </highlight>
            </codeline>
            <codeline lineno="1734">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1735">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1736">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#undef<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1737">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#undef<sp/>RAPIDJSON_SCHEMA_HANDLE_BEGIN_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1738">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#undef<sp/>RAPIDJSON_SCHEMA_HANDLE_PARALLEL_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1739">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#undef<sp/>RAPIDJSON_SCHEMA_HANDLE_VALUE_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1740">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1741">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Implementation<sp/>of<sp/>ISchemaStateFactory&lt;SchemaType&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1742">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal"><sp/>ISchemaValidator*<sp/>CreateSchemaValidator(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType&amp;<sp/>root)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1743">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(GetStateAllocator().Malloc(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="class_generic_schema_validator" kindref="compound">
                    GenericSchemaValidator</ref>)))
                    <sp/>
                    <ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>
                    (*schemaDocument_,<sp/>root,
                </highlight>
            </codeline>
            <codeline lineno="1744">
                <highlight class="normal">#</highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
            </codeline>
            <codeline lineno="1745">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>depth_<sp/>+<sp/>1,
                </highlight>
            </codeline>
            <codeline lineno="1746">
                <highlight class="normal">#endif</highlight>
            </codeline>
            <codeline lineno="1747">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;GetStateAllocator());
                </highlight>
            </codeline>
            <codeline lineno="1748">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1749">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1750">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>DestroySchemaValidator(ISchemaValidator*<sp/>validator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1751">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>*<sp/>v
                    <sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal"><ref refid="class_generic_schema_validator" kindref="compound">
                    GenericSchemaValidator</ref>*
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(validator);</highlight>
            </codeline>
            <codeline lineno="1752">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v-&gt;<ref refid="class_generic_schema_validator_1a3eab83d483a50efb0c0390adf3291963"
                                    kindref="member">~GenericSchemaValidator</ref>();
                </highlight>
            </codeline>
            <codeline lineno="1753">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StateAllocator::Free(v);
                </highlight>
            </codeline>
            <codeline lineno="1754">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1755">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1756">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>CreateHasher()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1757">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(GetStateAllocator().Malloc(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>)))
                    <sp/>
                    <ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>(&amp;GetStateAllocator());
                </highlight>
            </codeline>
            <codeline lineno="1758">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1759">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1760">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal"><sp/>uint64_t<sp/>GetHashCode(
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>hasher)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1761">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal"><ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>*
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(hasher)-&gt;GetHashCode();</highlight>
            </codeline>
            <codeline lineno="1762">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1763">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1764">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>DestroryHasher(
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>hasher)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1765">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>*<sp/>h<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal"><ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>*
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(hasher);</highlight>
            </codeline>
            <codeline lineno="1766">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>h-&gt;~HasherType();
                </highlight>
            </codeline>
            <codeline lineno="1767">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StateAllocator::Free(h);
                </highlight>
            </codeline>
            <codeline lineno="1768">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1769">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1770">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>MallocState(
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>size)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1771">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>GetStateAllocator().Malloc(size);
                </highlight>
            </codeline>
            <codeline lineno="1772">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1773">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1774">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">virtual</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>FreeState(
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*<sp/>p)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1775">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>StateAllocator::Free(p);
                </highlight>
            </codeline>
            <codeline lineno="1776">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1777">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1778">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="1779">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaType::Context<sp/>Context;
                </highlight>
            </codeline>
            <codeline lineno="1780">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;UTF8&lt;&gt;</ref>,<sp/>
                    StateAllocator&gt;
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">HashCodeArray</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1781">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classinternal_1_1_hasher" kindref="compound">internal::Hasher&lt;EncodingType,
                        StateAllocator&gt;</ref>
                    <sp/>
                    <ref refid="classinternal_1_1_hasher" kindref="compound">HasherType</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1782">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1783">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator</ref>(
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1784">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>schemaDocument,
                </highlight>
            </codeline>
            <codeline lineno="1785">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType&amp;<sp/>root,
                </highlight>
            </codeline>
            <codeline lineno="1786">
                <highlight class="normal">#</highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
            </codeline>
            <codeline lineno="1787">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>depth,
                </highlight>
            </codeline>
            <codeline lineno="1788">
                <highlight class="normal">#endif</highlight>
            </codeline>
            <codeline lineno="1789">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StateAllocator*<sp/>allocator<sp/>=<sp/>0,
                </highlight>
            </codeline>
            <codeline lineno="1790">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>schemaStackCapacity<sp/>=<sp/>kDefaultSchemaStackCapacity,
                </highlight>
            </codeline>
            <codeline lineno="1791">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>documentStackCapacity<sp/>=<sp/>kDefaultDocumentStackCapacity)
                </highlight>
            </codeline>
            <codeline lineno="1792">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:
                </highlight>
            </codeline>
            <codeline lineno="1793">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument_(&amp;schemaDocument),
                </highlight>
            </codeline>
            <codeline lineno="1794">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>root_(root),
                </highlight>
            </codeline>
            <codeline lineno="1795">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>outputHandler_(GetNullHandler()),
                </highlight>
            </codeline>
            <codeline lineno="1796">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stateAllocator_(allocator),
                </highlight>
            </codeline>
            <codeline lineno="1797">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownStateAllocator_(0),
                </highlight>
            </codeline>
            <codeline lineno="1798">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaStack_(allocator,<sp/>schemaStackCapacity),
                </highlight>
            </codeline>
            <codeline lineno="1799">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>documentStack_(allocator,<sp/>documentStackCapacity),
                </highlight>
            </codeline>
            <codeline lineno="1800">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>valid_(
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="1801">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1802">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>,<sp/>depth_(depth)
                </highlight>
            </codeline>
            <codeline lineno="1803">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1804">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1805">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1806">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1807">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StateAllocator&amp;<sp/>GetStateAllocator()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1808">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!stateAllocator_)
                </highlight>
            </codeline>
            <codeline lineno="1809">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stateAllocator_<sp/>=<sp/>ownStateAllocator_<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1ab9e102fa2f1a0ae4914d4dac21f690a2" kindref="member">RAPIDJSON_NEW</ref>
                    (StateAllocator());
                </highlight>
            </codeline>
            <codeline lineno="1810">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*stateAllocator_;
                </highlight>
            </codeline>
            <codeline lineno="1811">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1812">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1813">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>BeginValue()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1814">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(schemaStack_.Empty())
                </highlight>
            </codeline>
            <codeline lineno="1815">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PushSchema(root_);
                </highlight>
            </codeline>
            <codeline lineno="1816">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1817">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(CurrentContext().inArray)
                </highlight>
            </codeline>
            <codeline lineno="1818">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="structinternal_1_1_token_helper" kindref="compound">internal::TokenHelper</ref>&lt;<ref
                        refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;StateAllocator&gt;</ref>,
                    <sp/>Ch&gt;::AppendIndexToken(documentStack_,<sp/>CurrentContext().arrayElementIndex);
                </highlight>
            </codeline>
            <codeline lineno="1819">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1820">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CurrentSchema().BeginValue(CurrentContext()))
                </highlight>
            </codeline>
            <codeline lineno="1821">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1822">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1823">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>count<sp/>=<sp/>CurrentContext().patternPropertiesSchemaCount;
                </highlight>
            </codeline>
            <codeline lineno="1824">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType**<sp/>sa<sp/>=<sp/>CurrentContext().patternPropertiesSchemas;
                </highlight>
            </codeline>
            <codeline lineno="1825">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Context::PatternValidatorType<sp/>patternValidatorType<sp/>=<sp/>
                    CurrentContext().valuePatternValidatorType;
                </highlight>
            </codeline>
            <codeline lineno="1826">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>valueUniqueness<sp/>=<sp/>CurrentContext().valueUniqueness;
                </highlight>
            </codeline>
            <codeline lineno="1827">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(CurrentContext().valueSchema)
                </highlight>
            </codeline>
            <codeline lineno="1828">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PushSchema(*CurrentContext().valueSchema);
                </highlight>
            </codeline>
            <codeline lineno="1829">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1830">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(count<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1831">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CurrentContext().objectPatternValidatorType<sp/>=<sp/>patternValidatorType;
                </highlight>
            </codeline>
            <codeline lineno="1832">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ISchemaValidator**&amp;<sp/>va<sp/>=<sp/>CurrentContext().patternPropertiesValidators;
                </highlight>
            </codeline>
            <codeline lineno="1833">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>&amp;
                    <sp/>validatorCount<sp/>=<sp/>CurrentContext().patternPropertiesValidatorCount;
                </highlight>
            </codeline>
            <codeline lineno="1834">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>va<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">ISchemaValidator**</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(MallocState(</highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(ISchemaValidator*)<sp/>*<sp/>count));
                </highlight>
            </codeline>
            <codeline lineno="1835">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="1836">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>va[validatorCount++]<sp/>=<sp/>CreateSchemaValidator(*sa[i]);
                </highlight>
            </codeline>
            <codeline lineno="1837">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1838">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1839">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CurrentContext().arrayUniqueness<sp/>=<sp/>valueUniqueness;
                </highlight>
            </codeline>
            <codeline lineno="1840">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1841">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1842">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1843">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1844">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndValue()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1845">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!CurrentSchema().EndValue(CurrentContext()))
                </highlight>
            </codeline>
            <codeline lineno="1846">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1847">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1848">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1849">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_string_buffer" kindref="compound">
                        GenericStringBuffer&lt;EncodingType&gt;</ref>
                    <sp/>sb;
                </highlight>
            </codeline>
            <codeline lineno="1850">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>schemaDocument_-&gt;GetPointer(&amp;CurrentSchema()).Stringify(sb);
                </highlight>
            </codeline>
            <codeline lineno="1851">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1852">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack_.template<sp/>Push&lt;Ch&gt;()<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1853">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>documentStack_.template<sp/>Pop&lt;Ch&gt;(1);
                </highlight>
            </codeline>
            <codeline lineno="1854">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>internal::PrintValidatorPointers(depth_,<sp/>sb.GetString(),<sp/>documentStack_.template<sp/>
                    Bottom&lt;Ch&gt;());
                </highlight>
            </codeline>
            <codeline lineno="1855">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1856">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1857">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>h<sp/>=<sp/>CurrentContext().arrayUniqueness<sp/>?
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">HasherType*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(CurrentContext().hasher)-&gt;GetHashCode()<sp/>:<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1858">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1859">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PopSchema();
                </highlight>
            </codeline>
            <codeline lineno="1860">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1861">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!schemaStack_.Empty())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1862">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Context&amp;<sp/>context<sp/>=<sp/>CurrentContext();
                </highlight>
            </codeline>
            <codeline lineno="1863">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(context.valueUniqueness)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1864">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>HashCodeArray*<sp/>a<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">HashCodeArray*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(context.arrayElementHashCodes);</highlight>
            </codeline>
            <codeline lineno="1865">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!a)
                </highlight>
            </codeline>
            <codeline lineno="1866">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>CurrentContext().arrayElementHashCodes<sp/>=<sp/>a<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(GetStateAllocator().Malloc(
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(HashCodeArray)))<sp/>HashCodeArray(<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                        kindref="member">kArrayType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="1867">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">HashCodeArray::ConstValueIterator</ref>
                    <sp/>itr<sp/>=<sp/>a-&gt;Begin();<sp/>itr<sp/>!=<sp/>a-&gt;End();<sp/>++itr)
                </highlight>
            </codeline>
            <codeline lineno="1868">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(itr-&gt;GetUint64()<sp/>==<sp/>h)
                </highlight>
            </codeline>
            <codeline lineno="1869">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_INVALID_KEYWORD_RETURN(SchemaType::GetUniqueItemsString());
                </highlight>
            </codeline>
            <codeline lineno="1870">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>a-&gt;PushBack(h,<sp/>GetStateAllocator());
                </highlight>
            </codeline>
            <codeline lineno="1871">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1872">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1873">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1874">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Remove<sp/>the<sp/>last<sp/>token<sp/>of<sp/>document<sp/>pointer
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1875">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(!documentStack_.Empty()<sp/>&amp;&amp;<sp/>*documentStack_.template<sp/>
                    Pop&lt;Ch&gt;(1)<sp/>!=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;/&apos;</highlight>
                <highlight class="normal">)</highlight>
            </codeline>
            <codeline lineno="1876">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>;
                </highlight>
            </codeline>
            <codeline lineno="1877">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1878">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1879">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1880">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1881">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>AppendToken(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1882">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>documentStack_.template<sp/>Reserve&lt;Ch&gt;(1<sp/>+<sp/>len<sp/>*<sp/>2);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>worst<sp/>case<sp/>all<sp/>characters<sp/>are<sp/>escaped<sp/>as<sp/>
                    two<sp/>characters
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1883">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;/&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1884">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1885">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(str[i]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;~&apos;</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1886">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;~&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1887">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1888">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1889">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(str[i]<sp/>==
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;/&apos;</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1890">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;~&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1891">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;1&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1892">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1893">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1894">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*documentStack_.template<sp/>PushUnsafe&lt;Ch&gt;()<sp/>=<sp/>str[i];
                </highlight>
            </codeline>
            <codeline lineno="1895">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1896">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1897">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1898">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>PushSchema(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType&amp;<sp/>schema)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(schemaStack_.template<sp/>Push&lt;Context&gt;())<sp/>Context(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">,<sp/>&amp;schema);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1899">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1900">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>PopSchema()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1901">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Context*<sp/>c<sp/>=<sp/>schemaStack_.template<sp/>Pop&lt;Context&gt;(1);
                </highlight>
            </codeline>
            <codeline lineno="1902">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(HashCodeArray*<sp/>a<sp/>=<sp/>static_cast&lt;HashCodeArray*&gt;(c-&gt;arrayElementHashCodes))
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1903">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>a-&gt;~HashCodeArray();
                </highlight>
            </codeline>
            <codeline lineno="1904">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StateAllocator::Free(a);
                </highlight>
            </codeline>
            <codeline lineno="1905">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1906">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>c-&gt;~Context();
                </highlight>
            </codeline>
            <codeline lineno="1907">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1908">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1909">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType&amp;<sp/>CurrentSchema()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*schemaStack_.template<sp/>Top&lt;Context&gt;()-&gt;schema;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1910">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Context&amp;<sp/>CurrentContext()<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*schemaStack_.template<sp/>Top&lt;Context&gt;();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1911">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Context&amp;<sp/>CurrentContext()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*schemaStack_.template<sp/>Top&lt;Context&gt;();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1912">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1913">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>OutputHandler&amp;<sp/>GetNullHandler()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1914">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>OutputHandler<sp/>nullHandler;
                </highlight>
            </codeline>
            <codeline lineno="1915">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>nullHandler;
                </highlight>
            </codeline>
            <codeline lineno="1916">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1917">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1918">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>kDefaultSchemaStackCapacity<sp/>=<sp/>1024;
                </highlight>
            </codeline>
            <codeline lineno="1919">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>kDefaultDocumentStackCapacity<sp/>=<sp/>256;
                </highlight>
            </codeline>
            <codeline lineno="1920">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType*<sp/>schemaDocument_;
                </highlight>
            </codeline>
            <codeline lineno="1921">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaType&amp;<sp/>root_;
                </highlight>
            </codeline>
            <codeline lineno="1922">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>OutputHandler&amp;<sp/>outputHandler_;
                </highlight>
            </codeline>
            <codeline lineno="1923">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StateAllocator*<sp/>stateAllocator_;
                </highlight>
            </codeline>
            <codeline lineno="1924">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>StateAllocator*<sp/>ownStateAllocator_;
                </highlight>
            </codeline>
            <codeline lineno="1925">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;StateAllocator&gt;</ref>
                    <sp/>schemaStack_;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1926">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;StateAllocator&gt;</ref>
                    <sp/>documentStack_;
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1927">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>valid_;
                </highlight>
            </codeline>
            <codeline lineno="1928">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_SCHEMA_VERBOSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1929">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>depth_;
                </highlight>
            </codeline>
            <codeline lineno="1930">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1931">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="1932">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1933">
                <highlight class="normal"></highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator&lt;SchemaDocument&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_schema_validator" kindref="compound">SchemaValidator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1934">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1936">
                <highlight class="comment">//<sp/>SchemaValidatingReader
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1937">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1939"></codeline>
            <codeline lineno="1948">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
            </codeline>
            <codeline lineno="1949">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags,
                </highlight>
            </codeline>
            <codeline lineno="1950">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>InputStream,
                </highlight>
            </codeline>
            <codeline lineno="1951">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding,
                </highlight>
            </codeline>
            <codeline lineno="1952">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType<sp/>=<sp/>SchemaDocument,
                </highlight>
            </codeline>
            <codeline lineno="1953">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator<sp/>=
                    <sp/>
                    <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>&gt;
                </highlight>
            </codeline>
            <codeline lineno="1954" refid="class_schema_validating_reader" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_schema_validating_reader" kindref="compound">SchemaValidatingReader</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1955">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="1956">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType::PointerType<sp/>PointerType;
                </highlight>
            </codeline>
            <codeline lineno="1957">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>InputStream::Ch<sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="1958">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1960"></codeline>
            <codeline lineno="1964" refid="class_schema_validating_reader_1ae7945b71687ad3dd13b9c3d096892eac"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_schema_validating_reader_1ae7945b71687ad3dd13b9c3d096892eac" kindref="member">
                        SchemaValidatingReader</ref>(InputStream&amp;<sp/>is,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>sd)<sp/>:<sp/>is_(is),<sp/>sd_(sd),<sp/>
                    invalidSchemaKeyword_(),<sp/>isValid_(true)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="1965">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1966">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Handler&gt;
                </highlight>
            </codeline>
            <codeline lineno="1967">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator()(Handler&amp;<sp/>handler)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1968">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_reader" kindref="compound">GenericReader&lt;SourceEncoding, typename
                        SchemaDocumentType::EncodingType, StackAllocator&gt;</ref>
                    <sp/>reader;
                </highlight>
            </codeline>
            <codeline lineno="1969">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_schema_validator" kindref="compound">GenericSchemaValidator&lt;SchemaDocumentType,
                        Handler&gt;</ref>
                    <sp/>validator(sd_,<sp/>handler);
                </highlight>
            </codeline>
            <codeline lineno="1970">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>parseResult_<sp/>=<sp/>reader.template<sp/>Parse&lt;parseFlags&gt;(is_,<sp/>validator);
                </highlight>
            </codeline>
            <codeline lineno="1971">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1972">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>isValid_<sp/>=<sp/>validator.<ref
                        refid="class_generic_schema_validator_1a8ebda4da3d8b1fc41e57f15dd62e8f19" kindref="member">
                    IsValid</ref>();
                </highlight>
            </codeline>
            <codeline lineno="1973">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(isValid_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1974">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>invalidSchemaPointer_<sp/>=<sp/>PointerType();
                </highlight>
            </codeline>
            <codeline lineno="1975">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>invalidSchemaKeyword_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1976">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>invalidDocumentPointer_<sp/>=<sp/>PointerType();
                </highlight>
            </codeline>
            <codeline lineno="1977">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1978">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1979">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>invalidSchemaPointer_<sp/>=<sp/>validator.<ref
                        refid="class_generic_schema_validator_1a5b8f2d5c466b2a362e2e4c3bcfbfc5a8" kindref="member">
                    GetInvalidSchemaPointer</ref>();
                </highlight>
            </codeline>
            <codeline lineno="1980">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>invalidSchemaKeyword_<sp/>=<sp/>validator.<ref
                        refid="class_generic_schema_validator_1ab71ec18e5a013e5153a10b312a4f03bc" kindref="member">
                    GetInvalidSchemaKeyword</ref>();
                </highlight>
            </codeline>
            <codeline lineno="1981">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>invalidDocumentPointer_<sp/>=<sp/>validator.<ref
                        refid="class_generic_schema_validator_1ac10a88c4dc138bbdbe2afd041658a3b0" kindref="member">
                    GetInvalidDocumentPointer</ref>();
                </highlight>
            </codeline>
            <codeline lineno="1982">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1983">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1984">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>parseResult_;
                </highlight>
            </codeline>
            <codeline lineno="1985">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1986">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1987">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_parse_result" kindref="compound">ParseResult</ref>&amp;<sp/>GetParseResult()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>parseResult_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1988">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsValid()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>isValid_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1989">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>GetInvalidSchemaPointer()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>invalidSchemaPointer_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1990">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>GetInvalidSchemaKeyword()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>invalidSchemaKeyword_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1991">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>PointerType&amp;<sp/>GetInvalidDocumentPointer()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>invalidDocumentPointer_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1992">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1993">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="1994">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>InputStream&amp;<sp/>is_;
                </highlight>
            </codeline>
            <codeline lineno="1995">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>SchemaDocumentType&amp;<sp/>sd_;
                </highlight>
            </codeline>
            <codeline lineno="1996">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1997">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_parse_result" kindref="compound">ParseResult</ref>
                    <sp/>parseResult_;
                </highlight>
            </codeline>
            <codeline lineno="1998">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>invalidSchemaPointer_;
                </highlight>
            </codeline>
            <codeline lineno="1999">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>invalidSchemaKeyword_;
                </highlight>
            </codeline>
            <codeline lineno="2000">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PointerType<sp/>invalidDocumentPointer_;
                </highlight>
            </codeline>
            <codeline lineno="2001">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>isValid_;
                </highlight>
            </codeline>
            <codeline lineno="2002">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="2003">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2004">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1"
                         kindref="member">RAPIDJSON_NAMESPACE_END
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="2005">
                <highlight class="normal">RAPIDJSON_DIAG_POP</highlight>
            </codeline>
            <codeline lineno="2006">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2007">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_SCHEMA_H_
                </highlight>
            </codeline>
        </programlisting>
        <location file="rapidjson/schema.h"/>
    </compounddef>
</doxygen>
