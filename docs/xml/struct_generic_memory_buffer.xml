<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="struct_generic_memory_buffer" kind="struct" language="C++" prot="public">
        <compoundname>GenericMemoryBuffer</compoundname>
        <includes refid="memorybuffer_8h" local="no">memorybuffer.h</includes>
        <templateparamlist>
            <param>
                <type>typename Allocator</type>
                <defval>
                    <ref refid="class_crt_allocator" kindref="compound">CrtAllocator</ref>
                </defval>
            </param>
        </templateparamlist>
        <sectiondef kind="public-type">
            <memberdef kind="typedef" id="struct_generic_memory_buffer_1a212f137abfd8bce2ad216b2d960c027f" prot="public"
                       static="no">
                <type>char</type>
                <definition>typedef char GenericMemoryBuffer&lt; Allocator &gt;::Ch</definition>
                <argsstring></argsstring>
                <name>Ch</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="38" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="38" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="public-static-attrib">
            <memberdef kind="variable" id="struct_generic_memory_buffer_1af6ecdbdbb8d3aa53cdef6e788e4980be"
                       prot="public" static="yes" mutable="no">
                <type>const size_t</type>
                <definition>const size_t GenericMemoryBuffer&lt; Allocator &gt;::kDefaultCapacity</definition>
                <argsstring></argsstring>
                <name>kDefaultCapacity</name>
                <initializer>= 256</initializer>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="56" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="56" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="public-attrib">
            <memberdef kind="variable" id="struct_generic_memory_buffer_1a977b479180bebe8ae14ca1c11d52a486"
                       prot="public" static="no" mutable="yes">
                <type><ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack</ref>&lt; Allocator &gt;
                </type>
                <definition>internal::Stack&lt;Allocator&gt; GenericMemoryBuffer&lt; Allocator &gt;::stack_</definition>
                <argsstring></argsstring>
                <name>stack_</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="57" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="57" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="public-func">
            <memberdef kind="function" id="struct_generic_memory_buffer_1ad08f7da47bca43fcdb0c3b10e22dfa1d"
                       prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type></type>
                <definition>GenericMemoryBuffer&lt; Allocator &gt;::GenericMemoryBuffer</definition>
                <argsstring>(Allocator *allocator=0, size_t capacity=kDefaultCapacity)</argsstring>
                <name>GenericMemoryBuffer</name>
                <param>
                    <type>Allocator *</type>
                    <declname>allocator</declname>
                    <defval>0</defval>
                </param>
                <param>
                    <type>size_t</type>
                    <declname>capacity</declname>
                    <defval>kDefaultCapacity</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="40" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="40" bodyend="40"/>
            </memberdef>
            <memberdef kind="function" id="struct_generic_memory_buffer_1a9dfb477983e211893601f8ab637b42d8"
                       prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void GenericMemoryBuffer&lt; Allocator &gt;::Put</definition>
                <argsstring>(Ch c)</argsstring>
                <name>Put</name>
                <param>
                    <type>Ch</type>
                    <declname>c</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="42" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="42" bodyend="42"/>
            </memberdef>
            <memberdef kind="function" id="struct_generic_memory_buffer_1a9861181cab6f5bec2ec08b601aa53575"
                       prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void GenericMemoryBuffer&lt; Allocator &gt;::Flush</definition>
                <argsstring>()</argsstring>
                <name>Flush</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="43" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="43" bodyend="43"/>
            </memberdef>
            <memberdef kind="function" id="struct_generic_memory_buffer_1a036cbe2556778e1edc525602a9821df2"
                       prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void GenericMemoryBuffer&lt; Allocator &gt;::Clear</definition>
                <argsstring>()</argsstring>
                <name>Clear</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="45" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="45" bodyend="45"/>
            </memberdef>
            <memberdef kind="function" id="struct_generic_memory_buffer_1a3b87deb9bf34c394c8fb262ab53c0c4b"
                       prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void GenericMemoryBuffer&lt; Allocator &gt;::ShrinkToFit</definition>
                <argsstring>()</argsstring>
                <name>ShrinkToFit</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="46" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="46" bodyend="46"/>
            </memberdef>
            <memberdef kind="function" id="struct_generic_memory_buffer_1a56f7b14d2940b682fe592f598d6792ec"
                       prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>Ch *</type>
                <definition>Ch* GenericMemoryBuffer&lt; Allocator &gt;::Push</definition>
                <argsstring>(size_t count)</argsstring>
                <name>Push</name>
                <param>
                    <type>size_t</type>
                    <declname>count</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="47" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="47" bodyend="47"/>
            </memberdef>
            <memberdef kind="function" id="struct_generic_memory_buffer_1a82a6706286f1356e1769282f5d496005"
                       prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void GenericMemoryBuffer&lt; Allocator &gt;::Pop</definition>
                <argsstring>(size_t count)</argsstring>
                <name>Pop</name>
                <param>
                    <type>size_t</type>
                    <declname>count</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="48" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="48" bodyend="48"/>
            </memberdef>
            <memberdef kind="function" id="struct_generic_memory_buffer_1a8d7be8b1d64285b787571541a7c4bb37"
                       prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type>const Ch *</type>
                <definition>const Ch* GenericMemoryBuffer&lt; Allocator &gt;::GetBuffer</definition>
                <argsstring>() const</argsstring>
                <name>GetBuffer</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="50" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="50" bodyend="52"/>
            </memberdef>
            <memberdef kind="function" id="struct_generic_memory_buffer_1aaab1f18d03109ab01213d3e3d8368ff9"
                       prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type>size_t</type>
                <definition>size_t GenericMemoryBuffer&lt; Allocator &gt;::GetSize</definition>
                <argsstring>() const</argsstring>
                <name>GetSize</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/memorybuffer.h" line="54" column="1" bodyfile="rapidjson/memorybuffer.h"
                          bodystart="54" bodyend="54"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
            <para>Represents an in-memory output byte stream.</para>
        </briefdescription>
        <detaileddescription>
            <para>This class is mainly for being wrapped by <ref refid="class_encoded_output_stream" kindref="compound">
                EncodedOutputStream
            </ref> or <ref refid="class_auto_u_t_f_output_stream" kindref="compound">AutoUTFOutputStream</ref>.
            </para>
            <para>It is similar to FileWriteBuffer but the destination is an in-memory buffer instead of a file.</para>
            <para>Differences between MemoryBuffer and StringBuffer:
                <orderedlist>
                    <listitem>
                        <para>StringBuffer has Encoding but MemoryBuffer is only a byte buffer.</para>
                    </listitem>
                    <listitem>
                        <para>StringBuffer::GetString() returns a null-terminated string. MemoryBuffer::GetBuffer()
                            returns a buffer without terminator.
                        </para>
                    </listitem>
                </orderedlist>
            </para>
            <para>
                <parameterlist kind="templateparam">
                    <parameteritem>
                        <parameternamelist>
                            <parametername>Allocator</parametername>
                        </parameternamelist>
                        <parameterdescription>
                            <para>type for allocating memory buffer.</para>
                        </parameterdescription>
                    </parameteritem>
                </parameterlist>
                <simplesect kind="note">
                    <para>implements Stream concept</para>
                </simplesect>
            </para>
        </detaileddescription>
        <collaborationgraph>
            <node id="125">
                <label>size_t</label>
            </node>
            <node id="124">
                <label>GenericMemoryBuffer&lt; Allocator &gt;</label>
                <link refid="struct_generic_memory_buffer"/>
                <childnode refid="125" relation="usage">
                    <edgelabel>kDefaultCapacity</edgelabel>
                </childnode>
            </node>
        </collaborationgraph>
        <location file="rapidjson/fwd.h" line="74" column="1" bodyfile="rapidjson/fwd.h" bodystart="74" bodyend="-1"/>
        <listofallmembers>
            <member refid="struct_generic_memory_buffer_1a212f137abfd8bce2ad216b2d960c027f" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>Ch</name>
            </member>
            <member refid="struct_generic_memory_buffer_1a036cbe2556778e1edc525602a9821df2" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>Clear</name>
            </member>
            <member refid="struct_generic_memory_buffer_1a9861181cab6f5bec2ec08b601aa53575" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>Flush</name>
            </member>
            <member refid="struct_generic_memory_buffer_1ad08f7da47bca43fcdb0c3b10e22dfa1d" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>GenericMemoryBuffer</name>
            </member>
            <member refid="struct_generic_memory_buffer_1a8d7be8b1d64285b787571541a7c4bb37" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>GetBuffer</name>
            </member>
            <member refid="struct_generic_memory_buffer_1aaab1f18d03109ab01213d3e3d8368ff9" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>GetSize</name>
            </member>
            <member refid="struct_generic_memory_buffer_1af6ecdbdbb8d3aa53cdef6e788e4980be" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>kDefaultCapacity</name>
            </member>
            <member refid="struct_generic_memory_buffer_1a82a6706286f1356e1769282f5d496005" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>Pop</name>
            </member>
            <member refid="struct_generic_memory_buffer_1a56f7b14d2940b682fe592f598d6792ec" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>Push</name>
            </member>
            <member refid="struct_generic_memory_buffer_1a9dfb477983e211893601f8ab637b42d8" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>Put</name>
            </member>
            <member refid="struct_generic_memory_buffer_1a3b87deb9bf34c394c8fb262ab53c0c4b" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>ShrinkToFit</name>
            </member>
            <member refid="struct_generic_memory_buffer_1a977b479180bebe8ae14ca1c11d52a486" prot="public"
                    virt="non-virtual">
                <scope>GenericMemoryBuffer</scope>
                <name>stack_</name>
            </member>
        </listofallmembers>
    </compounddef>
</doxygen>
