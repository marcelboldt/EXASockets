<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="document_8h" kind="file" language="C++">
        <compoundname>document.h</compoundname>
        <includes refid="reader_8h" local="yes">reader.h</includes>
        <includes refid="meta_8h" local="yes">internal/meta.h</includes>
        <includes refid="strfunc_8h" local="yes">internal/strfunc.h</includes>
        <includes refid="memorystream_8h" local="yes">memorystream.h</includes>
        <includes refid="encodedstream_8h" local="yes">encodedstream.h</includes>
        <includes local="no">new</includes>
        <includes local="no">limits</includes>
        <includes local="no">iterator</includes>
        <includedby refid="exasockets_8h" local="yes">exasockets/exasockets.h</includedby>
        <includedby refid="pointer_8h" local="yes">rapidjson/pointer.h</includedby>
        <includedby refid="schema_8h" local="yes">rapidjson/schema.h</includedby>
        <incdepgraph>
            <node id="187">
                <label>internal/strfunc.h</label>
                <link refid="strfunc_8h_source"/>
                <childnode refid="173" relation="include">
                </childnode>
            </node>
            <node id="185">
                <label>limits</label>
            </node>
            <node id="189">
                <label>iterator</label>
            </node>
            <node id="186">
                <label>error/error.h</label>
                <link refid="error_8h"/>
                <childnode refid="169" relation="include">
                </childnode>
            </node>
            <node id="172">
                <label>cassert</label>
            </node>
            <node id="179">
                <label>swap.h</label>
                <link refid="swap_8h_source"/>
                <childnode refid="169" relation="include">
                </childnode>
            </node>
            <node id="174">
                <label>encodings.h</label>
                <link refid="encodings_8h_source"/>
                <childnode refid="169" relation="include">
                </childnode>
            </node>
            <node id="184">
                <label>pow10.h</label>
                <link refid="pow10_8h_source"/>
                <childnode refid="169" relation="include">
                </childnode>
            </node>
            <node id="183">
                <label>diyfp.h</label>
                <link refid="diyfp_8h_source"/>
                <childnode refid="169" relation="include">
                </childnode>
            </node>
            <node id="182">
                <label>biginteger.h</label>
                <link refid="biginteger_8h_source"/>
                <childnode refid="169" relation="include">
                </childnode>
            </node>
            <node id="167">
                <label>reader.h</label>
                <link refid="reader_8h"/>
                <childnode refid="168" relation="include">
                </childnode>
                <childnode refid="173" relation="include">
                </childnode>
                <childnode refid="175" relation="include">
                </childnode>
                <childnode refid="177" relation="include">
                </childnode>
                <childnode refid="178" relation="include">
                </childnode>
                <childnode refid="180" relation="include">
                </childnode>
                <childnode refid="185" relation="include">
                </childnode>
                <childnode refid="186" relation="include">
                </childnode>
            </node>
            <node id="173">
                <label>stream.h</label>
                <link refid="stream_8h_source"/>
                <childnode refid="169" relation="include">
                </childnode>
                <childnode refid="174" relation="include">
                </childnode>
            </node>
            <node id="169">
                <label>rapidjson.h</label>
                <link refid="rapidjson_8h"/>
                <childnode refid="170" relation="include">
                </childnode>
                <childnode refid="171" relation="include">
                </childnode>
                <childnode refid="172" relation="include">
                </childnode>
            </node>
            <node id="175">
                <label>encodedstream.h</label>
                <link refid="encodedstream_8h_source"/>
                <childnode refid="173" relation="include">
                </childnode>
                <childnode refid="176" relation="include">
                </childnode>
            </node>
            <node id="181">
                <label>ieee754.h</label>
                <link refid="ieee754_8h_source"/>
                <childnode refid="169" relation="include">
                </childnode>
            </node>
            <node id="178">
                <label>internal/stack.h</label>
                <link refid="stack_8h_source"/>
                <childnode refid="168" relation="include">
                </childnode>
                <childnode refid="179" relation="include">
                </childnode>
            </node>
            <node id="188">
                <label>new</label>
            </node>
            <node id="170">
                <label>cstdlib</label>
            </node>
            <node id="177">
                <label>internal/meta.h</label>
                <link refid="meta_8h_source"/>
                <childnode refid="169" relation="include">
                </childnode>
            </node>
            <node id="176">
                <label>memorystream.h</label>
                <link refid="memorystream_8h_source"/>
                <childnode refid="173" relation="include">
                </childnode>
            </node>
            <node id="168">
                <label>allocators.h</label>
                <link refid="allocators_8h_source"/>
                <childnode refid="169" relation="include">
                </childnode>
            </node>
            <node id="180">
                <label>internal/strtod.h</label>
                <link refid="strtod_8h_source"/>
                <childnode refid="181" relation="include">
                </childnode>
                <childnode refid="182" relation="include">
                </childnode>
                <childnode refid="183" relation="include">
                </childnode>
                <childnode refid="184" relation="include">
                </childnode>
            </node>
            <node id="171">
                <label>cstring</label>
            </node>
            <node id="166">
                <label>rapidjson/document.h</label>
                <link refid="document_8h"/>
                <childnode refid="167" relation="include">
                </childnode>
                <childnode refid="177" relation="include">
                </childnode>
                <childnode refid="187" relation="include">
                </childnode>
                <childnode refid="176" relation="include">
                </childnode>
                <childnode refid="175" relation="include">
                </childnode>
                <childnode refid="188" relation="include">
                </childnode>
                <childnode refid="185" relation="include">
                </childnode>
                <childnode refid="189" relation="include">
                </childnode>
            </node>
        </incdepgraph>
        <invincdepgraph>
            <node id="192">
                <label>rapidjson/pointer.h</label>
                <link refid="pointer_8h_source"/>
                <childnode refid="193" relation="include">
                </childnode>
            </node>
            <node id="191">
                <label>exasockets/exasockets.h</label>
                <link refid="exasockets_8h_source"/>
            </node>
            <node id="193">
                <label>rapidjson/schema.h</label>
                <link refid="schema_8h_source"/>
            </node>
            <node id="190">
                <label>rapidjson/document.h</label>
                <link refid="document_8h"/>
                <childnode refid="191" relation="include">
                </childnode>
                <childnode refid="192" relation="include">
                </childnode>
                <childnode refid="193" relation="include">
                </childnode>
            </node>
        </invincdepgraph>
        <innerclass refid="class_generic_value" prot="public">GenericValue</innerclass>
        <innerclass refid="class_generic_document" prot="public">GenericDocument</innerclass>
        <innerclass refid="struct_generic_member" prot="public">GenericMember</innerclass>
        <innerclass refid="class_generic_member_iterator" prot="public">GenericMemberIterator</innerclass>
        <innerclass refid="struct_generic_string_ref" prot="public">GenericStringRef</innerclass>
        <innerclass refid="structinternal_1_1_is_generic_value_impl" prot="public">internal::IsGenericValueImpl
        </innerclass>
        <innerclass
                refid="structinternal_1_1_is_generic_value_impl_3_01_t_00_01typename_01_void_3_01typename_01_t_1_1_enco3a51e9d8b4986f001b39e1e8edecb66a"
                prot="public">internal::IsGenericValueImpl&lt; T, typename Void&lt; typename T::EncodingType &gt;::Type,
            typename Void&lt; typename T::AllocatorType &gt;::Type &gt;</innerclass>
        <innerclass refid="structinternal_1_1_is_generic_value" prot="public">internal::IsGenericValue</innerclass>
        <innerclass refid="structinternal_1_1_type_helper" prot="public">internal::TypeHelper</innerclass>
        <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4" prot="public">
            internal::TypeHelper&lt; ValueType, bool &gt;</innerclass>
        <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4" prot="public">
            internal::TypeHelper&lt; ValueType, int &gt;</innerclass>
        <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4" prot="public">
            internal::TypeHelper&lt; ValueType, unsigned &gt;</innerclass>
        <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4" prot="public">
            internal::TypeHelper&lt; ValueType, int64_t &gt;</innerclass>
        <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4" prot="public">
            internal::TypeHelper&lt; ValueType, uint64_t &gt;</innerclass>
        <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4" prot="public">
            internal::TypeHelper&lt; ValueType, double &gt;</innerclass>
        <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4" prot="public">
            internal::TypeHelper&lt; ValueType, float &gt;</innerclass>
        <innerclass
                refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4"
                prot="public">internal::TypeHelper&lt; ValueType, const typename ValueType::Ch * &gt;</innerclass>
        <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4"
                    prot="public">internal::TypeHelper&lt; ValueType, typename ValueType::Array &gt;</innerclass>
        <innerclass
                refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4"
                prot="public">internal::TypeHelper&lt; ValueType, typename ValueType::ConstArray &gt;</innerclass>
        <innerclass refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4"
                    prot="public">internal::TypeHelper&lt; ValueType, typename ValueType::Object &gt;</innerclass>
        <innerclass
                refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4"
                prot="public">internal::TypeHelper&lt; ValueType, typename ValueType::ConstObject &gt;</innerclass>
        <innerclass refid="class_generic_array" prot="public">GenericArray</innerclass>
        <innerclass refid="class_generic_object" prot="public">GenericObject</innerclass>
        <innerclass refid="class_generic_value" prot="public">GenericValue</innerclass>
        <innerclass refid="struct_generic_value_1_1_flag" prot="public">GenericValue::Flag</innerclass>
        <innerclass refid="struct_generic_value_1_1_string" prot="public">GenericValue::String</innerclass>
        <innerclass refid="struct_generic_value_1_1_short_string" prot="public">GenericValue::ShortString</innerclass>
        <innerclass refid="union_generic_value_1_1_number" prot="public">GenericValue::Number</innerclass>
        <innerclass refid="struct_generic_value_1_1_number_1_1_i" prot="public">GenericValue::Number::I</innerclass>
        <innerclass refid="struct_generic_value_1_1_number_1_1_u" prot="public">GenericValue::Number::U</innerclass>
        <innerclass refid="struct_generic_value_1_1_object_data" prot="public">GenericValue::ObjectData</innerclass>
        <innerclass refid="struct_generic_value_1_1_array_data" prot="public">GenericValue::ArrayData</innerclass>
        <innerclass refid="union_generic_value_1_1_data" prot="public">GenericValue::Data</innerclass>
        <innerclass refid="class_generic_document" prot="public">GenericDocument</innerclass>
        <innerclass refid="struct_generic_document_1_1_clear_stack_on_exit" prot="private">
            GenericDocument::ClearStackOnExit
        </innerclass>
        <innerclass refid="class_generic_array" prot="public">GenericArray</innerclass>
        <innerclass refid="class_generic_object" prot="public">GenericObject</innerclass>
        <innernamespace refid="namespaceinternal">internal</innernamespace>
        <sectiondef kind="typedef">
            <memberdef kind="typedef" id="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" prot="public" static="no">
                <type><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt; <ref
                        refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt;
                </type>
                <definition>typedef GenericValue&lt;UTF8&lt;&gt; &gt; Value</definition>
                <argsstring></argsstring>
                <name>Value</name>
                <briefdescription>
                    <para>
                        <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                        with <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref> encoding.
                    </para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/document.h" line="2010" column="1" bodyfile="rapidjson/document.h"
                          bodystart="2010" bodyend="-1"/>
            </memberdef>
            <memberdef kind="typedef" id="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" prot="public" static="no">
                <type><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&lt; <ref
                        refid="struct_u_t_f8" kindref="compound">UTF8</ref>&lt;&gt; &gt;
                </type>
                <definition>typedef GenericDocument&lt;UTF8&lt;&gt; &gt; Document</definition>
                <argsstring></argsstring>
                <name>Document</name>
                <briefdescription>
                    <para>
                        <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>
                        with <ref refid="struct_u_t_f8" kindref="compound">UTF8</ref> encoding.
                    </para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/document.h" line="2402" column="1" bodyfile="rapidjson/document.h"
                          bodystart="2402" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="func">
            <memberdef kind="function" id="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <templateparamlist>
                    <param>
                        <type>typename CharType</type>
                    </param>
                </templateparamlist>
                <type><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&lt; CharType &gt;
                </type>
                <definition>GenericStringRef&lt; CharType &gt; StringRef</definition>
                <argsstring>(const CharType *str)</argsstring>
                <name>StringRef</name>
                <param>
                    <type>const CharType *</type>
                    <declname>str</declname>
                </param>
                <briefdescription>
                    <para>Mark a character pointer as constant string.</para>
                </briefdescription>
                <detaileddescription>
                    <para>Mark a plain character pointer as a &quot;string literal&quot;. This function can be used to
                        avoid copying a character string to be referenced as a value in a JSON <ref
                                refid="class_generic_value" kindref="compound">GenericValue
                        </ref> object, if the string&apos;s lifetime is known to be valid long enough.
                        <parameterlist kind="templateparam">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>CharType</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Character type of the string</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>str</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Constant string, lifetime assumed to be longer than the use of the string in
                                        e.g. a <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                                    </para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>
                                <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>
                                string reference object
                            </para>
                        </simplesect>
                        <simplesect kind="see">
                            <para><ref refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" kindref="member">
                                GenericValue::GenericValue(StringRefType)</ref>, <ref
                                    refid="class_generic_value_1a386708557555e6389184de608af5e6a6" kindref="member">
                                GenericValue::operator=(StringRefType)</ref>, GenericValue::SetString(StringRefType),
                                GenericValue::PushBack(StringRefType, Allocator&amp;), GenericValue::AddMember
                            </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/document.h" line="346" column="1" bodyfile="rapidjson/document.h"
                          bodystart="346" bodyend="348"/>
            </memberdef>
            <memberdef kind="function" id="document_8h_1a578c51ab574a50a9c760b9da7c7562f2" prot="public" static="no"
                       const="no" explicit="no" inline="yes" virt="non-virtual">
                <templateparamlist>
                    <param>
                        <type>typename CharType</type>
                    </param>
                </templateparamlist>
                <type><ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&lt; CharType &gt;
                </type>
                <definition>GenericStringRef&lt; CharType &gt; StringRef</definition>
                <argsstring>(const CharType *str, size_t length)</argsstring>
                <name>StringRef</name>
                <param>
                    <type>const CharType *</type>
                    <declname>str</declname>
                </param>
                <param>
                    <type>size_t</type>
                    <declname>length</declname>
                </param>
                <briefdescription>
                    <para>Mark a character pointer as constant string.</para>
                </briefdescription>
                <detaileddescription>
                    <para>Mark a plain character pointer as a &quot;string literal&quot;. This function can be used to
                        avoid copying a character string to be referenced as a value in a JSON <ref
                                refid="class_generic_value" kindref="compound">GenericValue
                        </ref> object, if the string&apos;s lifetime is known to be valid long enough.
                    </para>
                    <para>This version has better performance with supplied length, and also supports string containing
                        null characters.
                    </para>
                    <para>
                        <parameterlist kind="templateparam">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>CharType</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>character type of the string</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>str</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Constant string, lifetime assumed to be longer than the use of the string in
                                        e.g. a <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                                    </para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>length</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>The length of source string.</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                        <simplesect kind="return">
                            <para>
                                <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>
                                string reference object
                            </para>
                        </simplesect>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/document.h" line="366" column="1" bodyfile="rapidjson/document.h"
                          bodystart="366" bodyend="368"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">//<sp/>Tencent<sp/>is<sp/>pleased<sp/>to<sp/>support<sp/>the<sp/>open<sp/>
                    source<sp/>community<sp/>by<sp/>making<sp/>RapidJSON<sp/>available.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2015<sp/>THL<sp/>A29<sp/>Limited,<sp/>a<sp/>
                    Tencent<sp/>company,<sp/>and<sp/>Milo<sp/>Yip.<sp/>All<sp/>rights<sp/>reserved.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>MIT<sp/>License<sp/>(the<sp/>&quot;License&quot;);
                    <sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.<sp/>You<sp/>may<sp/>
                    obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>http://opensource.org/licenses/MIT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
                <highlight class="comment">//</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed
                    <sp/>to<sp/>in<sp/>writing,<sp/>software<sp/>distributed
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>
                    &quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>
                    implied.<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>
                    limitations<sp/>under<sp/>the<sp/>License.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_DOCUMENT_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#define<sp/>RAPIDJSON_DOCUMENT_H_
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="preprocessor">#include<sp/>&quot;<ref refid="reader_8h" kindref="compound">
                    reader.h</ref>&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;internal/meta.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;internal/strfunc.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;memorystream.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;encodedstream.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;new&gt;
                </highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>placement<sp/>new
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;limits&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal">RAPIDJSON_DIAG_PUSH</highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>_MSC_VER
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(4127)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>conditional<sp/>expression<sp/>is<sp/>constant
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(4244)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>conversion<sp/>from<sp/>kXxxFlags<sp/>to<sp/>&apos;uint16_t&apos;,
                    <sp/>possible<sp/>loss<sp/>of<sp/>data
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__clang__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(padded)</highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(switch-enum)</highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(c++98-compat)</highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifdef<sp/>__GNUC__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(effc++)</highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>__GNUC__<sp/>&gt;=<sp/>6
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal">RAPIDJSON_DIAG_OFF(terminate)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>ignore<sp/>throwing<sp/>RAPIDJSON_ASSERT<sp/>in<sp/>RAPIDJSON_NOEXCEPT
                    <sp/>functions
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>__GNUC__
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_NOMEMBERITERATORCLASS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;iterator&gt;
                </highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>std::iterator,<sp/>std::random_access_iterator_tag
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;utility&gt;
                </highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>std::move
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gad3806c8251fdc7da9618b7e922674ffc"
                         kindref="member">RAPIDJSON_NAMESPACE_BEGIN
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Forward<sp/>declaration.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="59" refid="class_generic_value" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;
                </highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="62" refid="class_generic_document" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>;
                </highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="65"></codeline>
            <codeline lineno="70">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="71" refid="struct_generic_member" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_member" kindref="compound">GenericMember</ref>
                    <sp/>{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="72" refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref>
                    <sp/>
                    <ref refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="73" refid="struct_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref>
                    <sp/>
                    <ref refid="struct_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="comment">//<sp/>GenericMemberIterator
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_NOMEMBERITERATORCLASS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="82"></codeline>
            <codeline lineno="100">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Const,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="101" refid="class_generic_member_iterator" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>
                </highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:
                    <sp/>
                </highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal"><sp/>std::iterator&lt;std::random_access_iterator_tag
                </highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>,<sp/>typename<sp/>internal::MaybeAddConst&lt;Const,GenericMember&lt;Encoding,Allocator&gt;
                    <sp/>&gt;::Type&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt;Encoding,Allocator&gt;;
                </highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">
                    GenericMemberIterator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_member" kindref="compound">GenericMember&lt;Encoding,Allocator&gt;</ref>
                    <sp/>
                    <ref refid="struct_generic_member" kindref="compound">PlainType</ref>;
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">
                        internal::MaybeAddConst&lt;Const,PlainType&gt;::Type
                    </ref>
                    <sp/>ValueType;
                </highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>std::iterator&lt;std::random_access_iterator_tag,ValueType&gt;<sp/>
                    BaseType;
                </highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="114" refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator</ref>
                    <sp/>
                    <ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">
                        Iterator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="116" refid="class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;true,Encoding,Allocator&gt;</ref>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_member_iterator_1ae5be27a73dce0be58ee2776db896d591" kindref="member">
                        ConstIterator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="118" refid="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;false,Encoding,Allocator&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_member_iterator_1abc26eb06f2962765b11dcd06ce84ac02" kindref="member">
                        NonConstIterator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="121" refid="class_generic_member_iterator_1ac69f141f1fde31c1f550f524a69c5de9"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>BaseType::pointer
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_member_iterator_1ac69f141f1fde31c1f550f524a69c5de9" kindref="member">
                        Pointer</ref>;
                </highlight>
            </codeline>
            <codeline lineno="123" refid="class_generic_member_iterator_1ae80f6b601eb9e24f73aa75fb32b35c65"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>BaseType::reference
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_member_iterator_1ae80f6b601eb9e24f73aa75fb32b35c65" kindref="member">
                        Reference</ref>;
                </highlight>
            </codeline>
            <codeline lineno="125" refid="class_generic_member_iterator_1a902b99c8ae351cd7626514dc5f30740a"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>BaseType::difference_type
                    <sp/>
                    <ref refid="class_generic_member_iterator_1a902b99c8ae351cd7626514dc5f30740a" kindref="member">
                        DifferenceType</ref>;
                </highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="128"></codeline>
            <codeline lineno="131" refid="class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4" kindref="member">
                        GenericMemberIterator</ref>()<sp/>:<sp/>ptr_()<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="134"></codeline>
            <codeline lineno="149" refid="class_generic_member_iterator_1a2697fd327a90654b0bf91c988e43f95e"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_member_iterator_1a2697fd327a90654b0bf91c988e43f95e" kindref="member">
                        GenericMemberIterator</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>NonConstIterator<sp/>&amp;<sp/>it)<sp/>:<sp/>ptr_(it.ptr_)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Iterator&amp;<sp/>operator=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>NonConstIterator<sp/>&amp;<sp/>it)<sp/>{<sp/>ptr_<sp/>=<sp/>it.ptr_;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="153"></codeline>
            <codeline lineno="154">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Iterator&amp;<sp/>operator++(){<sp/>++ptr_;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Iterator&amp;<sp/>operator--(){<sp/>--ptr_;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Iterator
                    <sp/>
                    <sp/>operator++(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">){<sp/>Iterator<sp/>old(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);<sp/>++ptr_;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>old;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Iterator
                    <sp/>
                    <sp/>operator--(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">){<sp/>Iterator<sp/>old(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);<sp/>--ptr_;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>old;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="159"></codeline>
            <codeline lineno="161"></codeline>
            <codeline lineno="162">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Iterator<sp/>operator+(DifferenceType<sp/>n)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">
                        Iterator</ref>(ptr_+n);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Iterator<sp/>operator-(DifferenceType<sp/>n)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator_1ad1cf1ecf6210b47906c9f179c893a8b8" kindref="member">
                        Iterator</ref>(ptr_-n);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Iterator&amp;<sp/>operator+=(DifferenceType<sp/>n)<sp/>{<sp/>ptr_+=n;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Iterator&amp;<sp/>operator-=(DifferenceType<sp/>n)<sp/>{<sp/>ptr_-=n;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="168"></codeline>
            <codeline lineno="170"></codeline>
            <codeline lineno="171">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator==(ConstIterator<sp/>that)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ptr_<sp/>==<sp/>that.ptr_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator!=(ConstIterator<sp/>that)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ptr_<sp/>!=<sp/>that.ptr_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator&lt;=(ConstIterator<sp/>that)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ptr_<sp/>&lt;=<sp/>that.ptr_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator&gt;=(ConstIterator<sp/>that)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ptr_<sp/>&gt;=<sp/>that.ptr_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator&lt;<sp/>(ConstIterator<sp/>that)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ptr_<sp/>&lt;<sp/>that.ptr_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator&gt;<sp/>(ConstIterator<sp/>that)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ptr_<sp/>&gt;<sp/>that.ptr_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="178"></codeline>
            <codeline lineno="180"></codeline>
            <codeline lineno="181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Reference<sp/>operator*()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*ptr_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Pointer
                    <sp/>
                    <sp/>
                    <sp/>operator-&gt;()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ptr_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Reference<sp/>operator[](DifferenceType<sp/>n)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ptr_[n];<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="185"></codeline>
            <codeline lineno="187" refid="class_generic_member_iterator_1ae119ae8ed78dbd980f83d367f59a3c94"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>DifferenceType
                    <sp/>
                    <ref refid="class_generic_member_iterator_1ae119ae8ed78dbd980f83d367f59a3c94" kindref="member">
                        operator-</ref>(ConstIterator<sp/>that)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ptr_-that.ptr_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator_1a2708717d497a0aadacdf75900de4c5b4" kindref="member">
                        GenericMemberIterator</ref>(Pointer<sp/>p)<sp/>:<sp/>ptr_(p)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Pointer<sp/>ptr_;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else<sp/>//<sp/>RAPIDJSON_NOMEMBERITERATORCLASS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>class-based<sp/>member<sp/>iterator<sp/>implementation<sp/>disabled,
                    <sp/>use<sp/>plain<sp/>pointers
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Const,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">
                    GenericMemberIterator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">
                    GenericMemberIterator</ref>&lt;false,Encoding,Allocator&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_member" kindref="compound">GenericMember&lt;Encoding,Allocator&gt;</ref>*
                    <sp/>
                    <ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_member_iterator" kindref="compound">
                    GenericMemberIterator</ref>&lt;true,Encoding,Allocator&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_member" kindref="compound">GenericMember&lt;Encoding,Allocator&gt;</ref>*
                    <sp/>
                    <ref refid="class_generic_member_iterator" kindref="compound">Iterator</ref>;
                </highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_NOMEMBERITERATORCLASS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="comment">//<sp/>GenericStringRef
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="222"></codeline>
            <codeline lineno="248">
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                </highlight>
            </codeline>
            <codeline lineno="249" refid="struct_generic_string_ref" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="250" refid="struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>CharType
                    <sp/>
                    <ref refid="struct_generic_string_ref_1a16908c3fce41be380061330c14ba2140" kindref="member">Ch</ref>;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="251">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="253">
                <highlight class="preprocessor">#ifndef<sp/>__clang__<sp/>//<sp/>-Wdocumentation
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="254">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="276">
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="277">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;SizeType<sp/>N&gt;
                </highlight>
            </codeline>
            <codeline lineno="278" refid="struct_generic_string_ref_1aae0c070f914d2486a560150a927c22dc"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_string_ref_1aae0c070f914d2486a560150a927c22dc" kindref="member">
                        GenericStringRef</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>CharType<sp/>(&amp;str)[N])<sp/>RAPIDJSON_NOEXCEPT
                </highlight>
            </codeline>
            <codeline lineno="279">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:<sp/>s(str),<sp/>length(N-1)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="280">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="282">
                <highlight class="preprocessor">#ifndef<sp/>__clang__<sp/>//<sp/>-Wdocumentation
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="283">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="301">
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="302" refid="struct_generic_string_ref_1a9e80d81d5ad49cf0fb4128ace8c548d9"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref_1a9e80d81d5ad49cf0fb4128ace8c548d9" kindref="member">
                        GenericStringRef</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>CharType*<sp/>str)
                </highlight>
            </codeline>
            <codeline lineno="303">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:<sp/>s(str),<sp/>length(<ref refid="namespaceinternal" kindref="compound">internal</ref>::StrLen(str)){
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(s<sp/>!=<sp/>0);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="304">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="306">
                <highlight class="preprocessor">#ifndef<sp/>__clang__<sp/>//<sp/>-Wdocumentation
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="307">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="313">
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="314" refid="struct_generic_string_ref_1a8b2c6a7fdc4da1e7055f7fdcf0ac517f"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_string_ref_1a8b2c6a7fdc4da1e7055f7fdcf0ac517f" kindref="member">
                        GenericStringRef</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>CharType*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len)
                </highlight>
            </codeline>
            <codeline lineno="315">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:<sp/>s(str),<sp/>length(len)<sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(s<sp/>!=<sp/>0);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="316">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="317">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&amp;<sp/>rhs)<sp/>:
                    <sp/>s(rhs.<ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be"
                                    kindref="member">s</ref>),<sp/>length(rhs.<ref
                        refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">
                    length</ref>)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="318">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="320" refid="struct_generic_string_ref_1a4e652ee3a398d0eb8ece1835d15274d0"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">operator</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch<sp/>*()
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>s;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="321">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="322" refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref_1ac555994afd329bc9bc1780acf2f9d9be" kindref="member">s</ref>;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="323" refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>
                    <ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">
                        length</ref>;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="324">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="325">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="327">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;SizeType<sp/>N&gt;
                </highlight>
            </codeline>
            <codeline lineno="328">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>(CharType<sp/>(&amp;str)[N])
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>=<sp/>delete<sp/>*/
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="330">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&amp;<sp/>operator=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef</ref>&amp;<sp/>rhs)
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>=<sp/>delete<sp/>*/
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="331">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="332">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="334"></codeline>
            <codeline lineno="345">
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                </highlight>
            </codeline>
            <codeline lineno="346" refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" refkind="member">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>
                    <sp/>
                    <ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>CharType*<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="347">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>
                    (str,<sp/>internal::StrLen(str));
                </highlight>
            </codeline>
            <codeline lineno="348">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="349">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="351"></codeline>
            <codeline lineno="365">
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                </highlight>
            </codeline>
            <codeline lineno="366" refid="document_8h_1a578c51ab574a50a9c760b9da7c7562f2" refkind="member">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>
                    <sp/>
                    <ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>CharType*<sp/>str,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="367">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>
                    (str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    (length));
                </highlight>
            </codeline>
            <codeline lineno="368">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="369">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="370">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="371">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="383">
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>CharType&gt;
                </highlight>
            </codeline>
            <codeline lineno="384">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>
                    <sp/>
                    <ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;CharType&gt;&amp;<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="385">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;CharType&gt;</ref>
                    (str.data(),
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    (str.size()));
                </highlight>
            </codeline>
            <codeline lineno="386">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="387">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="388">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="390">
                <highlight class="comment">//<sp/>GenericValue<sp/>type<sp/>traits
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="391">
                <highlight class="normal"></highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="namespaceinternal" kindref="compound">internal</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="392">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="393">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">&gt;</highlight>
            </codeline>
            <codeline lineno="394" refid="structinternal_1_1_is_generic_value_impl" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structinternal_1_1_is_generic_value_impl" kindref="compound">IsGenericValueImpl</ref>
                    <sp/>:<sp/>FalseType<sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="395">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="396">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>select<sp/>candidates<sp/>according<sp/>to<sp/>nested<sp/>encoding
                    <sp/>and<sp/>allocator<sp/>types
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="397"
                      refid="structinternal_1_1_is_generic_value_impl_3_01_t_00_01typename_01_void_3_01typename_01_t_1_1_enco3a51e9d8b4986f001b39e1e8edecb66a"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_is_generic_value_impl" kindref="compound">
                    IsGenericValueImpl</ref>&lt;T,<sp/>typename<sp/>Void&lt;typename<sp/>T::EncodingType&gt;<ref
                        refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>,<sp/>
                    typename<sp/>Void&lt;typename<sp/>T::AllocatorType&gt;<ref
                            refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>&gt;
                </highlight>
            </codeline>
            <codeline lineno="398">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:<sp/>IsBaseOf&lt;GenericValue&lt;typename<sp/>T::EncodingType,<sp/>typename<sp/>
                    T::AllocatorType&gt;,<sp/>T&gt;
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="399">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="400">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>helper<sp/>to<sp/>match<sp/>arbitrary<sp/>GenericValue<sp/>
                    instantiations,<sp/>including<sp/>derived<sp/>classes
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="401" refid="structinternal_1_1_is_generic_value" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structinternal_1_1_is_generic_value" kindref="compound">IsGenericValue</ref>
                    <sp/>:
                    <sp/>
                    <ref refid="structinternal_1_1_is_generic_value_impl" kindref="compound">IsGenericValueImpl</ref>
                    &lt;T&gt;
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">::Type</ref>
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="402">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="403">
                <highlight class="normal">}
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>namespace<sp/>internal
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="404">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="406">
                <highlight class="comment">//<sp/>TypeHelper
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="407">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="408">
                <highlight class="normal"></highlight>
                <highlight class="keyword">namespace
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="namespaceinternal" kindref="compound">internal</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="409">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="410">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="411" refid="structinternal_1_1_type_helper" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="structinternal_1_1_type_helper" kindref="compound">TypeHelper</ref>
                    <sp/>{};
                </highlight>
            </codeline>
            <codeline lineno="412">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="413">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="414" refid="structinternal_1_1_type_helper_3_01_value_type_00_01bool_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>bool&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="415">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsBool();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="416">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetBool();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>data)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetBool(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="418">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetBool(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="419">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="420">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="421">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="422" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>int&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="423">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsInt();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="424">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetInt();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="425">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>data)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetInt(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="426">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetInt(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="427">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="428">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="429">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="430" refid="structinternal_1_1_type_helper_3_01_value_type_00_01unsigned_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>unsigned&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="431">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsUint();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="432">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetUint();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="433">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>data)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetUint(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="434">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetUint(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="435">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="436">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="437">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="438" refid="structinternal_1_1_type_helper_3_01_value_type_00_01int64__t_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>int64_t&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="439">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsInt64();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="440">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>int64_t<sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetInt64();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="441">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,<sp/>int64_t<sp/>data)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetInt64(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="442">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,<sp/>int64_t<sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetInt64(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="443">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="444">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="445">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="446" refid="structinternal_1_1_type_helper_3_01_value_type_00_01uint64__t_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>uint64_t&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="447">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsUint64();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="448">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>uint64_t<sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetUint64();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="449">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,<sp/>uint64_t<sp/>data)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetUint64(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="450">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,<sp/>uint64_t<sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetUint64(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="451">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="452">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="453">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="454" refid="structinternal_1_1_type_helper_3_01_value_type_00_01double_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>double&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="455">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsDouble();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="456">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetDouble();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="457">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>data)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetDouble(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="458">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetDouble(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="459">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="460">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="461">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="462" refid="structinternal_1_1_type_helper_3_01_value_type_00_01float_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>float&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="463">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsFloat();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="464">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetFloat();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="465">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>data)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetFloat(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="466">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetFloat(data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="467">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="468">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="469">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="470"
                      refid="structinternal_1_1_type_helper_3_01_value_type_00_01const_01typename_01_value_type_1_1_ch_01_5_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>const<sp/>typename<sp/>ValueType::Ch*&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="471">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::Ch*<sp/>StringType;
                </highlight>
            </codeline>
            <codeline lineno="472">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsString();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="473">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>StringType<sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetString();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="474">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>StringType<sp/>data)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetString(
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::StringRefType(data));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="475">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>StringType<sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;<sp/>a)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetString(data,<sp/>a);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="476">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="477">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="478">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="479">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="480">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>std::basic_string&lt;typename<sp/>ValueType::Ch&gt;<sp/>&gt;<sp/>
                    {
                </highlight>
            </codeline>
            <codeline lineno="481">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;typename<sp/>ValueType::Ch&gt;<sp/>StringType;
                </highlight>
            </codeline>
            <codeline lineno="482">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsString();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="483">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>StringType<sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>StringType(v.GetString(),<sp/>v.GetStringLength());<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="484">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>StringType&amp;<sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;<sp/>a)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.SetString(data,<sp/>a);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="485">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="486">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="487">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="488">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="489"
                      refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_array_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>typename<sp/>ValueType::Array&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="490">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::Array<sp/>ArrayType;
                </highlight>
            </codeline>
            <codeline lineno="491">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsArray();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="492">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ArrayType<sp/>Get(ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetArray();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="493">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,<sp/>ArrayType<sp/>data)<sp/>
                    {
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v<sp/>=<sp/>data;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="494">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,<sp/>ArrayType<sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v<sp/>=<sp/>data;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="495">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="496">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="497">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="498"
                      refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_array_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>typename<sp/>ValueType::ConstArray&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="499">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::ConstArray<sp/>ArrayType;
                </highlight>
            </codeline>
            <codeline lineno="500">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsArray();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="501">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ArrayType<sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetArray();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="502">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="503">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="504">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="505"
                      refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_object_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>typename<sp/>ValueType::Object&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="506">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::Object<sp/>ObjectType;
                </highlight>
            </codeline>
            <codeline lineno="507">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsObject();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="508">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ObjectType<sp/>Get(ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetObject();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="509">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,<sp/>ObjectType<sp/>data)
                    <sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v<sp/>=<sp/>data;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="510">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>Set(ValueType&amp;<sp/>v,<sp/>ObjectType<sp/>data,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::AllocatorType&amp;)<sp/>{<sp/>v<sp/>=<sp/>data;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="511">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="512">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="513">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="514"
                      refid="structinternal_1_1_type_helper_3_01_value_type_00_01typename_01_value_type_1_1_const_object_01_4"
                      refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="structinternal_1_1_type_helper" kindref="compound">
                    TypeHelper</ref>&lt;ValueType,<sp/>typename<sp/>ValueType::ConstObject&gt;<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="515">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueType::ConstObject<sp/>ObjectType;
                </highlight>
            </codeline>
            <codeline lineno="516">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.IsObject();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="517">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal"><sp/>ObjectType<sp/>Get(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueType&amp;<sp/>v)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>v.GetObject();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="518">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="519">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="520">
                <highlight class="normal">}
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>namespace<sp/>internal
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="521">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="522">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Forward<sp/>declarations
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="523" refid="class_generic_array" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_array" kindref="compound">GenericArray</ref>;
                </highlight>
            </codeline>
            <codeline lineno="524" refid="class_generic_object" refkind="compound">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_object" kindref="compound">GenericObject</ref>;
                </highlight>
            </codeline>
            <codeline lineno="525">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="527">
                <highlight class="comment">//<sp/>GenericValue
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="528">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="530"></codeline>
            <codeline lineno="539">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator<sp/>=<sp/>MemoryPoolAllocator&lt;&gt;<sp/>&gt;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="540">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="541">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="543" refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_member" kindref="compound">GenericMember&lt;Encoding, Allocator&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_value_1a7ccf27c44058b4c11c3efc6473afb886" kindref="member">Member</ref>;
                </highlight>
            </codeline>
            <codeline lineno="544" refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>Encoding
                    <sp/>
                    <ref refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" kindref="member">
                        EncodingType</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="545" refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>Allocator
                    <sp/>
                    <ref refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" kindref="member">
                        AllocatorType</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="546" refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding::Ch
                    <sp/>
                    <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">Ch</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="547" refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">GenericStringRef&lt;Ch&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_value_1a32e0f30ee278072374c8168b14d3317f" kindref="member">
                        StringRefType</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="548" refid="class_generic_value_1a349b8faae61edc42b4289726820be439" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;false,Encoding,Allocator&gt;::Iterator</ref>
                    <sp/>
                    <ref refid="class_generic_value_1a349b8faae61edc42b4289726820be439" kindref="member">
                        MemberIterator</ref>;
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="549" refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;true,Encoding,Allocator&gt;::Iterator</ref>
                    <sp/>
                    <ref refid="class_generic_value_1aac08c3e660a9036d3dcb8b10ff6c61f4" kindref="member">
                        ConstMemberIterator</ref>;
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="550" refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>*
                    <sp/>
                    <ref refid="class_generic_value_1aee30721a49688ba0f865f5d581eb6be9" kindref="member">
                        ValueIterator</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="551" refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>*
                    <sp/>
                    <ref refid="class_generic_value_1a49010c6d6886f96ff0b0c51bccc7f6ea" kindref="member">
                        ConstValueIterator</ref>;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="552" refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    ;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="553">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray&lt;false, ValueType&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">Array</ref>;
                </highlight>
            </codeline>
            <codeline lineno="554">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray&lt;true, ValueType&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">ConstArray</ref>;
                </highlight>
            </codeline>
            <codeline lineno="555">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject&lt;false, ValueType&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">Object</ref>;
                </highlight>
            </codeline>
            <codeline lineno="556">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject&lt;true, ValueType&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">ConstObject</ref>;
                </highlight>
            </codeline>
            <codeline lineno="557">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="559"></codeline>
            <codeline lineno="560"></codeline>
            <codeline lineno="562" refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8" kindref="member">
                        GenericValue</ref>()<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_()<sp/>{<sp/>data_.f.flags<sp/>=<sp/>
                    kNullFlag;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="563">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="564">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="565">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>rhs)<sp/>
                    RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(rhs.data_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="567">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.data_.f.flags<sp/>=<sp/>kNullFlag;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>give<sp/>up<sp/>contents
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="568">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="569">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="570">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="571">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="573">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs);
                </highlight>
            </codeline>
            <codeline lineno="574">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="575">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="576">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="578">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref
                        refid="class_generic_document" kindref="compound">GenericDocument&lt;Encoding,Allocator,StackAllocator&gt;</ref>&amp;&amp;
                    <sp/>rhs);
                </highlight>
            </codeline>
            <codeline lineno="579">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="581">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="582">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator=(<ref
                        refid="class_generic_document" kindref="compound">GenericDocument&lt;Encoding,Allocator,StackAllocator&gt;</ref>&amp;&amp;
                    <sp/>rhs);
                </highlight>
            </codeline>
            <codeline lineno="583">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="584">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="585">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="586">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="588"></codeline>
            <codeline lineno="592" refid="class_generic_value_1a83c8f84b8e61f2f40414b703b75aea61" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a83c8f84b8e61f2f40414b703b75aea61" kindref="member">
                        GenericValue</ref>(
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                    <sp/>type)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="593">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>uint16_t<sp/>defaultFlags[7]<sp/>=<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="594">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNullFlag,<sp/>kFalseFlag,<sp/>kTrueFlag,<sp/>kObjectFlag,<sp/>kArrayFlag,<sp/>
                    kShortStringFlag,
                </highlight>
            </codeline>
            <codeline lineno="595">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNumberAnyFlag
                </highlight>
            </codeline>
            <codeline lineno="596">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="597">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(type<sp/>&lt;=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                         kindref="member">kNumberType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="598">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>defaultFlags[type];
                </highlight>
            </codeline>
            <codeline lineno="599">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="600">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Use<sp/>ShortString<sp/>to<sp/>store<sp/>empty<sp/>string.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="601">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(type<sp/>==
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                         kindref="member">kStringType</ref>)
                </highlight>
            </codeline>
            <codeline lineno="602">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.ss.SetLength(0);
                </highlight>
            </codeline>
            <codeline lineno="603">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="604">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="606"></codeline>
            <codeline lineno="612">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator<sp/>&gt;
                </highlight>
            </codeline>
            <codeline lineno="613">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>rhs,<sp/>Allocator<sp/>&amp;<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="614">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="616"></codeline>
            <codeline lineno="621">
                <highlight class="preprocessor">#ifndef<sp/>RAPIDJSON_DOXYGEN_RUNNING<sp/>//<sp/>hide<sp/>SFINAE<sp/>
                    from<sp/>Doxygen
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="622">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="623" refid="class_generic_value_1a0f6a0394bfffaedde88e433b2265194c" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a0f6a0394bfffaedde88e433b2265194c" kindref="member">
                        GenericValue</ref>(T<sp/>b,<sp/>RAPIDJSON_ENABLEIF((internal::IsSame&lt;bool,<sp/>T&gt;)))<sp/>
                    RAPIDJSON_NOEXCEPT
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>See<sp/>#472
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="624">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="625">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>b)<sp/>RAPIDJSON_NOEXCEPT
                </highlight>
            </codeline>
            <codeline lineno="626">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="627">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:<sp/>data_()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="628">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>safe-guard<sp/>against<sp/>failing<sp/>SFINAE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="629">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1af95188da1d8eb6d4b148fe9ce71cd7c4" kindref="member">
                        RAPIDJSON_STATIC_ASSERT</ref>((<ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481"
                                                            kindref="member">internal::IsSame&lt;bool,T&gt;::Value</ref>));
                </highlight>
            </codeline>
            <codeline lineno="630">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>b<sp/>?<sp/>kTrueFlag<sp/>:<sp/>kFalseFlag;
                </highlight>
            </codeline>
            <codeline lineno="631">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="632">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="634" refid="class_generic_value_1aafc754ade38421c179f5c8933ecbaf45" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1aafc754ade38421c179f5c8933ecbaf45" kindref="member">
                        GenericValue</ref>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="635">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.n.i64<sp/>=<sp/>i;
                </highlight>
            </codeline>
            <codeline lineno="636">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>(i<sp/>&gt;=<sp/>0)<sp/>?<sp/>(kNumberIntFlag<sp/>|<sp/>kUintFlag<sp/>|
                    <sp/>kUint64Flag)<sp/>:<sp/>kNumberIntFlag;
                </highlight>
            </codeline>
            <codeline lineno="637">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="638">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="640" refid="class_generic_value_1a972bff6c56ac3d04622ff7fad8d98331" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a972bff6c56ac3d04622ff7fad8d98331" kindref="member">
                        GenericValue</ref>(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="641">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.n.u64<sp/>=<sp/>u;
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="642">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>(u<sp/>&amp;<sp/>0x80000000)<sp/>?<sp/>kNumberUintFlag<sp/>:<sp/>
                    (kNumberUintFlag<sp/>|<sp/>kIntFlag<sp/>|<sp/>kInt64Flag);
                </highlight>
            </codeline>
            <codeline lineno="643">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="644">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="646" refid="class_generic_value_1a964b69f1d2596f75ded5421b6db01a14" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a964b69f1d2596f75ded5421b6db01a14" kindref="member">
                        GenericValue</ref>(int64_t<sp/>i64)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="647">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.n.i64<sp/>=<sp/>i64;
                </highlight>
            </codeline>
            <codeline lineno="648">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>kNumberInt64Flag;
                </highlight>
            </codeline>
            <codeline lineno="649">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(i64<sp/>&gt;=<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="650">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>|=<sp/>kNumberUint64Flag;
                </highlight>
            </codeline>
            <codeline lineno="651">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(static_cast&lt;uint64_t&gt;(i64)<sp/>&amp;
                    <sp/>
                    <ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                        RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x00000000)))
                </highlight>
            </codeline>
            <codeline lineno="652">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>|=<sp/>kUintFlag;
                </highlight>
            </codeline>
            <codeline lineno="653">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(static_cast&lt;uint64_t&gt;(i64)<sp/>&amp;
                    <sp/>
                    <ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                        RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x80000000)))
                </highlight>
            </codeline>
            <codeline lineno="654">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>|=<sp/>kIntFlag;
                </highlight>
            </codeline>
            <codeline lineno="655">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="656">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(i64<sp/>&gt;=<sp/>static_cast&lt;int64_t&gt;(<ref
                        refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                    RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x80000000)))
                </highlight>
            </codeline>
            <codeline lineno="657">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>|=<sp/>kIntFlag;
                </highlight>
            </codeline>
            <codeline lineno="658">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="659">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="661" refid="class_generic_value_1ad04805a57f5050c8e04be469ba64d6f3" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1ad04805a57f5050c8e04be469ba64d6f3" kindref="member">
                        GenericValue</ref>(uint64_t<sp/>u64)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="662">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.n.u64<sp/>=<sp/>u64;
                </highlight>
            </codeline>
            <codeline lineno="663">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>kNumberUint64Flag;
                </highlight>
            </codeline>
            <codeline lineno="664">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(u64<sp/>&amp;
                    <sp/>
                    <ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                        RAPIDJSON_UINT64_C2</ref>(0x80000000,<sp/>0x00000000)))
                </highlight>
            </codeline>
            <codeline lineno="665">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>|=<sp/>kInt64Flag;
                </highlight>
            </codeline>
            <codeline lineno="666">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(u64<sp/>&amp;
                    <sp/>
                    <ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                        RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x00000000)))
                </highlight>
            </codeline>
            <codeline lineno="667">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>|=<sp/>kUintFlag;
                </highlight>
            </codeline>
            <codeline lineno="668">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!(u64<sp/>&amp;
                    <sp/>
                    <ref refid="rapidjson_8h_1aaee1245f375a71be1ac9b8a07ba5fb8f" kindref="member">
                        RAPIDJSON_UINT64_C2</ref>(0xFFFFFFFF,<sp/>0x80000000)))
                </highlight>
            </codeline>
            <codeline lineno="669">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>|=<sp/>kIntFlag;
                </highlight>
            </codeline>
            <codeline lineno="670">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="671">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="673" refid="class_generic_value_1a267d05b7e98c3507908eaf085fe41155" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a267d05b7e98c3507908eaf085fe41155" kindref="member">
                        GenericValue</ref>(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_()<sp/>{<sp/>data_.n.d<sp/>=
                    <sp/>d;<sp/>data_.f.flags<sp/>=<sp/>kNumberDoubleFlag;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="674">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="676" refid="class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value_1a4d9af98141360cd801daab4ed1ca2c91" kindref="member">
                        GenericValue</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>s,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_()<sp/>{<sp/>SetStringRaw(<ref
                            refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,
                    <sp/>length));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="677">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="679" refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1abb2887958974fef1b2b5c8e32cc72ddb" kindref="member">
                        GenericValue</ref>(StringRefType<sp/>s)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_()<sp/>{<sp/>
                    SetStringRaw(s);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="680">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="682" refid="class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value_1a9ec2c7cda8c8845acfa3565c6b1b4e10" kindref="member">
                        GenericValue</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>s,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,<sp/>Allocator&amp;<sp/>allocator)<sp/>:<sp/>data_()<sp/>{<sp/>SetStringRaw(<ref
                            refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,
                    <sp/>length),<sp/>allocator);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="683">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="685" refid="class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value_1a9b72b2e3347d4cd77b16c3b45e8decf1" kindref="member">
                        GenericValue</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*s,<sp/>Allocator&amp;<sp/>allocator)<sp/>:<sp/>data_()<sp/>{<sp/>
                    SetStringRaw(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">
                        StringRef</ref>(s),<sp/>allocator);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="686">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="687">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="688">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="691">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>s,<sp/>Allocator&amp;<sp/>allocator)
                    <sp/>:<sp/>data_()<sp/>{<sp/>SetStringRaw(<ref
                            refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s),
                    <sp/>allocator);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="692">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="693">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="695"></codeline>
            <codeline lineno="700" refid="class_generic_value_1a953052ef91e54aabe9bdb9f9eaebf6cc" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value_1a953052ef91e54aabe9bdb9f9eaebf6cc" kindref="member">
                        GenericValue</ref>(Array<sp/>a)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(a.value_.data_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="701">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>a.value_.data_<sp/>=<sp/>Data();
                </highlight>
            </codeline>
            <codeline lineno="702">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>a.value_.data_.f.flags<sp/>=<sp/>kArrayFlag;
                </highlight>
            </codeline>
            <codeline lineno="703">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="704">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="706"></codeline>
            <codeline lineno="711" refid="class_generic_value_1a9c294e56f4ab940f845f7c171b183483" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value_1a9c294e56f4ab940f845f7c171b183483" kindref="member">
                        GenericValue</ref>(Object<sp/>o)<sp/>RAPIDJSON_NOEXCEPT<sp/>:<sp/>data_(o.value_.data_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="712">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>o.value_.data_<sp/>=<sp/>Data();
                </highlight>
            </codeline>
            <codeline lineno="713">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>o.value_.data_.f.flags<sp/>=<sp/>kObjectFlag;
                </highlight>
            </codeline>
            <codeline lineno="714">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="715">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="717"></codeline>
            <codeline lineno="719" refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">
                        ~GenericValue</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="720">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(Allocator::kNeedFree)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Shortcut<sp/>by<sp/>Allocator&apos;s<sp/>trait
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="721">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal">(data_.f.flags)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="722">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>kArrayFlag:
                </highlight>
            </codeline>
            <codeline lineno="723">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="724">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>e<sp/>=<sp/>
                    GetElementsPointer();
                </highlight>
            </codeline>
            <codeline lineno="725">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*
                    <sp/>v<sp/>=<sp/>e;<sp/>v<sp/>!=<sp/>e<sp/>+<sp/>data_.a.size;<sp/>++v)
                </highlight>
            </codeline>
            <codeline lineno="726">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v-&gt;~GenericValue();
                </highlight>
            </codeline>
            <codeline lineno="727">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Allocator::Free(e);
                </highlight>
            </codeline>
            <codeline lineno="728">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="729">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="730">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="731">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>kObjectFlag:
                </highlight>
            </codeline>
            <codeline lineno="732">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(MemberIterator<sp/>m<sp/>=<sp/>MemberBegin();<sp/>m<sp/>!=<sp/>
                    MemberEnd();<sp/>++m)
                </highlight>
            </codeline>
            <codeline lineno="733">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>m-&gt;~Member();
                </highlight>
            </codeline>
            <codeline lineno="734">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Allocator::Free(GetMembersPointer());
                </highlight>
            </codeline>
            <codeline lineno="735">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="736">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="737">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>kCopyStringFlag:
                </highlight>
            </codeline>
            <codeline lineno="738">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Allocator::Free(const_cast&lt;Ch*&gt;(GetStringPointer()));
                </highlight>
            </codeline>
            <codeline lineno="739">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="740">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="741">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">default</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="742">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Do<sp/>nothing<sp/>for<sp/>other<sp/>types.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="743">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="744">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="745">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="746">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="748"></codeline>
            <codeline lineno="750"></codeline>
            <codeline lineno="751"></codeline>
            <codeline lineno="753"></codeline>
            <codeline lineno="755" refid="class_generic_value_1a9018a40d7c52efc00daf803c51d3236c" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_value_1a9018a40d7c52efc00daf803c51d3236c" kindref="member">operator=</ref>
                    (<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>
                    RAPIDJSON_NOEXCEPT<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="756">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>!=<sp/>&amp;rhs);
                </highlight>
            </codeline>
            <codeline lineno="757">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                </highlight>
            </codeline>
            <codeline lineno="758">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RawAssign(rhs);
                </highlight>
            </codeline>
            <codeline lineno="759">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="760">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="761">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="762">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="763">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator=(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>rhs)<sp/>
                    RAPIDJSON_NOEXCEPT<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="765">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>=<sp/>rhs.Move();
                </highlight>
            </codeline>
            <codeline lineno="766">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="767">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="768">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="770"></codeline>
            <codeline lineno="774" refid="class_generic_value_1a386708557555e6389184de608af5e6a6" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_value_1a386708557555e6389184de608af5e6a6" kindref="member">operator=</ref>
                    (StringRefType<sp/>str)<sp/>RAPIDJSON_NOEXCEPT<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="775">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>s(str);
                </highlight>
            </codeline>
            <codeline lineno="776">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>=<sp/>s;
                </highlight>
            </codeline>
            <codeline lineno="777">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="778">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="780"></codeline>
            <codeline lineno="791">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="792">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_DISABLEIF_RETURN((internal::IsPointer&lt;T&gt;),<sp/>(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))
                </highlight>
            </codeline>
            <codeline lineno="793">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>operator=(T
                    <sp/>
                    <ref refid="struct_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref>)
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="794">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>v(value);
                </highlight>
            </codeline>
            <codeline lineno="795">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>=<sp/>v;
                </highlight>
            </codeline>
            <codeline lineno="796">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="797">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="799"></codeline>
            <codeline lineno="804">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="805">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>CopyFrom(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>rhs,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="806">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(static_cast&lt;void*&gt;(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)<sp/>!=<sp/>static_cast&lt;void<sp/>const*&gt;(&amp;rhs));
                </highlight>
            </codeline>
            <codeline lineno="807">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                </highlight>
            </codeline>
            <codeline lineno="808">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(rhs,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="809">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="810">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="811">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="813"></codeline>
            <codeline lineno="817">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>Swap(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>other)<sp/>
                    RAPIDJSON_NOEXCEPT<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="818">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>temp;
                </highlight>
            </codeline>
            <codeline lineno="819">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>temp.<ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">
                    RawAssign</ref>(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="820">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RawAssign(other);
                </highlight>
            </codeline>
            <codeline lineno="821">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>other.<ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">
                    RawAssign</ref>(temp);
                </highlight>
            </codeline>
            <codeline lineno="822">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="823">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="824">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="826"></codeline>
            <codeline lineno="837">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>swap(<ref refid="class_generic_value" kindref="compound">
                    GenericValue</ref>&amp;<sp/>a,
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>b)<sp/>
                    RAPIDJSON_NOEXCEPT<sp/>{<sp/>a.Swap(b);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="838">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="840"></codeline>
            <codeline lineno="841">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>Move()<sp/>
                    RAPIDJSON_NOEXCEPT<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="843"></codeline>
            <codeline lineno="845"></codeline>
            <codeline lineno="846"></codeline>
            <codeline lineno="851">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="852">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator==(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>rhs)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="853">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>
                    <sp/>RhsType;
                </highlight>
            </codeline>
            <codeline lineno="854">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(GetType()<sp/>!=<sp/>rhs.GetType())
                </highlight>
            </codeline>
            <codeline lineno="855">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="856">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="857">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal"><sp/>(GetType())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="858">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                         kindref="member">kObjectType</ref>:
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Warning:<sp/>O(n^2)<sp/>inner-loop
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="859">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(data_.o.size<sp/>!=<sp/>rhs.data_.o.size)
                </highlight>
            </codeline>
            <codeline lineno="860">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="861">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstMemberIterator<sp/>lhsMemberItr<sp/>=<sp/>MemberBegin();<sp/>
                    lhsMemberItr<sp/>!=<sp/>MemberEnd();<sp/>++lhsMemberItr)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="862">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>RhsType::ConstMemberIterator<sp/>rhsMemberItr<sp/>=<sp/>
                    rhs.FindMember(lhsMemberItr-&gt;name);
                </highlight>
            </codeline>
            <codeline lineno="863">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(rhsMemberItr<sp/>==<sp/>rhs.MemberEnd()<sp/>||<sp/>lhsMemberItr-&gt;value
                    <sp/>!=<sp/>rhsMemberItr-&gt;value)
                </highlight>
            </codeline>
            <codeline lineno="864">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="865">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="866">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="867">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="868">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                         kindref="member">kArrayType</ref>:
                </highlight>
            </codeline>
            <codeline lineno="869">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(data_.a.size<sp/>!=<sp/>rhs.data_.a.size)
                </highlight>
            </codeline>
            <codeline lineno="870">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="871">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data_.a.size;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="872">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)[i]<sp/>!=<sp/>rhs[i])
                </highlight>
            </codeline>
            <codeline lineno="873">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="874">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="875">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="876">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                         kindref="member">kStringType</ref>:
                </highlight>
            </codeline>
            <codeline lineno="877">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>StringEqual(rhs);
                </highlight>
            </codeline>
            <codeline lineno="878">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="879">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                         kindref="member">kNumberType</ref>:
                </highlight>
            </codeline>
            <codeline lineno="880">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(IsDouble()<sp/>||<sp/>rhs.IsDouble())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="881">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>a<sp/>=<sp/>GetDouble();
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>May<sp/>convert<sp/>from<sp/>integer<sp/>to<sp/>double.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="882">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>b<sp/>=<sp/>rhs.GetDouble();
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Ditto
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="883">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>a<sp/>&gt;=<sp/>b<sp/>&amp;&amp;<sp/>a<sp/>&lt;=<sp/>b;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Prevent<sp/>-Wfloat-equal
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="884">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="885">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="886">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.n.u64<sp/>==<sp/>rhs.data_.n.u64;
                </highlight>
            </codeline>
            <codeline lineno="887">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="888">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">default</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="889">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="890">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="891">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="892">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="894">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator==(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>rhs)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>==
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref
                            refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(rhs));
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="895">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="896">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="897">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="900">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator==(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>rhs)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>==
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref
                            refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(rhs));
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="901">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="902">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="904"></codeline>
            <codeline lineno="906">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;<sp/>RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,
                    <ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>
                    <sp/>&gt;),<sp/>(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">))<sp/>operator==(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>T&amp;<sp/>rhs)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>==
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(rhs);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="907">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="909"></codeline>
            <codeline lineno="911">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="912">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator!=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>rhs)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>!(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>==<sp/>rhs);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="913">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="915">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>operator!=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>rhs)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>!(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>==<sp/>rhs);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="916">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="918"></codeline>
            <codeline lineno="920">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;<sp/>RAPIDJSON_DISABLEIF_RETURN((<ref
                        refid="structinternal_1_1_is_generic_value" kindref="compound">
                    internal::IsGenericValue&lt;T&gt;</ref>),<sp/>(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">))<sp/>operator!=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>T&amp;<sp/>rhs)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>!(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal"><sp/>==<sp/>rhs);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="921">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="923"></codeline>
            <codeline lineno="925">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_DISABLEIF_RETURN((<ref
                        refid="structinternal_1_1_is_generic_value" kindref="compound">
                    internal::IsGenericValue&lt;T&gt;</ref>),<sp/>(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">))<sp/>operator==(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>T&amp;<sp/>lhs,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>rhs<sp/>==<sp/>lhs;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="926">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="928"></codeline>
            <codeline lineno="930">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_DISABLEIF_RETURN((<ref
                        refid="structinternal_1_1_is_generic_value" kindref="compound">
                    internal::IsGenericValue&lt;T&gt;</ref>),<sp/>(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">))<sp/>operator!=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>T&amp;<sp/>lhs,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>!(rhs<sp/>==<sp/>lhs);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="932"></codeline>
            <codeline lineno="934"></codeline>
            <codeline lineno="935">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="936">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                    <sp/>GetType()
                </highlight>
                <highlight class="keyword">
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(data_.f.flags<sp/>&amp;<sp/>kTypeMask);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="937">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsNull()
                </highlight>
                <highlight class="keyword">
                    <sp/>
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.f.flags<sp/>==<sp/>kNullFlag;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="938">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsFalse()
                </highlight>
                <highlight class="keyword">
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.f.flags<sp/>==<sp/>kFalseFlag;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="939">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsTrue()
                </highlight>
                <highlight class="keyword">
                    <sp/>
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.f.flags<sp/>==<sp/>kTrueFlag;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="940">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsBool()
                </highlight>
                <highlight class="keyword">
                    <sp/>
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(data_.f.flags<sp/>&amp;<sp/>kBoolFlag)<sp/>!=<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="941">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsObject()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.f.flags<sp/>==<sp/>kObjectFlag;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="942">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsArray()
                </highlight>
                <highlight class="keyword">
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.f.flags<sp/>==<sp/>kArrayFlag;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="943">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsNumber()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(data_.f.flags<sp/>&amp;<sp/>kNumberFlag)<sp/>!=<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="944">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsInt()
                </highlight>
                <highlight class="keyword">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(data_.f.flags<sp/>&amp;<sp/>kIntFlag)<sp/>!=<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="945">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsUint()
                </highlight>
                <highlight class="keyword">
                    <sp/>
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(data_.f.flags<sp/>&amp;<sp/>kUintFlag)<sp/>!=<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="946">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsInt64()
                </highlight>
                <highlight class="keyword">
                    <sp/>
                    <sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(data_.f.flags<sp/>&amp;<sp/>kInt64Flag)<sp/>!=<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="947">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsUint64()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(data_.f.flags<sp/>&amp;<sp/>kUint64Flag)<sp/>!=<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="948">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsDouble()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(data_.f.flags<sp/>&amp;<sp/>kDoubleFlag)<sp/>!=<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="949">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsString()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(data_.f.flags<sp/>&amp;<sp/>kStringFlag)<sp/>!=<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="950">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="951">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Checks<sp/>whether<sp/>a<sp/>number<sp/>can<sp/>be<sp/>losslessly<sp/>
                    converted<sp/>to<sp/>a<sp/>double.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="952">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsLosslessDouble()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="953">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!IsNumber())
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="954">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(IsUint64())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="955">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>u<sp/>=<sp/>GetUint64();
                </highlight>
            </codeline>
            <codeline lineno="956">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">volatile</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(u);</highlight>
            </codeline>
            <codeline lineno="957">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(d<sp/>&gt;=<sp/>0.0)
                </highlight>
            </codeline>
            <codeline lineno="958">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;&amp;<sp/>(d<sp/>&lt;<sp/>static_cast&lt;double&gt;(std::numeric_limits&lt;uint64_t&gt;::max()))
                </highlight>
            </codeline>
            <codeline lineno="959">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;&amp;<sp/>(u<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">uint64_t</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(d));</highlight>
            </codeline>
            <codeline lineno="960">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="961">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(IsInt64())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="962">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>int64_t<sp/>i<sp/>=<sp/>GetInt64();
                </highlight>
            </codeline>
            <codeline lineno="963">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">volatile</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(i);</highlight>
            </codeline>
            <codeline lineno="964">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(d<sp/>&gt;=<sp/>static_cast&lt;double&gt;(std::numeric_limits&lt;int64_t&gt;::min()))
                </highlight>
            </codeline>
            <codeline lineno="965">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;&amp;<sp/>(d<sp/>&lt;<sp/>static_cast&lt;double&gt;(std::numeric_limits&lt;int64_t&gt;::max()))
                </highlight>
            </codeline>
            <codeline lineno="966">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&amp;&amp;<sp/>(i<sp/>==<sp/>static_cast&lt;int64_t&gt;(d));
                </highlight>
            </codeline>
            <codeline lineno="967">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="968">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>double,<sp/>int,<sp/>uint<sp/>are<sp/>always<sp/>lossless
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="969">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="970">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="971">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Checks<sp/>whether<sp/>a<sp/>number<sp/>is<sp/>a<sp/>float<sp/>
                    (possible<sp/>lossy).
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="972">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsFloat()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="973">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((data_.f.flags<sp/>&amp;<sp/>kDoubleFlag)<sp/>==<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="974">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="975">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d<sp/>=<sp/>GetDouble();
                </highlight>
            </codeline>
            <codeline lineno="976">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>d<sp/>&gt;=<sp/>-3.4028234e38<sp/>&amp;&amp;<sp/>d<sp/>&lt;=<sp/>
                    3.4028234e38;
                </highlight>
            </codeline>
            <codeline lineno="977">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="978">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Checks<sp/>whether<sp/>a<sp/>number<sp/>can<sp/>be<sp/>losslessly<sp/>
                    converted<sp/>to<sp/>a<sp/>float.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="979">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>IsLosslessFloat()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="980">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!IsNumber())
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="981">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>a<sp/>=<sp/>GetDouble();
                </highlight>
            </codeline>
            <codeline lineno="982">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(a<sp/>&lt;<sp/>static_cast&lt;double&gt;(-std::numeric_limits&lt;float&gt;::max())
                </highlight>
            </codeline>
            <codeline lineno="983">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>||<sp/>a<sp/>&gt;<sp/>static_cast&lt;double&gt;(std::numeric_limits&lt;float&gt;::max()))
                </highlight>
            </codeline>
            <codeline lineno="984">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="985">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>b<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(a));</highlight>
            </codeline>
            <codeline lineno="986">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>a<sp/>&gt;=<sp/>b<sp/>&amp;&amp;<sp/>a<sp/>&lt;=<sp/>b;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Prevent<sp/>-Wfloat-equal
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="987">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="988">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="990"></codeline>
            <codeline lineno="992"></codeline>
            <codeline lineno="993">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="994">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetNull()<sp/>{<sp/>
                    this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="995">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="997"></codeline>
            <codeline lineno="999"></codeline>
            <codeline lineno="1000">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1001">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>GetBool()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsBool());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.f.flags<sp/>==<sp/>kTrueFlag;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1003"></codeline>
            <codeline lineno="1004">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetBool(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>b)<sp/>{<sp/>this-&gt;~<ref refid="class_generic_value"
                                                                           kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(b);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1005">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1007"></codeline>
            <codeline lineno="1009"></codeline>
            <codeline lineno="1010"></codeline>
            <codeline lineno="1012"></codeline>
            <codeline lineno="1013">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetObject()<sp/>{
                    <sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref
                            refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                            kindref="member">kObjectType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1014">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1016">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>MemberCount()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.o.size;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1017">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1019">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>ObjectEmpty()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.o.size<sp/>==<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1020">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1022"></codeline>
            <codeline lineno="1030">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1031">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr&lt;internal::IsSame&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::RemoveConst&lt;T&gt;::Type</ref>
                    ,<sp/>Ch&gt;<sp/>&gt;),(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))
                    <sp/>operator[](T*
                    <sp/>
                    <ref refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>)
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1032">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>n(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));
                </highlight>
            </codeline>
            <codeline lineno="1033">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)[n];</highlight>
            </codeline>
            <codeline lineno="1034">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1035">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1036">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr&lt;internal::IsSame&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">internal::RemoveConst&lt;T&gt;::Type</ref>
                    ,<sp/>Ch&gt;<sp/>&gt;),(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))<sp/>operator[](T*<sp/>
                    name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const_cast&lt;</highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(*this)[<ref refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac"
                                                       kindref="member">name</ref>];<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1037">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1039"></codeline>
            <codeline lineno="1047">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="1048">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1049">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>member<sp/>=<sp/>FindMember(name);
                </highlight>
            </codeline>
            <codeline lineno="1050">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(member<sp/>!=<sp/>MemberEnd())
                </highlight>
            </codeline>
            <codeline lineno="1051">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>member-&gt;value;
                </highlight>
            </codeline>
            <codeline lineno="1052">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1053">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>see<sp/>above<sp/>note
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1054">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1055">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>This<sp/>will<sp/>generate<sp/>-Wexit-time-destructors<sp/>in<sp/>
                    clang
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1056">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>static<sp/>GenericValue<sp/>NullValue;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1057">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>return<sp/>NullValue;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1058">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1059">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Use<sp/>static<sp/>buffer<sp/>and<sp/>placement-new<sp/>to<sp/>prevent
                    <sp/>destruction
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1060">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>buffer[
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>)];
                </highlight>
            </codeline>
            <codeline lineno="1061">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(buffer)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                </highlight>
            </codeline>
            <codeline lineno="1062">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1063">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1064">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="1065">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const_cast&lt;</highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(*this)[<ref refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac"
                                                       kindref="member">name</ref>];<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1066">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1067">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1068">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)[<ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref
                        refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name))];
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1070">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)[<ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref
                        refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name))];
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1071">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1072">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1074"></codeline>
            <codeline lineno="1075">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ConstMemberIterator<sp/>MemberBegin()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ConstMemberIterator(GetMembersPointer());<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1077"></codeline>
            <codeline lineno="1078">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ConstMemberIterator<sp/>MemberEnd()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ConstMemberIterator(GetMembersPointer()<sp/>+<sp/>data_.o.size);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1080"></codeline>
            <codeline lineno="1081">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>MemberBegin()
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>MemberIterator(GetMembersPointer());<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1083"></codeline>
            <codeline lineno="1084">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>MemberEnd()
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>MemberIterator(GetMembersPointer()<sp/>+<sp/>data_.o.size);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1085">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1087"></codeline>
            <codeline lineno="1094">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>HasMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>FindMember(name)<sp/>!=<sp/>MemberEnd();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1095">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1096">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1097">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>HasMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>FindMember(name)<sp/>!=<sp/>MemberEnd();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1106">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1107">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1109"></codeline>
            <codeline lineno="1117">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="1118">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>HasMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>FindMember(name)<sp/>!=<sp/>MemberEnd();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1119">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1121"></codeline>
            <codeline lineno="1132">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>FindMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1133">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>n(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));
                </highlight>
            </codeline>
            <codeline lineno="1134">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>FindMember(n);
                </highlight>
            </codeline>
            <codeline lineno="1135">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1136">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1137">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ConstMemberIterator<sp/>FindMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const_cast&lt;</highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(*this).FindMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1138">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1140"></codeline>
            <codeline lineno="1152">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="1153">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>FindMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1154">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                </highlight>
            </codeline>
            <codeline lineno="1155">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(name.IsString());
                </highlight>
            </codeline>
            <codeline lineno="1156">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>member<sp/>=<sp/>MemberBegin();
                </highlight>
            </codeline>
            <codeline lineno="1157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(<sp/>;<sp/>member<sp/>!=<sp/>MemberEnd();<sp/>++member)
                </highlight>
            </codeline>
            <codeline lineno="1158">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(name.StringEqual(member-&gt;name))
                </highlight>
            </codeline>
            <codeline lineno="1159">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1160">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>member;
                </highlight>
            </codeline>
            <codeline lineno="1161">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1162">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;<sp/>ConstMemberIterator<sp/>FindMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const_cast&lt;</highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(*this).FindMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1163">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1164">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1165">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>FindMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>FindMember(<ref refid="class_generic_value" kindref="compound">
                    GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">
                    StringRef</ref>(name)));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ConstMemberIterator<sp/>FindMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>FindMember(<ref refid="class_generic_value" kindref="compound">
                    GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">
                    StringRef</ref>(name)));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1174">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1175">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1177"></codeline>
            <codeline lineno="1186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>value,<sp/>Allocator&amp;
                    <sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1187">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                </highlight>
            </codeline>
            <codeline lineno="1188">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(name.IsString());
                </highlight>
            </codeline>
            <codeline lineno="1189">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1190">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ObjectData&amp;<sp/>o<sp/>=<sp/>data_.o;
                </highlight>
            </codeline>
            <codeline lineno="1191">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(o.size<sp/>&gt;=<sp/>o.capacity)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1192">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(o.capacity<sp/>==<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>o.capacity<sp/>=<sp/>kDefaultObjectCapacity;
                </highlight>
            </codeline>
            <codeline lineno="1194">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetMembersPointer(reinterpret_cast&lt;Member*&gt;(allocator.Malloc(o.capacity<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Member))));</highlight>
            </codeline>
            <codeline lineno="1195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>oldCapacity<sp/>=<sp/>o.capacity;
                </highlight>
            </codeline>
            <codeline lineno="1198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>o.capacity<sp/>+=<sp/>(oldCapacity<sp/>+<sp/>1)<sp/>/<sp/>2;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>grow<sp/>by<sp/>factor<sp/>1.5
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetMembersPointer(reinterpret_cast&lt;Member*&gt;(allocator.Realloc(GetMembersPointer(),<sp/>
                    oldCapacity<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Member),<sp/>o.capacity<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Member))));</highlight>
            </codeline>
            <codeline lineno="1200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Member*<sp/>members<sp/>=<sp/>GetMembersPointer();
                </highlight>
            </codeline>
            <codeline lineno="1203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>members[o.size].<ref refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac"
                                              kindref="member">name</ref>.RawAssign(name);
                </highlight>
            </codeline>
            <codeline lineno="1204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>members[o.size].<ref refid="struct_generic_member_1aad3cfa4f9e8b9018068c8bc865723083"
                                              kindref="member">value</ref>.RawAssign(value);
                </highlight>
            </codeline>
            <codeline lineno="1205">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>o.size++;
                </highlight>
            </codeline>
            <codeline lineno="1206">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1208">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1210"></codeline>
            <codeline lineno="1218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/>
                    StringRefType<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>v(value);
                </highlight>
            </codeline>
            <codeline lineno="1220">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1221">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1222">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1223">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1224">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1233">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,<sp/>
                    std::basic_string&lt;Ch&gt;&amp;<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>v(value,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1235">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1236">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1237">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1238">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1240"></codeline>
            <codeline lineno="1256">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1257">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,
                    <sp/>
                    <ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>
                    <sp/>&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))
                </highlight>
            </codeline>
            <codeline lineno="1258">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AddMember(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,
                    <sp/>T<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1259">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>v(value);
                </highlight>
            </codeline>
            <codeline lineno="1260">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1261">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1262">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1263">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1264">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>name,
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>value,<sp/>
                    Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1265">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(name,<sp/>value,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1266">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1267">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>name,
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>value,<sp/>Allocator&amp;
                    <sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1268">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(name,<sp/>value,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1269">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1270">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>AddMember(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>name,
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>value,<sp/>
                    Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1271">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(name,<sp/>value,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1272">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1273">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>
                    AddMember(StringRefType<sp/>name,
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>value,<sp/>
                    Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1274">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>n(name);
                </highlight>
            </codeline>
            <codeline lineno="1275">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(n,<sp/>value,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1276">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1277">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1278">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1279">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1281"></codeline>
            <codeline lineno="1290">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>
                    AddMember(StringRefType<sp/>name,
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>value,<sp/>Allocator&amp;
                    <sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1291">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>n(name);
                </highlight>
            </codeline>
            <codeline lineno="1292">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(n,<sp/>value,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1293">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1294">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1296"></codeline>
            <codeline lineno="1304">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>
                    AddMember(StringRefType<sp/>name,<sp/>StringRefType<sp/>value,<sp/>Allocator&amp;<sp/>allocator)
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1305">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>v(value);
                </highlight>
            </codeline>
            <codeline lineno="1306">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(name,<sp/>v,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1307">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1308">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1310"></codeline>
            <codeline lineno="1326">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1327">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,
                    <sp/>
                    <ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>
                    <sp/>&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))
                </highlight>
            </codeline>
            <codeline lineno="1328">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>AddMember(StringRefType<sp/>name,<sp/>T<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1329">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>n(name);
                </highlight>
            </codeline>
            <codeline lineno="1330">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>AddMember(n,<sp/>value,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1331">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1332">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1334"></codeline>
            <codeline lineno="1337">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>RemoveAllMembers()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1338">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1339">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(MemberIterator<sp/>m<sp/>=<sp/>MemberBegin();<sp/>m<sp/>!=<sp/>
                    MemberEnd();<sp/>++m)
                </highlight>
            </codeline>
            <codeline lineno="1340">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>m-&gt;~Member();
                </highlight>
            </codeline>
            <codeline lineno="1341">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.o.size<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1342">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1343">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1345"></codeline>
            <codeline lineno="1352">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RemoveMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1353">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>n(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));
                </highlight>
            </codeline>
            <codeline lineno="1354">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>RemoveMember(n);
                </highlight>
            </codeline>
            <codeline lineno="1355">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1356">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1357">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1358">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RemoveMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>RemoveMember(<ref refid="class_generic_value" kindref="compound">
                    GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">
                    StringRef</ref>(name)));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1359">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1360">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1361">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="1362">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RemoveMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1363">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>m<sp/>=<sp/>FindMember(name);
                </highlight>
            </codeline>
            <codeline lineno="1364">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(m<sp/>!=<sp/>MemberEnd())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1365">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RemoveMember(m);
                </highlight>
            </codeline>
            <codeline lineno="1366">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1367">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1368">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1369">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1370">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1371">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1373"></codeline>
            <codeline lineno="1380">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>RemoveMember(MemberIterator<sp/>m)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1381">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                </highlight>
            </codeline>
            <codeline lineno="1382">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(data_.o.size<sp/>&gt;<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="1383">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(GetMembersPointer()<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="1384">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(m<sp/>&gt;=<sp/>MemberBegin()<sp/>&amp;&amp;<sp/>m<sp/>
                    &lt;<sp/>MemberEnd());
                </highlight>
            </codeline>
            <codeline lineno="1385">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1386">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>last(GetMembersPointer()<sp/>+<sp/>(data_.o.size<sp/>-<sp/>1));
                </highlight>
            </codeline>
            <codeline lineno="1387">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(data_.o.size<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>m<sp/>!=<sp/>last)
                </highlight>
            </codeline>
            <codeline lineno="1388">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*m<sp/>=<sp/>*last;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Move<sp/>the<sp/>last<sp/>one<sp/>to<sp/>this<sp/>place
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1389">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1390">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>m-&gt;~Member();
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Only<sp/>one<sp/>left,<sp/>just<sp/>destroy
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1391">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>--data_.o.size;
                </highlight>
            </codeline>
            <codeline lineno="1392">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>m;
                </highlight>
            </codeline>
            <codeline lineno="1393">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1394">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1396"></codeline>
            <codeline lineno="1404">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>EraseMember(ConstMemberIterator<sp/>pos)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1405">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EraseMember(pos,<sp/>pos<sp/>+1);
                </highlight>
            </codeline>
            <codeline lineno="1406">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1407">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1409"></codeline>
            <codeline lineno="1417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>EraseMember(ConstMemberIterator<sp/>first,<sp/>ConstMemberIterator<sp/>last)
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1418">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                </highlight>
            </codeline>
            <codeline lineno="1419">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(data_.o.size<sp/>&gt;<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="1420">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(GetMembersPointer()<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="1421">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&gt;=<sp/>MemberBegin());
                </highlight>
            </codeline>
            <codeline lineno="1422">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&lt;=<sp/>last);
                </highlight>
            </codeline>
            <codeline lineno="1423">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(last<sp/>&lt;=<sp/>MemberEnd());
                </highlight>
            </codeline>
            <codeline lineno="1424">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1425">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>pos<sp/>=<sp/>MemberBegin()<sp/>+<sp/>(first<sp/>-<sp/>MemberBegin());
                </highlight>
            </codeline>
            <codeline lineno="1426">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(MemberIterator<sp/>itr<sp/>=<sp/>pos;<sp/>itr<sp/>!=<sp/>last;<sp/>
                    ++itr)
                </highlight>
            </codeline>
            <codeline lineno="1427">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>itr-&gt;~Member();
                </highlight>
            </codeline>
            <codeline lineno="1428">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memmove(&amp;*pos,<sp/>&amp;*last,<sp/>static_cast&lt;size_t&gt;(MemberEnd()<sp/>-<sp/>
                    last)<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Member));</highlight>
            </codeline>
            <codeline lineno="1429">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.o.size<sp/>-=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(last<sp/>-<sp/>first);
                </highlight>
            </codeline>
            <codeline lineno="1430">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>pos;
                </highlight>
            </codeline>
            <codeline lineno="1431">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1432">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1434"></codeline>
            <codeline lineno="1438">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EraseMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1439">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>n(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name));
                </highlight>
            </codeline>
            <codeline lineno="1440">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EraseMember(n);
                </highlight>
            </codeline>
            <codeline lineno="1441">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1442">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1443">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1444">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EraseMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EraseMember(<ref refid="class_generic_value" kindref="compound">
                    GenericValue</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">
                    StringRef</ref>(name)));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1445">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1446">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1447">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="1448">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EraseMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>name)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1449">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>m<sp/>=<sp/>FindMember(name);
                </highlight>
            </codeline>
            <codeline lineno="1450">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(m<sp/>!=<sp/>MemberEnd())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1451">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>EraseMember(m);
                </highlight>
            </codeline>
            <codeline lineno="1452">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1453">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1454">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1455">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1456">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1457">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1458">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Object<sp/>GetObject()<sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Object(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1459">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ConstObject<sp/>GetObject()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsObject());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ConstObject(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1460">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1462"></codeline>
            <codeline lineno="1464"></codeline>
            <codeline lineno="1465"></codeline>
            <codeline lineno="1467"></codeline>
            <codeline lineno="1468">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetArray()<sp/>{
                    <sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(<ref
                            refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                            kindref="member">kArrayType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1469">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1471">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>Size()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.a.size;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1472">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1474">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>Capacity()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.a.capacity;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1475">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1477">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Empty()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.a.size<sp/>==<sp/>0;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1478">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1480"></codeline>
            <codeline lineno="1483">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Clear()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1484">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1485">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>e<sp/>=<sp/>
                    GetElementsPointer();
                </highlight>
            </codeline>
            <codeline lineno="1486">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>*
                    <sp/>v<sp/>=<sp/>e;<sp/>v<sp/>!=<sp/>e<sp/>+<sp/>data_.a.size;<sp/>++v)
                </highlight>
            </codeline>
            <codeline lineno="1487">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>v-&gt;~GenericValue();
                </highlight>
            </codeline>
            <codeline lineno="1488">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.a.size<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1489">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1490">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1492"></codeline>
            <codeline lineno="1496">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1497">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                </highlight>
            </codeline>
            <codeline lineno="1498">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(index<sp/>&lt;<sp/>data_.a.size);
                </highlight>
            </codeline>
            <codeline lineno="1499">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>GetElementsPointer()[index];
                </highlight>
            </codeline>
            <codeline lineno="1500">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1501">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>operator[](
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const_cast&lt;</highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(*this)[index];<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1502">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1504"></codeline>
            <codeline lineno="1505">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>Begin()<sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>GetElementsPointer();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1507"></codeline>
            <codeline lineno="1508">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>End()<sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>GetElementsPointer()<sp/>+<sp/>data_.a.size;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1510"></codeline>
            <codeline lineno="1511">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ConstValueIterator<sp/>Begin()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const_cast&lt;</highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(*this).Begin();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1513"></codeline>
            <codeline lineno="1514">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ConstValueIterator<sp/>End()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const_cast&lt;</highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(*this).End();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1515">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1517"></codeline>
            <codeline lineno="1522">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>Reserve(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>newCapacity,<sp/>Allocator<sp/>&amp;allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1523">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                </highlight>
            </codeline>
            <codeline lineno="1524">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(newCapacity<sp/>&gt;<sp/>data_.a.capacity)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1525">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetElementsPointer(reinterpret_cast&lt;GenericValue*&gt;(allocator.Realloc(GetElementsPointer(),
                    <sp/>data_.a.capacity<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>),<sp/>
                    newCapacity<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>))));
                </highlight>
            </codeline>
            <codeline lineno="1526">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.a.capacity<sp/>=<sp/>newCapacity;
                </highlight>
            </codeline>
            <codeline lineno="1527">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1528">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1529">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1530">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1532"></codeline>
            <codeline lineno="1541">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PushBack(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>value,<sp/>Allocator&amp;
                    <sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1542">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                </highlight>
            </codeline>
            <codeline lineno="1543">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(data_.a.size<sp/>&gt;=<sp/>data_.a.capacity)
                </highlight>
            </codeline>
            <codeline lineno="1544">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Reserve(data_.a.capacity<sp/>==<sp/>0<sp/>?<sp/>kDefaultArrayCapacity<sp/>:<sp/>
                    (data_.a.capacity<sp/>+<sp/>(data_.a.capacity<sp/>+<sp/>1)<sp/>/<sp/>2),<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1545">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GetElementsPointer()[data_.a.size++].RawAssign(value);
                </highlight>
            </codeline>
            <codeline lineno="1546">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1547">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1548">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1549">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1550">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PushBack(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;&amp;<sp/>value,<sp/>
                    Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1551">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>PushBack(value,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1552">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1553">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1554">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1556"></codeline>
            <codeline lineno="1564">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>
                    PushBack(StringRefType<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1565">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(*this).template<sp/>PushBack&lt;StringRefType&gt;(value,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1566">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1567">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1569"></codeline>
            <codeline lineno="1585">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1586">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,
                    <sp/>
                    <ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>
                    <sp/>&gt;),<sp/>(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;))
                </highlight>
            </codeline>
            <codeline lineno="1587">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>PushBack(T<sp/>value,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1588">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>
                    <sp/>v(value);
                </highlight>
            </codeline>
            <codeline lineno="1589">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>PushBack(v,<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="1590">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1591">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1593"></codeline>
            <codeline lineno="1596">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>PopBack()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1597">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                </highlight>
            </codeline>
            <codeline lineno="1598">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(!Empty());
                </highlight>
            </codeline>
            <codeline lineno="1599">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>GetElementsPointer()[--data_.a.size].~GenericValue();
                </highlight>
            </codeline>
            <codeline lineno="1600">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1601">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1602">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1604"></codeline>
            <codeline lineno="1610">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>Erase(ConstValueIterator<sp/>pos)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1611">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Erase(pos,<sp/>pos<sp/>+<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="1612">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1613">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1615"></codeline>
            <codeline lineno="1622">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>Erase(ConstValueIterator<sp/>first,<sp/>ConstValueIterator<sp/>last)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1623">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                </highlight>
            </codeline>
            <codeline lineno="1624">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(data_.a.size<sp/>&gt;<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="1625">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(GetElementsPointer()<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="1626">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&gt;=<sp/>Begin());
                </highlight>
            </codeline>
            <codeline lineno="1627">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(first<sp/>&lt;=<sp/>last);
                </highlight>
            </codeline>
            <codeline lineno="1628">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(last<sp/>&lt;=<sp/>End());
                </highlight>
            </codeline>
            <codeline lineno="1629">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>pos<sp/>=<sp/>Begin()<sp/>+<sp/>(first<sp/>-<sp/>Begin());
                </highlight>
            </codeline>
            <codeline lineno="1630">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ValueIterator<sp/>itr<sp/>=<sp/>pos;<sp/>itr<sp/>!=<sp/>last;<sp/>++itr)
                </highlight>
            </codeline>
            <codeline lineno="1631">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>itr-&gt;<ref refid="class_generic_value_1a213ba89ef5ef961a5e655bd8c78ac9f4" kindref="member">
                    ~GenericValue</ref>();
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1632">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memmove(pos,<sp/>last,<sp/>static_cast&lt;size_t&gt;(End()<sp/>-<sp/>last)<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>));
                </highlight>
            </codeline>
            <codeline lineno="1633">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.a.size<sp/>-=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(last<sp/>-<sp/>first);
                </highlight>
            </codeline>
            <codeline lineno="1634">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>pos;
                </highlight>
            </codeline>
            <codeline lineno="1635">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1636">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1637">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Array<sp/>GetArray()<sp/>{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Array(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1638">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ConstArray<sp/>GetArray()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsArray());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ConstArray(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1639">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1641"></codeline>
            <codeline lineno="1643"></codeline>
            <codeline lineno="1644">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1645">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>GetInt()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(data_.f.flags<sp/>&amp;<sp/>kIntFlag);
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.n.i.i;
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1646">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>GetUint()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(data_.f.flags<sp/>&amp;<sp/>kUintFlag);
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.n.u.u;
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1647">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>int64_t<sp/>GetInt64()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(data_.f.flags<sp/>&amp;<sp/>kInt64Flag);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.n.i64;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1648">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>GetUint64()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(data_.f.flags<sp/>&amp;<sp/>kUint64Flag);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.n.u64;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1649">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1651"></codeline>
            <codeline lineno="1653">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>GetDouble()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1654">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsNumber());
                </highlight>
            </codeline>
            <codeline lineno="1655">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((data_.f.flags<sp/>&amp;<sp/>kDoubleFlag)<sp/>!=<sp/>0)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.n.d;
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>exact<sp/>type,<sp/>no<sp/>conversion.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1656">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((data_.f.flags<sp/>&amp;<sp/>kIntFlag)<sp/>!=<sp/>0)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.n.i.i;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>int<sp/>-&gt;<sp/>double
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1657">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((data_.f.flags<sp/>&amp;<sp/>kUintFlag)<sp/>!=<sp/>0)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>data_.n.u.u;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>unsigned<sp/>-&gt;<sp/>double
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1658">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((data_.f.flags<sp/>&amp;<sp/>kInt64Flag)<sp/>!=<sp/>0)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(data_.n.i64);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>int64_t<sp/>-&gt;<sp/>double<sp/>(may<sp/>lose<sp/>precision)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1659">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>((data_.f.flags<sp/>&amp;<sp/>kUint64Flag)<sp/>!=<sp/>
                    0);
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(data_.n.u64);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>uint64_t<sp/>-&gt;<sp/>double<sp/>(may<sp/>lose<sp/>precision)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1660">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1661">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1663"></codeline>
            <codeline lineno="1665">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>GetFloat()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1666">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(GetDouble());</highlight>
            </codeline>
            <codeline lineno="1667">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1668">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1669">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetInt(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(i);
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1670">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetUint(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(u);
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1671">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetInt64(int64_t
                    <sp/>i64)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(i64);
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1672">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetUint64(uint64_t
                    <sp/>u64)
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(u64);
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1673">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetDouble(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(d);
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1674">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetFloat(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>f)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{<sp/>this-&gt;~<ref refid="class_generic_value" kindref="compound">GenericValue</ref>();
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">)
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>(f);
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1675">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1677"></codeline>
            <codeline lineno="1679"></codeline>
            <codeline lineno="1680">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1681">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>GetString()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsString());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(data_.f.flags<sp/>&amp;<sp/>kInlineStrFlag)<sp/>?<sp/>data_.ss.str<sp/>:
                    <sp/>GetStringPointer();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1682">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1684"></codeline>
            <codeline lineno="1686">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>GetStringLength()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsString());
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>((data_.f.flags<sp/>&amp;<sp/>kInlineStrFlag)<sp/>?<sp/>
                    (data_.ss.GetLength())<sp/>:<sp/>data_.s.length);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1687">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1689"></codeline>
            <codeline lineno="1696">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>s,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>SetString(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5"
                                                              kindref="member">StringRef</ref>(s,<sp/>length));<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1697">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1699"></codeline>
            <codeline lineno="1703">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>
                    SetString(StringRefType<sp/>s)<sp/>{<sp/>this-&gt;~<ref refid="class_generic_value"
                                                                            kindref="compound">GenericValue</ref>();
                    <sp/>SetStringRaw(s);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1704">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1706"></codeline>
            <codeline lineno="1713">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>s,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,<sp/>Allocator&amp;<sp/>allocator)<sp/>{<sp/>this-&gt;~<ref refid="class_generic_value"
                                                                                            kindref="compound">
                        GenericValue</ref>();<sp/>SetStringRaw(<ref
                            refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(s,
                    <sp/>length),<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1714">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1716"></codeline>
            <codeline lineno="1721">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>s,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>SetString(s,<sp/>internal::StrLen(s),<sp/>allocator);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1722">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1723">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1724">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1731">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>SetString(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>s,<sp/>Allocator&amp;<sp/>allocator)
                    <sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>SetString(s.data(),
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    (s.size()),<sp/>allocator);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1732">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1733">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1735"></codeline>
            <codeline lineno="1737"></codeline>
            <codeline lineno="1738"></codeline>
            <codeline lineno="1740"></codeline>
            <codeline lineno="1743">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1744">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Is()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Is</ref>
                    (*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1745">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1746">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1747">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>T<sp/>Get()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Get</ref>
                    (*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1748">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1749">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1750">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>T<sp/>Get()<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Get</ref>
                    (*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1751">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1752">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1753">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType&amp;<sp/>Set(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>T&amp;<sp/>data)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Set</ref>
                    (*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">,<sp/>data);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1754">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1755">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal">&lt;</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                </highlight>
            </codeline>
            <codeline lineno="1756">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType&amp;<sp/>Set(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>T&amp;<sp/>data,<sp/>AllocatorType&amp;<sp/>allocator)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="structinternal_1_1_type_helper" kindref="compound">internal::TypeHelper&lt;ValueType, T&gt;::Set</ref>
                    (*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">,<sp/>data,<sp/>allocator);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1757">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1759"></codeline>
            <codeline lineno="1761"></codeline>
            <codeline lineno="1767">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Handler&gt;
                </highlight>
            </codeline>
            <codeline lineno="1768">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Accept(Handler&amp;<sp/>handler)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1769">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal">(GetType())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1770">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087"
                         kindref="member">kNullType</ref>:
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.Null();
                </highlight>
            </codeline>
            <codeline lineno="1771">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54"
                         kindref="member">kFalseType</ref>:
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.Bool(
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="1772">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6"
                         kindref="member">kTrueType</ref>:
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.Bool(
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="1773">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1774">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                         kindref="member">kObjectType</ref>:
                </highlight>
            </codeline>
            <codeline lineno="1775">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                        kindref="member">RAPIDJSON_UNLIKELY</ref>(!handler.StartObject()))
                </highlight>
            </codeline>
            <codeline lineno="1776">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1777">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(ConstMemberIterator<sp/>m<sp/>=<sp/>MemberBegin();<sp/>m<sp/>!=<sp/>
                    MemberEnd();<sp/>++m)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1778">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(m-&gt;name.IsString());
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>User<sp/>may<sp/>change<sp/>the<sp/>type<sp/>of<sp/>name<sp/>by<sp/>
                    MemberIterator.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1779">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                        kindref="member">RAPIDJSON_UNLIKELY</ref>(!handler.Key(m-&gt;name.GetString(),<sp/>m-&gt;name.GetStringLength(),
                    <sp/>(m-&gt;name.data_.f.flags<sp/>&amp;<sp/>kCopyFlag)<sp/>!=<sp/>0)))
                </highlight>
            </codeline>
            <codeline lineno="1780">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1781">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                        kindref="member">RAPIDJSON_UNLIKELY</ref>(!m-&gt;value.Accept(handler)))
                </highlight>
            </codeline>
            <codeline lineno="1782">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1783">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1784">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.EndObject(data_.o.size);
                </highlight>
            </codeline>
            <codeline lineno="1785">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1786">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                         kindref="member">kArrayType</ref>:
                </highlight>
            </codeline>
            <codeline lineno="1787">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                        kindref="member">RAPIDJSON_UNLIKELY</ref>(!handler.StartArray()))
                </highlight>
            </codeline>
            <codeline lineno="1788">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1789">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>v<sp/>=<sp/>Begin();
                    <sp/>v<sp/>!=<sp/>End();<sp/>++v)
                </highlight>
            </codeline>
            <codeline lineno="1790">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref
                        refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1ga6a2b1695c13e77ae425e3cbac980ccb5"
                        kindref="member">RAPIDJSON_UNLIKELY</ref>(!v-&gt;Accept(handler)))
                </highlight>
            </codeline>
            <codeline lineno="1791">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1792">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.EndArray(data_.a.size);
                </highlight>
            </codeline>
            <codeline lineno="1793">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1794">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                         kindref="member">kStringType</ref>:
                </highlight>
            </codeline>
            <codeline lineno="1795">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.String(GetString(),<sp/>GetStringLength(),<sp/>(data_.f.flags
                    <sp/>&amp;<sp/>kCopyFlag)<sp/>!=<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="1796">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1797">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">default</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="1798">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(GetType()<sp/>==
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                         kindref="member">kNumberType</ref>);
                </highlight>
            </codeline>
            <codeline lineno="1799">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(IsDouble())
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.Double(data_.n.d);
                </highlight>
            </codeline>
            <codeline lineno="1800">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(IsInt())
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.Int(data_.n.i.i);
                </highlight>
            </codeline>
            <codeline lineno="1801">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(IsUint())
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.Uint(data_.n.u.u);
                </highlight>
            </codeline>
            <codeline lineno="1802">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(IsInt64())
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.Int64(data_.n.i64);
                </highlight>
            </codeline>
            <codeline lineno="1803">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>handler.Uint64(data_.n.u64);
                </highlight>
            </codeline>
            <codeline lineno="1804">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1805">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1806">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1807">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="1808">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1809">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_document" kindref="compound">GenericDocument</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1810">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1811">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">enum</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1812">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kBoolFlag
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>=<sp/>0x0008,
                </highlight>
            </codeline>
            <codeline lineno="1813">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNumberFlag
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>=<sp/>0x0010,
                </highlight>
            </codeline>
            <codeline lineno="1814">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kIntFlag
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>=<sp/>0x0020,
                </highlight>
            </codeline>
            <codeline lineno="1815">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kUintFlag
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>=<sp/>0x0040,
                </highlight>
            </codeline>
            <codeline lineno="1816">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kInt64Flag
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>=<sp/>0x0080,
                </highlight>
            </codeline>
            <codeline lineno="1817">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kUint64Flag
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>=<sp/>0x0100,
                </highlight>
            </codeline>
            <codeline lineno="1818">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kDoubleFlag
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>=<sp/>0x0200,
                </highlight>
            </codeline>
            <codeline lineno="1819">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kStringFlag
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>=<sp/>0x0400,
                </highlight>
            </codeline>
            <codeline lineno="1820">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kCopyFlag
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>=<sp/>0x0800,
                </highlight>
            </codeline>
            <codeline lineno="1821">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kInlineStrFlag
                    <sp/>
                    <sp/>=<sp/>0x1000,
                </highlight>
            </codeline>
            <codeline lineno="1822">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1823">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Initial<sp/>flags<sp/>of<sp/>different<sp/>types.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1824">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNullFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7aa09befbfb4f2e1409f237817979d8087"
                         kindref="member">kNullType</ref>,
                </highlight>
            </codeline>
            <codeline lineno="1825">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kTrueFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a209434e5edd66630011ca19d710d7cd6"
                         kindref="member">kTrueType
                    </ref>
                    <sp/>|<sp/>kBoolFlag,
                </highlight>
            </codeline>
            <codeline lineno="1826">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kFalseFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a062b8296274a258acf0e142868684c54"
                         kindref="member">kFalseType
                    </ref>
                    <sp/>|<sp/>kBoolFlag,
                </highlight>
            </codeline>
            <codeline lineno="1827">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNumberIntFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                         kindref="member">kNumberType
                    </ref>
                    <sp/>|<sp/>kNumberFlag<sp/>|<sp/>kIntFlag<sp/>|<sp/>kInt64Flag,
                </highlight>
            </codeline>
            <codeline lineno="1828">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNumberUintFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                         kindref="member">kNumberType
                    </ref>
                    <sp/>|<sp/>kNumberFlag<sp/>|<sp/>kUintFlag<sp/>|<sp/>kUint64Flag<sp/>|<sp/>kInt64Flag,
                </highlight>
            </codeline>
            <codeline lineno="1829">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNumberInt64Flag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                         kindref="member">kNumberType
                    </ref>
                    <sp/>|<sp/>kNumberFlag<sp/>|<sp/>kInt64Flag,
                </highlight>
            </codeline>
            <codeline lineno="1830">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNumberUint64Flag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                         kindref="member">kNumberType
                    </ref>
                    <sp/>|<sp/>kNumberFlag<sp/>|<sp/>kUint64Flag,
                </highlight>
            </codeline>
            <codeline lineno="1831">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNumberDoubleFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                         kindref="member">kNumberType
                    </ref>
                    <sp/>|<sp/>kNumberFlag<sp/>|<sp/>kDoubleFlag,
                </highlight>
            </codeline>
            <codeline lineno="1832">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kNumberAnyFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7afc9f813b7aaf71911bdae20a86b2702d"
                         kindref="member">kNumberType
                    </ref>
                    <sp/>|<sp/>kNumberFlag<sp/>|<sp/>kIntFlag<sp/>|<sp/>kInt64Flag<sp/>|<sp/>kUintFlag<sp/>|<sp/>
                    kUint64Flag<sp/>|<sp/>kDoubleFlag,
                </highlight>
            </codeline>
            <codeline lineno="1833">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kConstStringFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                         kindref="member">kStringType
                    </ref>
                    <sp/>|<sp/>kStringFlag,
                </highlight>
            </codeline>
            <codeline lineno="1834">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kCopyStringFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                         kindref="member">kStringType
                    </ref>
                    <sp/>|<sp/>kStringFlag<sp/>|<sp/>kCopyFlag,
                </highlight>
            </codeline>
            <codeline lineno="1835">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kShortStringFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                         kindref="member">kStringType
                    </ref>
                    <sp/>|<sp/>kStringFlag<sp/>|<sp/>kCopyFlag<sp/>|<sp/>kInlineStrFlag,
                </highlight>
            </codeline>
            <codeline lineno="1836">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kObjectFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                         kindref="member">kObjectType</ref>,
                </highlight>
            </codeline>
            <codeline lineno="1837">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kArrayFlag<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                         kindref="member">kArrayType</ref>,
                </highlight>
            </codeline>
            <codeline lineno="1838">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1839">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>kTypeMask<sp/>=<sp/>0x07
                </highlight>
            </codeline>
            <codeline lineno="1840">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="1841">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1842">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>kDefaultArrayCapacity<sp/>=<sp/>16;
                </highlight>
            </codeline>
            <codeline lineno="1843">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>kDefaultObjectCapacity<sp/>=<sp/>16;
                </highlight>
            </codeline>
            <codeline lineno="1844">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1845" refid="struct_generic_value_1_1_flag" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_value_1_1_flag" kindref="compound">Flag</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1846">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_48BITPOINTER_OPTIMIZATION
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1847">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>payload[
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5"
                                                kindref="member">SizeType</ref>)<sp/>*<sp/>2<sp/>+<sp/>6];
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>2<sp/>x<sp/>SizeType<sp/>+<sp/>lower<sp/>48-bit<sp/>pointer
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1848">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#elif<sp/>RAPIDJSON_64BIT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1849">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>payload[
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5"
                                                kindref="member">SizeType</ref>)<sp/>*<sp/>2<sp/>+
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*)<sp/>+<sp/>6];
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>6<sp/>padding<sp/>bytes
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1850">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1851">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>payload[
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5"
                                                kindref="member">SizeType</ref>)<sp/>*<sp/>2<sp/>+
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">*)<sp/>+<sp/>2];
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>2<sp/>padding<sp/>bytes
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1852">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1853">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint16_t<sp/>flags;
                </highlight>
            </codeline>
            <codeline lineno="1854">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="1855">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1856" refid="struct_generic_value_1_1_string" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1857">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length;
                </highlight>
            </codeline>
            <codeline lineno="1858" refid="struct_generic_value_1_1_string_1a73631052aeb72fbabb6eaab0175f858e"
                      refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>
                    <ref refid="struct_generic_value_1_1_string_1a73631052aeb72fbabb6eaab0175f858e" kindref="member">
                        hashcode</ref>;
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="1859">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str;
                </highlight>
            </codeline>
            <codeline lineno="1860">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>
                    64-bit<sp/>mode
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1861">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1862">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>implementation<sp/>detail:<sp/>ShortString<sp/>can<sp/>represent<sp/>
                    zero-terminated<sp/>strings<sp/>up<sp/>to<sp/>MaxSize<sp/>chars
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1863">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>(excluding<sp/>the<sp/>terminating<sp/>zero)<sp/>and<sp/>store<sp/>a
                    <sp/>value<sp/>to<sp/>determine<sp/>the<sp/>length<sp/>of<sp/>the<sp/>contained
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1864">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>string<sp/>in<sp/>the<sp/>last<sp/>character<sp/>str[LenPos]<sp/>by
                    <sp/>storing<sp/>&quot;MaxSize<sp/>-<sp/>length&quot;<sp/>there.<sp/>If<sp/>the<sp/>string
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1865">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>to<sp/>store<sp/>has<sp/>the<sp/>maximal<sp/>length<sp/>of<sp/>MaxSize
                    <sp/>then<sp/>str[LenPos]<sp/>will<sp/>be<sp/>0<sp/>and<sp/>therefore<sp/>act<sp/>as
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1866">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>the<sp/>string<sp/>terminator<sp/>as<sp/>well.<sp/>For<sp/>getting
                    <sp/>the<sp/>string<sp/>length<sp/>back<sp/>from<sp/>that<sp/>value<sp/>just<sp/>use
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1867">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>&quot;MaxSize<sp/>-<sp/>str[LenPos]&quot;.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1868">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>This<sp/>allows<sp/>to<sp/>store<sp/>13-chars<sp/>strings<sp/>in<sp/>
                    32-bit<sp/>mode,<sp/>21-chars<sp/>strings<sp/>in<sp/>64-bit<sp/>mode,
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1869">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>13-chars<sp/>strings<sp/>for<sp/>RAPIDJSON_48BITPOINTER_OPTIMIZATION=1
                    <sp/>inline<sp/>(for<sp/>`UTF8`-encoded<sp/>strings).
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1870" refid="struct_generic_value_1_1_short_string" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_value_1_1_short_string" kindref="compound">ShortString</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1871">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">enum</highlight>
                <highlight class="normal"><sp/>{<sp/>MaxChars<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal"><ref refid="struct_generic_value_1_1_flag" kindref="compound">Flag</ref>*
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(0)-&gt;payload)<sp/>/
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Ch),<sp/>MaxSize<sp/>=<sp/>MaxChars<sp/>-<sp/>1,<sp/>LenPos<sp/>=<sp/>MaxSize
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="1872">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Ch<sp/>str[MaxChars];
                </highlight>
            </codeline>
            <codeline lineno="1873">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1874">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Usable(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(MaxSize<sp/>&gt;=<sp/>len);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1875">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetLength(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len)<sp/>{<sp/>str[LenPos]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">Ch</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(MaxSize<sp/>-
                    <sp/>
                    <sp/>len);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1876">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>GetLength()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(MaxSize<sp/>-
                    <sp/>
                    <sp/>str[LenPos]);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1877">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>at<sp/>most<sp/>as<sp/>many<sp/>bytes<sp/>as<sp/>&quot;String&quot;
                    <sp/>above<sp/>=&gt;<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit
                    <sp/>mode
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1878">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1879">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>By<sp/>using<sp/>proper<sp/>binary<sp/>layout,<sp/>retrieval<sp/>of
                    <sp/>different<sp/>integer<sp/>types<sp/>do<sp/>not<sp/>need<sp/>conversions.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1880" refid="union_generic_value_1_1_number" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">union
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="union_generic_value_1_1_number" kindref="compound">Number</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1881">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_ENDIAN<sp/>==<sp/>RAPIDJSON_LITTLEENDIAN
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1882" refid="struct_generic_value_1_1_number_1_1_i" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_value_1_1_number_1_1_i" kindref="compound">I</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1883">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i;
                </highlight>
            </codeline>
            <codeline lineno="1884">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>padding[4];
                </highlight>
            </codeline>
            <codeline lineno="1885">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}i;
                </highlight>
            </codeline>
            <codeline lineno="1886" refid="struct_generic_value_1_1_number_1_1_u" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_value_1_1_number_1_1_u" kindref="compound">U</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1887">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u;
                </highlight>
            </codeline>
            <codeline lineno="1888">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>padding2[4];
                </highlight>
            </codeline>
            <codeline lineno="1889">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}u;
                </highlight>
            </codeline>
            <codeline lineno="1890">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1891">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_value_1_1_number_1_1_i" kindref="compound">I</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1892">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>padding[4];
                </highlight>
            </codeline>
            <codeline lineno="1893">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i;
                </highlight>
            </codeline>
            <codeline lineno="1894">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}i;
                </highlight>
            </codeline>
            <codeline lineno="1895">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_value_1_1_number_1_1_u" kindref="compound">U</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1896">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>padding2[4];
                </highlight>
            </codeline>
            <codeline lineno="1897">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>u;
                </highlight>
            </codeline>
            <codeline lineno="1898">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}u;
                </highlight>
            </codeline>
            <codeline lineno="1899">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1900">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>int64_t<sp/>i64;
                </highlight>
            </codeline>
            <codeline lineno="1901">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>u64;
                </highlight>
            </codeline>
            <codeline lineno="1902">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d;
                </highlight>
            </codeline>
            <codeline lineno="1903">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>8<sp/>bytes
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1904">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1905" refid="struct_generic_value_1_1_object_data" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_value_1_1_object_data" kindref="compound">ObjectData</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1906">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>size;
                </highlight>
            </codeline>
            <codeline lineno="1907">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>capacity;
                </highlight>
            </codeline>
            <codeline lineno="1908">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Member*<sp/>members;
                </highlight>
            </codeline>
            <codeline lineno="1909">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>
                    64-bit<sp/>mode
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1910">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1911" refid="struct_generic_value_1_1_array_data" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="struct_generic_value_1_1_array_data" kindref="compound">ArrayData</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1912">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>size;
                </highlight>
            </codeline>
            <codeline lineno="1913">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>capacity;
                </highlight>
            </codeline>
            <codeline lineno="1914">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>elements;
                </highlight>
            </codeline>
            <codeline lineno="1915">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>12<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>
                    64-bit<sp/>mode
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1916">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1917" refid="union_generic_value_1_1_data" refkind="compound">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">union
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="union_generic_value_1_1_data" kindref="compound">Data</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1918">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref>
                    <sp/>s;
                </highlight>
            </codeline>
            <codeline lineno="1919">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_value_1_1_short_string" kindref="compound">ShortString</ref>
                    <sp/>ss;
                </highlight>
            </codeline>
            <codeline lineno="1920">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="union_generic_value_1_1_number" kindref="compound">Number</ref>
                    <sp/>n;
                </highlight>
            </codeline>
            <codeline lineno="1921">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_value_1_1_object_data" kindref="compound">ObjectData</ref>
                    <sp/>o;
                </highlight>
            </codeline>
            <codeline lineno="1922">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_value_1_1_array_data" kindref="compound">ArrayData</ref>
                    <sp/>a;
                </highlight>
            </codeline>
            <codeline lineno="1923">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_value_1_1_flag" kindref="compound">Flag</ref>
                    <sp/>f;
                </highlight>
            </codeline>
            <codeline lineno="1924">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>16<sp/>bytes<sp/>in<sp/>32-bit<sp/>mode,<sp/>24<sp/>bytes<sp/>in<sp/>
                    64-bit<sp/>mode,<sp/>16<sp/>bytes<sp/>in<sp/>64-bit<sp/>with<sp/>RAPIDJSON_48BITPOINTER_OPTIMIZATION
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1925">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1926">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>GetStringPointer()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_GETPOINTER(Ch,<sp/>data_.s.str);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1927">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>SetStringPointer(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_SETPOINTER(Ch,<sp/>data_.s.str,<sp/>str);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1928">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>GetElementsPointer()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_GETPOINTER(<ref refid="class_generic_value" kindref="compound">
                    GenericValue</ref>,<sp/>data_.a.elements);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1929">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>SetElementsPointer(<ref
                        refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>elements)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_SETPOINTER(<ref refid="class_generic_value" kindref="compound">
                    GenericValue</ref>,<sp/>data_.a.elements,<sp/>elements);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1930">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE<sp/>Member*<sp/>GetMembersPointer()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_GETPOINTER(Member,<sp/>data_.o.members);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1931">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RAPIDJSON_FORCEINLINE<sp/>Member*<sp/>SetMembersPointer(Member*<sp/>members)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>RAPIDJSON_SETPOINTER(Member,<sp/>data_.o.members,<sp/>members);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1932">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1933">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Initialize<sp/>this<sp/>value<sp/>as<sp/>array<sp/>with<sp/>initial
                    <sp/>data,<sp/>without<sp/>calling<sp/>destructor.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1934">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>SetArrayRaw(<ref refid="class_generic_value" kindref="compound">
                    GenericValue</ref>*<sp/>values,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>count,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1935">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>kArrayFlag;
                </highlight>
            </codeline>
            <codeline lineno="1936">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(count)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1937">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>*<sp/>e<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>*
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(allocator.Malloc(count<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>)));
                </highlight>
            </codeline>
            <codeline lineno="1938">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetElementsPointer(e);
                </highlight>
            </codeline>
            <codeline lineno="1939">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memcpy(e,<sp/>values,<sp/>count<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(<ref refid="class_generic_value" kindref="compound">GenericValue</ref>));
                </highlight>
            </codeline>
            <codeline lineno="1940">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1941">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1942">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetElementsPointer(0);
                </highlight>
            </codeline>
            <codeline lineno="1943">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.a.size<sp/>=<sp/>data_.a.capacity<sp/>=<sp/>count;
                </highlight>
            </codeline>
            <codeline lineno="1944">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1945">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1947" refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" kindref="member">
                        SetObjectRaw</ref>(Member*<sp/>members,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>count,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1948">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>kObjectFlag;
                </highlight>
            </codeline>
            <codeline lineno="1949">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(count)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1950">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Member*<sp/>m<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">Member*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(allocator.Malloc(count<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Member)));</highlight>
            </codeline>
            <codeline lineno="1951">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetMembersPointer(m);
                </highlight>
            </codeline>
            <codeline lineno="1952">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memcpy(m,<sp/>members,<sp/>count<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Member));</highlight>
            </codeline>
            <codeline lineno="1953">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1954">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1955">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetMembersPointer(0);
                </highlight>
            </codeline>
            <codeline lineno="1956">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.o.size<sp/>=<sp/>data_.o.capacity<sp/>=<sp/>count;
                </highlight>
            </codeline>
            <codeline lineno="1957">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1958">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1960" refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">
                        SetStringRaw</ref>(StringRefType<sp/>s)<sp/>RAPIDJSON_NOEXCEPT<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1961">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>kConstStringFlag;
                </highlight>
            </codeline>
            <codeline lineno="1962">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetStringPointer(s);
                </highlight>
            </codeline>
            <codeline lineno="1963">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.s.length<sp/>=<sp/>s.length;
                </highlight>
            </codeline>
            <codeline lineno="1964">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1965">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1967" refid="class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1ad3d91db36dfdbfc1af40a79aae07723c" kindref="member">
                        SetStringRaw</ref>(StringRefType<sp/>s,<sp/>Allocator&amp;<sp/>allocator)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1968">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Ch*<sp/>str<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="1969">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(ShortString::Usable(s.<ref
                        refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">
                    length</ref>))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1970">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>kShortStringFlag;
                </highlight>
            </codeline>
            <codeline lineno="1971">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.ss.SetLength(s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe"
                                                   kindref="member">length</ref>);
                </highlight>
            </codeline>
            <codeline lineno="1972">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>str<sp/>=<sp/>data_.ss.str;
                </highlight>
            </codeline>
            <codeline lineno="1973">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1974">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>kCopyStringFlag;
                </highlight>
            </codeline>
            <codeline lineno="1975">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.s.length<sp/>=<sp/>s.<ref
                        refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">
                    length</ref>;
                </highlight>
            </codeline>
            <codeline lineno="1976">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>str<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">static_cast&lt;</highlight>
                <highlight class="normal">Ch<sp/>*
                </highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(allocator.Malloc((s.
                    <ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length
                    </ref>
                    <sp/>+<sp/>1)<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Ch)));</highlight>
            </codeline>
            <codeline lineno="1977">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SetStringPointer(str);
                </highlight>
            </codeline>
            <codeline lineno="1978">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1979">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::memcpy(str,<sp/>s,<sp/>s.
                    <ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe" kindref="member">length
                    </ref>
                    <sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Ch));</highlight>
            </codeline>
            <codeline lineno="1980">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>str[s.<ref refid="struct_generic_string_ref_1a4a96d618744ad73f766a1551b1d517fe"
                                    kindref="member">length</ref>]<sp/>=
                    <sp/>
                </highlight>
                <highlight class="charliteral">&apos;\0&apos;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="1981">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1982">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1984" refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>
                    (<ref refid="class_generic_value" kindref="compound">GenericValue</ref>&amp;<sp/>rhs)<sp/>
                    RAPIDJSON_NOEXCEPT<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="1985">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_<sp/>=<sp/>rhs.data_;
                </highlight>
            </codeline>
            <codeline lineno="1986">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>data_.f.flags<sp/>=<sp/>rhs.data_.f.flags;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1987">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.data_.f.flags<sp/>=<sp/>kNullFlag;
                </highlight>
            </codeline>
            <codeline lineno="1988">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1989">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1990">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="1991">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StringEqual(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding,
                        SourceAllocator&gt;</ref>&amp;<sp/>rhs)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="1992">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(IsString());
                </highlight>
            </codeline>
            <codeline lineno="1993">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(rhs.IsString());
                </highlight>
            </codeline>
            <codeline lineno="1994">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1995">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len1<sp/>=<sp/>GetStringLength();
                </highlight>
            </codeline>
            <codeline lineno="1996">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>len2<sp/>=<sp/>rhs.GetStringLength();
                </highlight>
            </codeline>
            <codeline lineno="1997">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(len1<sp/>!=<sp/>len2)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="1998">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="1999">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>str1<sp/>=<sp/>GetString();
                </highlight>
            </codeline>
            <codeline lineno="2000">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>str2<sp/>=<sp/>rhs.GetString();
                </highlight>
            </codeline>
            <codeline lineno="2001">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(str1<sp/>==<sp/>str2)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>fast<sp/>path<sp/>for<sp/>constant<sp/>string
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2002">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2003">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>(std::memcmp(str1,<sp/>str2,
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(Ch)<sp/>*<sp/>len1)<sp/>==<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="2004">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2005">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2006">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Data<sp/>data_;
                </highlight>
            </codeline>
            <codeline lineno="2007">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="2008">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2010" refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" refkind="member">
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;UTF8&lt;&gt;</ref>
                    <sp/>&gt;
                    <sp/>
                    <ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">Value</ref>;
                </highlight>
            </codeline>
            <codeline lineno="2011">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2013">
                <highlight class="comment">//<sp/>GenericDocument
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2014">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2016"></codeline>
            <codeline lineno="2023">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator<sp/>=<sp/>MemoryPoolAllocator&lt;&gt;,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>StackAllocator<sp/>=<sp/>CrtAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="2024">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>
                    <sp/>:
                    <sp/>
                </highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt;Encoding,<sp/>Allocator&gt;
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2025">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2026" refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding::Ch
                    <sp/>
                    <ref refid="class_generic_document_1a6f5b0b7b6626508d094ae67490269700" kindref="member">Ch</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2027" refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;Encoding, Allocator&gt;</ref>
                    <sp/>
                    <ref refid="class_generic_document_1a8936205dc215dda029060d7e835e0549" kindref="member">
                        ValueType</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2028" refid="class_generic_document_1a35155b912da66ced38d22e2551364c57" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>Allocator
                    <sp/>
                    <ref refid="class_generic_document_1a35155b912da66ced38d22e2551364c57" kindref="member">
                        AllocatorType</ref>;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2029">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2031"></codeline>
            <codeline lineno="2037" refid="class_generic_document_1a3da21e72ec8f26b9da77d86cc1d41cdd" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_document_1a3da21e72ec8f26b9da77d86cc1d41cdd" kindref="member">
                        GenericDocument</ref>(
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref>
                    <sp/>type,<sp/>Allocator*<sp/>allocator<sp/>=<sp/>0,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>stackCapacity<sp/>=<sp/>kDefaultStackCapacity,<sp/>StackAllocator*<sp/>
                    stackAllocator<sp/>=<sp/>0)<sp/>:
                </highlight>
            </codeline>
            <codeline lineno="2038">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue</ref>&lt;Encoding,<sp/>Allocator&gt;(type),
                    <sp/>
                    <sp/>allocator_(allocator),<sp/>ownAllocator_(0),<sp/>stack_(stackAllocator,<sp/>stackCapacity),
                    <sp/>parseResult_()
                </highlight>
            </codeline>
            <codeline lineno="2039">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2040">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!allocator_)
                </highlight>
            </codeline>
            <codeline lineno="2041">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownAllocator_<sp/>=<sp/>allocator_<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1ab9e102fa2f1a0ae4914d4dac21f690a2" kindref="member">RAPIDJSON_NEW</ref>
                    (Allocator());
                </highlight>
            </codeline>
            <codeline lineno="2042">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2043">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2045"></codeline>
            <codeline lineno="2050" refid="class_generic_document_1a6b1c313ad538cafc4d23d4bd5f97178c" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document_1a6b1c313ad538cafc4d23d4bd5f97178c" kindref="member">
                        GenericDocument</ref>(Allocator*<sp/>allocator<sp/>=<sp/>0,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>stackCapacity<sp/>=<sp/>kDefaultStackCapacity,<sp/>StackAllocator*<sp/>
                    stackAllocator<sp/>=<sp/>0)<sp/>:
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2051">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>allocator_(allocator),<sp/>ownAllocator_(0),<sp/>stack_(stackAllocator,<sp/>stackCapacity),
                    <sp/>parseResult_()
                </highlight>
            </codeline>
            <codeline lineno="2052">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2053">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!allocator_)
                </highlight>
            </codeline>
            <codeline lineno="2054">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownAllocator_<sp/>=<sp/>allocator_<sp/>=
                    <sp/>
                    <ref refid="rapidjson_8h_1ab9e102fa2f1a0ae4914d4dac21f690a2" kindref="member">RAPIDJSON_NEW</ref>
                    (Allocator());
                </highlight>
            </codeline>
            <codeline lineno="2055">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2056">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2057">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2058">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>(<ref
                        refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;&amp;<sp/>rhs)<sp/>
                    RAPIDJSON_NOEXCEPT
                </highlight>
            </codeline>
            <codeline lineno="2060">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>:<sp/>ValueType(std::forward&lt;ValueType&gt;(rhs)),
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>explicit<sp/>cast<sp/>to<sp/>avoid<sp/>prohibited<sp/>move<sp/>from
                    <sp/>Document
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2061">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>allocator_(rhs.allocator_),
                </highlight>
            </codeline>
            <codeline lineno="2062">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownAllocator_(rhs.ownAllocator_),
                </highlight>
            </codeline>
            <codeline lineno="2063">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stack_(std::move(rhs.stack_)),
                </highlight>
            </codeline>
            <codeline lineno="2064">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>parseResult_(rhs.parseResult_)
                </highlight>
            </codeline>
            <codeline lineno="2065">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2066">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.allocator_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="2067">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.ownAllocator_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="2068">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.parseResult_<sp/>=
                    <sp/>
                    <ref refid="struct_parse_result" kindref="compound">ParseResult</ref>();
                </highlight>
            </codeline>
            <codeline lineno="2069">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2070">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2071">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2072">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2073">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Destroy();
                </highlight>
            </codeline>
            <codeline lineno="2074">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2075">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2076">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2077">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>operator=(<ref
                        refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;&amp;<sp/>rhs)<sp/>
                    RAPIDJSON_NOEXCEPT
                </highlight>
            </codeline>
            <codeline lineno="2079">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2080">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>The<sp/>cast<sp/>to<sp/>ValueType<sp/>is<sp/>necessary<sp/>here,<sp/>
                    because<sp/>otherwise<sp/>it<sp/>would
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2081">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>attempt<sp/>to<sp/>call<sp/>GenericValue&apos;s<sp/>templated<sp/>
                    assignment<sp/>operator.
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2082">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType::operator=(std::forward&lt;ValueType&gt;(rhs));
                </highlight>
            </codeline>
            <codeline lineno="2083">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2084">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Calling<sp/>the<sp/>destructor<sp/>here<sp/>would<sp/>prematurely<sp/>
                    call<sp/>stack_&apos;s<sp/>destructor
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2085">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Destroy();
                </highlight>
            </codeline>
            <codeline lineno="2086">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2087">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>allocator_<sp/>=<sp/>rhs.allocator_;
                </highlight>
            </codeline>
            <codeline lineno="2088">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ownAllocator_<sp/>=<sp/>rhs.ownAllocator_;
                </highlight>
            </codeline>
            <codeline lineno="2089">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stack_<sp/>=<sp/>std::move(rhs.stack_);
                </highlight>
            </codeline>
            <codeline lineno="2090">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>parseResult_<sp/>=<sp/>rhs.parseResult_;
                </highlight>
            </codeline>
            <codeline lineno="2091">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2092">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.allocator_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="2093">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.ownAllocator_<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="2094">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.parseResult_<sp/>=
                    <sp/>
                    <ref refid="struct_parse_result" kindref="compound">ParseResult</ref>();
                </highlight>
            </codeline>
            <codeline lineno="2095">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2096">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2097">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2098">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2099">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2101"></codeline>
            <codeline lineno="2106" refid="class_generic_document_1a6290e1290fad74177625af5938c0c58f" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1a6290e1290fad74177625af5938c0c58f" kindref="member">Swap</ref>
                    (<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>rhs)<sp/>
                    RAPIDJSON_NOEXCEPT<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2107">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType::Swap(rhs);
                </highlight>
            </codeline>
            <codeline lineno="2108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stack_.Swap(rhs.stack_);
                </highlight>
            </codeline>
            <codeline lineno="2109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>internal::Swap(allocator_,<sp/>rhs.allocator_);
                </highlight>
            </codeline>
            <codeline lineno="2110">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>internal::Swap(ownAllocator_,<sp/>rhs.ownAllocator_);
                </highlight>
            </codeline>
            <codeline lineno="2111">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>internal::Swap(parseResult_,<sp/>rhs.parseResult_);
                </highlight>
            </codeline>
            <codeline lineno="2112">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2113">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2114">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2116"></codeline>
            <codeline lineno="2127" refid="class_generic_document_1a0d63efcc43758ac3aed77e868233369d" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_document_1a0d63efcc43758ac3aed77e868233369d" kindref="member">swap</ref>
                    (<ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>a,
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>b)<sp/>
                    RAPIDJSON_NOEXCEPT<sp/>{<sp/>a.Swap(b);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2128">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2130"></codeline>
            <codeline lineno="2134">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Generator&gt;
                </highlight>
            </codeline>
            <codeline lineno="2135" refid="class_generic_document_1a36fbc7d0a9595d26e0d2c8859d207d1f" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1a36fbc7d0a9595d26e0d2c8859d207d1f" kindref="member">
                        Populate</ref>(Generator&amp;<sp/>g)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2136">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ClearStackOnExit<sp/>scope(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="2137">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(g(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2138">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(stack_.GetSize()<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(ValueType));
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Got<sp/>one<sp/>and<sp/>only<sp/>one<sp/>root<sp/>object
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2139">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType::operator=(*stack_.template<sp/>Pop&lt;ValueType&gt;(1));
                </highlight>
                <highlight class="comment">//<sp/>Move<sp/>value<sp/>from<sp/>stack<sp/>to<sp/>document
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2140">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2141">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2142">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2143">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2146"></codeline>
            <codeline lineno="2148"></codeline>
            <codeline lineno="2154">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>InputStream&gt;
                </highlight>
            </codeline>
            <codeline lineno="2155" refid="class_generic_document_1afe94c0abc83a20f2d7dc1ba7677e6238" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1afe94c0abc83a20f2d7dc1ba7677e6238" kindref="member">
                        ParseStream</ref>(InputStream&amp;<sp/>is)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2156">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_reader" kindref="compound">GenericReader&lt;SourceEncoding, Encoding,
                        StackAllocator&gt;</ref>
                    <sp/>reader(
                </highlight>
            </codeline>
            <codeline lineno="2157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stack_.HasAllocator()<sp/>?<sp/>&amp;stack_.GetAllocator()<sp/>:<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="2158">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ClearStackOnExit<sp/>scope(*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="2159">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>parseResult_<sp/>=<sp/>reader.template<sp/>Parse&lt;parseFlags&gt;(is,<sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="2160">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(parseResult_)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2161">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(stack_.GetSize()<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(ValueType));
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Got<sp/>one<sp/>and<sp/>only<sp/>one<sp/>root<sp/>object
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2162">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType::operator=(*stack_.template<sp/>Pop&lt;ValueType&gt;(1));
                </highlight>
                <highlight class="comment">//<sp/>Move<sp/>value<sp/>from<sp/>stack<sp/>to<sp/>document
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2163">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2164">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2165">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2166">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2168"></codeline>
            <codeline lineno="2173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>InputStream&gt;
                </highlight>
            </codeline>
            <codeline lineno="2174" refid="class_generic_document_1a6e154066c6f5024b91aaab25e03700e3" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1a6e154066c6f5024b91aaab25e03700e3" kindref="member">
                        ParseStream</ref>(InputStream&amp;<sp/>is)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2175">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ParseStream&lt;parseFlags,<sp/>Encoding,<sp/>InputStream&gt;(is);
                </highlight>
            </codeline>
            <codeline lineno="2176">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2177">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2179"></codeline>
            <codeline lineno="2183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>InputStream&gt;
                </highlight>
            </codeline>
            <codeline lineno="2184" refid="class_generic_document_1abe07ededbe9aaceb0058e3d254892b71" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1abe07ededbe9aaceb0058e3d254892b71" kindref="member">
                        ParseStream</ref>(InputStream&amp;<sp/>is)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2185">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ParseStream&lt;kParseDefaultFlags,<sp/>Encoding,<sp/>InputStream&gt;(is);
                </highlight>
            </codeline>
            <codeline lineno="2186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2188"></codeline>
            <codeline lineno="2191"></codeline>
            <codeline lineno="2193"></codeline>
            <codeline lineno="2197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags&gt;
                </highlight>
            </codeline>
            <codeline lineno="2198" refid="class_generic_document_1a301f8f297a5a0da4b6be5459ad766f75" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1a301f8f297a5a0da4b6be5459ad766f75" kindref="member">
                        ParseInsitu</ref>(Ch*<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_insitu_string_stream" kindref="compound">GenericInsituStringStream&lt;Encoding&gt;</ref>
                    <sp/>s(str);
                </highlight>
            </codeline>
            <codeline lineno="2200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ParseStream&lt;parseFlags<sp/>|<sp/>kParseInsituFlag&gt;(s);
                </highlight>
            </codeline>
            <codeline lineno="2201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2202">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2204"></codeline>
            <codeline lineno="2207" refid="class_generic_document_1a81922881357539d5482d31aea14b5664" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1a81922881357539d5482d31aea14b5664" kindref="member">
                        ParseInsitu</ref>(Ch*<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2208">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ParseInsitu&lt;kParseDefaultFlags&gt;(str);
                </highlight>
            </codeline>
            <codeline lineno="2209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2211"></codeline>
            <codeline lineno="2214"></codeline>
            <codeline lineno="2216"></codeline>
            <codeline lineno="2220">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding&gt;
                </highlight>
            </codeline>
            <codeline lineno="2221" refid="class_generic_document_1aadee36db7064cc9894a75c848831cdae" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1aadee36db7064cc9894a75c848831cdae" kindref="member">Parse</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding::Ch*<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2222">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(!(parseFlags<sp/>&amp;
                    <sp/>
                    <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01"
                         kindref="member">kParseInsituFlag</ref>));
                </highlight>
            </codeline>
            <codeline lineno="2223">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_generic_string_stream" kindref="compound">GenericStringStream&lt;SourceEncoding&gt;</ref>
                    <sp/>s(str);
                </highlight>
            </codeline>
            <codeline lineno="2224">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ParseStream&lt;parseFlags,<sp/>SourceEncoding&gt;(s);
                </highlight>
            </codeline>
            <codeline lineno="2225">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2226">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2228"></codeline>
            <codeline lineno="2231">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags&gt;
                </highlight>
            </codeline>
            <codeline lineno="2232" refid="class_generic_document_1a5e377f840009b5cee6757be29525ce0b" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1a5e377f840009b5cee6757be29525ce0b" kindref="member">Parse</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2233">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Parse&lt;parseFlags,<sp/>Encoding&gt;(str);
                </highlight>
            </codeline>
            <codeline lineno="2234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2235">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2237"></codeline>
            <codeline lineno="2239" refid="class_generic_document_1a49ae6de6fd0bc820d9864a106c10b4da" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_document_1a49ae6de6fd0bc820d9864a106c10b4da" kindref="member">Parse</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2240">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Parse&lt;kParseDefaultFlags&gt;(str);
                </highlight>
            </codeline>
            <codeline lineno="2241">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2242">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2243">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding&gt;
                </highlight>
            </codeline>
            <codeline lineno="2244">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>Parse(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding::Ch*<sp/>str,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2245">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(!(parseFlags<sp/>&amp;
                    <sp/>
                    <ref refid="reader_8h_1ab7be7dabe6ffcba60fad441505583450a13188bd483b4df0b6582bebe2aeb5b01"
                         kindref="member">kParseInsituFlag</ref>));
                </highlight>
            </codeline>
            <codeline lineno="2246">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_memory_stream" kindref="compound">MemoryStream</ref>
                    <sp/>ms(static_cast&lt;const<sp/>char*&gt;(str),<sp/>length<sp/>*
                    <sp/>
                </highlight>
                <highlight class="keyword">sizeof</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding::Ch));
                </highlight>
            </codeline>
            <codeline lineno="2247">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_encoded_input_stream" kindref="compound">EncodedInputStream&lt;SourceEncoding,
                        MemoryStream&gt;</ref>
                    <sp/>is(ms);
                </highlight>
            </codeline>
            <codeline lineno="2248">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ParseStream&lt;parseFlags,<sp/>SourceEncoding&gt;(is);
                </highlight>
            </codeline>
            <codeline lineno="2249">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2250">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2251">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2252">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags&gt;
                </highlight>
            </codeline>
            <codeline lineno="2253">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>Parse(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2254">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Parse&lt;parseFlags,<sp/>Encoding&gt;(str,<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="2255">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2256">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2257">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>Parse(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>length)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2258">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Parse&lt;kParseDefaultFlags&gt;(str,<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="2259">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2260">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2261">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2262">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceEncoding&gt;
                </highlight>
            </codeline>
            <codeline lineno="2263">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>Parse(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;typename<sp/>SourceEncoding::Ch&gt;&amp;<sp/>str)
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2264">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>c_str()<sp/>is<sp/>constant<sp/>complexity<sp/>according<sp/>to<sp/>
                    standard.<sp/>Should<sp/>be<sp/>faster<sp/>than<sp/>Parse(const<sp/>char*,<sp/>size_t)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2265">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Parse&lt;parseFlags,<sp/>SourceEncoding&gt;(str.c_str());
                </highlight>
            </codeline>
            <codeline lineno="2266">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2267">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2268">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>parseFlags&gt;
                </highlight>
            </codeline>
            <codeline lineno="2269">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>Parse(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2270">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Parse&lt;parseFlags,<sp/>Encoding&gt;(str.c_str());
                </highlight>
            </codeline>
            <codeline lineno="2271">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2272">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2273">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>Parse(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>str)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2274">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>Parse&lt;kParseDefaultFlags&gt;(str);
                </highlight>
            </codeline>
            <codeline lineno="2275">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2276">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_HAS_STDSTRING
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2277">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2279"></codeline>
            <codeline lineno="2282"></codeline>
            <codeline lineno="2284" refid="class_generic_document_1a510a0588db4eb372f5d81bc3646578fb" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_document_1a510a0588db4eb372f5d81bc3646578fb" kindref="member">
                        HasParseError</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>parseResult_.IsError();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2285">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2287" refid="class_generic_document_1a9400a5bd3169cc6ed545e681ccc06070" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7"
                         kindref="member">ParseErrorCode
                    </ref>
                    <sp/>
                    <ref refid="class_generic_document_1a9400a5bd3169cc6ed545e681ccc06070" kindref="member">
                        GetParseError</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>parseResult_.Code();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2288">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2290" refid="class_generic_document_1ae1ef7ca99ced428e9300c68e5142afdb" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_document_1ae1ef7ca99ced428e9300c68e5142afdb" kindref="member">
                        GetErrorOffset</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>parseResult_.Offset();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2291">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2293">
                <highlight class="preprocessor">#ifndef<sp/>__clang<sp/>//<sp/>-Wdocumentation
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2294">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2303">
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2304" refid="class_generic_document_1af9bb8eade3eae0c039161378e8d2923a" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">operator</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_parse_result" kindref="compound">ParseResult</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>parseResult_;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2306"></codeline>
            <codeline lineno="2308" refid="class_generic_document_1aa4609d6b19f86aec1a6b96edf2c27686" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Allocator&amp;
                    <sp/>
                    <ref refid="class_generic_document_1aa4609d6b19f86aec1a6b96edf2c27686" kindref="member">
                        GetAllocator</ref>()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2309">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gabeba18d612187bad2ac62aed9276d47c"
                         kindref="member">RAPIDJSON_ASSERT</ref>(allocator_);
                </highlight>
            </codeline>
            <codeline lineno="2310">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*allocator_;
                </highlight>
            </codeline>
            <codeline lineno="2311">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2312">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2314" refid="class_generic_document_1a9e2e543c326b8b981d4f2c3d6793d15b" refkind="member">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_document_1a9e2e543c326b8b981d4f2c3d6793d15b" kindref="member">
                        GetStackCapacity</ref>()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>stack_.GetCapacity();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2315">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2316">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2317">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>clear<sp/>stack<sp/>on<sp/>any<sp/>exit<sp/>from<sp/>ParseStream,<sp/>
                    e.g.<sp/>due<sp/>to<sp/>exception
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2318">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">struct
                    <sp/>
                </highlight>
                <highlight class="normal">ClearStackOnExit<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2319">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">explicit</highlight>
                <highlight class="normal"><sp/>ClearStackOnExit(<ref refid="class_generic_document" kindref="compound">
                    GenericDocument</ref>&amp;<sp/>d)<sp/>:<sp/>d_(d)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="2320">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~ClearStackOnExit()<sp/>{<sp/>d_.ClearStack();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2321">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2322">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ClearStackOnExit(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ClearStackOnExit&amp;);
                </highlight>
            </codeline>
            <codeline lineno="2323">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ClearStackOnExit&amp;<sp/>operator=(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ClearStackOnExit&amp;);
                </highlight>
            </codeline>
            <codeline lineno="2324">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;<sp/>d_;
                </highlight>
            </codeline>
            <codeline lineno="2325">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>};
                </highlight>
            </codeline>
            <codeline lineno="2326">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2327">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>callers<sp/>of<sp/>the<sp/>following<sp/>private<sp/>Handler<sp/>
                    functions
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2328">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>template<sp/>&lt;typename,typename,typename&gt;<sp/>friend<sp/>class
                    <sp/>GenericReader;<sp/>//<sp/>for<sp/>parsing
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2329">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">&gt;
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>for<sp/>deep<sp/>copying
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2330">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2331">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2332">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Implementation<sp/>of<sp/>Handler
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2333">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Null()<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    ();
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2334">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Bool(
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>b)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (b);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2335">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (i);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2336">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal"><sp/>i)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (i);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2337">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Int64(int64_t<sp/>i)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (i);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2338">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Uint64(uint64_t<sp/>i)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (i);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2339">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Double(
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>d)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (d);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2340">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2341">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RawNumber(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy)<sp/>{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2342">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(copy)
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2343">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (str,<sp/>length,<sp/>GetAllocator());
                </highlight>
            </codeline>
            <codeline lineno="2344">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2345">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (str,<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="2346">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2347">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2348">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2349">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy)<sp/>{
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2350">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(copy)
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2351">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (str,<sp/>length,<sp/>GetAllocator());
                </highlight>
            </codeline>
            <codeline lineno="2352">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2353">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (str,<sp/>length);
                </highlight>
            </codeline>
            <codeline lineno="2354">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2355">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2356">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2357">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartObject()<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                          kindref="member">kObjectType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2358">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2359">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Key(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>str,
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>length,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>copy)<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_value_1_1_string" kindref="compound">String</ref>(str,<sp/>length,<sp/>
                    copy);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2360">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2361">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndObject(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>memberCount)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2362">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_member" kindref="compound">ValueType::Member</ref>*<sp/>members<sp/>=
                    <sp/>stack_.template<sp/>Pop&lt;typename<sp/>ValueType::Member&gt;(memberCount);
                </highlight>
            </codeline>
            <codeline lineno="2363">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stack_.template<sp/>Top&lt;ValueType&gt;()-&gt;<ref
                        refid="class_generic_value_1a26c8ec7d68858df1038506df7fcff22d" kindref="member">
                    SetObjectRaw</ref>(members,<sp/>memberCount,<sp/>GetAllocator());
                </highlight>
            </codeline>
            <codeline lineno="2364">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2365">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2366">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2367">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>StartArray()<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>(stack_.template<sp/>Push&lt;ValueType&gt;())
                    <sp/>
                    <ref refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>
                    (<ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                          kindref="member">kArrayType</ref>);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2368">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="2369">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EndArray(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>elementCount)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2370">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType*<sp/>elements<sp/>=<sp/>stack_.template<sp/>Pop&lt;ValueType&gt;(elementCount);
                </highlight>
            </codeline>
            <codeline lineno="2371">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stack_.template<sp/>Top&lt;ValueType&gt;()-&gt;SetArrayRaw(elements,<sp/>elementCount,<sp/>
                    GetAllocator());
                </highlight>
            </codeline>
            <codeline lineno="2372">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2373">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2374">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2375">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2377">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;);
                </highlight>
            </codeline>
            <codeline lineno="2379">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_value_1a9018a40d7c52efc00daf803c51d3236c" kindref="member">operator=</ref>
                    (
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument</ref>&amp;);
                </highlight>
            </codeline>
            <codeline lineno="2380">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2381">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>ClearStack()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2382">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(Allocator::kNeedFree)
                </highlight>
            </codeline>
            <codeline lineno="2383">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(stack_.GetSize()<sp/>&gt;<sp/>0)
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Here<sp/>assumes<sp/>all<sp/>elements<sp/>in<sp/>stack<sp/>array<sp/>
                    are<sp/>GenericValue<sp/>(Member<sp/>is<sp/>actually<sp/>2<sp/>GenericValue<sp/>objects)
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2384">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(stack_.template<sp/>Pop&lt;ValueType&gt;(1))-&gt;~<ref
                        refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>();
                </highlight>
            </codeline>
            <codeline lineno="2385">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2386">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stack_.Clear();
                </highlight>
            </codeline>
            <codeline lineno="2387">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>stack_.ShrinkToFit();
                </highlight>
            </codeline>
            <codeline lineno="2388">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2389">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2390">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Destroy()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2391">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a52c941c3fdd646527cdcd42aa846a28a" kindref="member">RAPIDJSON_DELETE</ref>
                    (ownAllocator_);
                </highlight>
            </codeline>
            <codeline lineno="2392">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2393">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2394">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">static</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">size_t</highlight>
                <highlight class="normal"><sp/>kDefaultStackCapacity<sp/>=<sp/>1024;
                </highlight>
            </codeline>
            <codeline lineno="2395">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Allocator*<sp/>allocator_;
                </highlight>
            </codeline>
            <codeline lineno="2396">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Allocator*<sp/>ownAllocator_;
                </highlight>
            </codeline>
            <codeline lineno="2397">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="classinternal_1_1_stack" kindref="compound">internal::Stack&lt;StackAllocator&gt;</ref>
                    <sp/>stack_;
                </highlight>
            </codeline>
            <codeline lineno="2398">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_parse_result" kindref="compound">ParseResult</ref>
                    <sp/>parseResult_;
                </highlight>
            </codeline>
            <codeline lineno="2399">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="2400">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2402" refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" refkind="member">
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">GenericDocument&lt;UTF8&lt;&gt;</ref>
                    <sp/>&gt;
                    <sp/>
                    <ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">Document</ref>;
                </highlight>
            </codeline>
            <codeline lineno="2403">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2404">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>defined<sp/>here<sp/>due<sp/>to<sp/>the<sp/>dependency<sp/>on<sp/>
                    GenericDocument
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2405">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Encoding,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>Allocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="2406">
                <highlight class="normal"></highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                </highlight>
            </codeline>
            <codeline lineno="2407">
                <highlight class="normal"></highlight>
                <highlight class="keyword">inline</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2408" refid="class_generic_value_1a5161c0c98ba9144c50a38acde28a5ede" refkind="member">
                <highlight class="normal"><ref refid="class_generic_value_1ab0205d57176d83814ea4e4598c596fe8"
                                               kindref="member">
                    GenericValue&lt;Encoding,Allocator&gt;::GenericValue</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">
                        GenericValue&lt;Encoding,SourceAllocator&gt;</ref>&amp;<sp/>rhs,<sp/>Allocator&amp;<sp/>
                    allocator)
                </highlight>
            </codeline>
            <codeline lineno="2409">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="2410">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal"><sp/>(rhs.GetType())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2411">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a146f46700e905e8df96a6a90b5c7640f"
                         kindref="member">kObjectType</ref>:
                </highlight>
            </codeline>
            <codeline lineno="2412">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7af41527d6925efa3c5c3dadb23dfef7c8"
                         kindref="member">kArrayType</ref>:<sp/>{
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>perform<sp/>deep<sp/>copy<sp/>via<sp/>SAX<sp/>Handler
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2413">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_document" kindref="compound">
                        GenericDocument&lt;Encoding,Allocator&gt;</ref>
                    <sp/>d(&amp;allocator);
                </highlight>
            </codeline>
            <codeline lineno="2414">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rhs.Accept(d);
                </highlight>
            </codeline>
            <codeline lineno="2415">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value_1abb8ea2dfbe74ff4ee7dac6be31317f81" kindref="member">RawAssign</ref>
                    (*d.stack_.template<sp/>Pop&lt;GenericValue&gt;(1));
                </highlight>
            </codeline>
            <codeline lineno="2416">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2418">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7a2d823b89b055bc743d05c03183d3f338"
                         kindref="member">kStringType</ref>:
                </highlight>
            </codeline>
            <codeline lineno="2419">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(rhs.data_.f.flags<sp/>==<sp/>kConstStringFlag)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2420">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>rhs.data_.f.flags;
                </highlight>
            </codeline>
            <codeline lineno="2421">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_
                    <sp/>
                    <sp/>=<sp/>*
                </highlight>
                <highlight class="keyword">reinterpret_cast&lt;</highlight>
                <highlight class="keyword">const
                    <sp/>
                </highlight>
                <highlight class="normal">Data*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(&amp;rhs.data_);</highlight>
            </codeline>
            <codeline lineno="2422">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2423">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_value_1a1451603922dcdf34976f125dc60f70ee" kindref="member">
                        SetStringRaw</ref>(<ref refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">
                    StringRef</ref>(rhs.GetString(),<sp/>rhs.GetStringLength()),<sp/>allocator);
                </highlight>
            </codeline>
            <codeline lineno="2424">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2425">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2426">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">default</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2427">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_.f.flags<sp/>=<sp/>rhs.data_.f.flags;
                </highlight>
            </codeline>
            <codeline lineno="2428">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>data_
                    <sp/>
                    <sp/>=<sp/>*
                </highlight>
                <highlight class="keyword">reinterpret_cast&lt;</highlight>
                <highlight class="keyword">const
                    <sp/>
                </highlight>
                <highlight class="normal">Data*</highlight>
                <highlight class="keyword">&gt;</highlight>
                <highlight class="normal">(&amp;rhs.data_);</highlight>
            </codeline>
            <codeline lineno="2429">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="2430">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2431">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="2432">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2434"></codeline>
            <codeline lineno="2438">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Const,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueT&gt;
                </highlight>
            </codeline>
            <codeline lineno="2439">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2440">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2441">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray&lt;true, ValueT&gt;</ref>
                    <sp/>ConstArray;
                </highlight>
            </codeline>
            <codeline lineno="2442">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray&lt;false, ValueT&gt;</ref>
                    <sp/>Array;
                </highlight>
            </codeline>
            <codeline lineno="2443">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>ValueT<sp/>PlainType;
                </highlight>
            </codeline>
            <codeline lineno="2444">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">
                        internal::MaybeAddConst&lt;Const,PlainType&gt;::Type
                    </ref>
                    <sp/>ValueType;
                </highlight>
            </codeline>
            <codeline lineno="2445">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>ValueType*<sp/>ValueIterator;
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>This<sp/>may<sp/>be<sp/>const<sp/>or<sp/>non-const<sp/>iterator
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2446">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>ValueT*<sp/>ConstValueIterator;
                </highlight>
            </codeline>
            <codeline lineno="2447">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" kindref="member">
                        ValueType::AllocatorType
                    </ref>
                    <sp/>AllocatorType;
                </highlight>
            </codeline>
            <codeline lineno="2448">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">ValueType::StringRefType</ref>
                    <sp/>StringRefType;
                </highlight>
            </codeline>
            <codeline lineno="2449">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2450">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">&gt;</highlight>
            </codeline>
            <codeline lineno="2451">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;
                </highlight>
            </codeline>
            <codeline lineno="2452">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2453">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>&amp;<sp/>rhs)<sp/>:<sp/>
                    value_(rhs.value_)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="2454">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_value_1a9018a40d7c52efc00daf803c51d3236c" kindref="member">operator=</ref>
                    (
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>&amp;<sp/>rhs)<sp/>{<sp/>
                    value_<sp/>=<sp/>rhs.value_;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2455">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~<ref refid="class_generic_array" kindref="compound">GenericArray</ref>()<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="2456">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2457">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>Size()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.Size();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2458">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>Capacity()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.Capacity();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2459">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Empty()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.Empty();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2460">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Clear()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.Clear();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2461">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType&amp;<sp/>operator[](
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>index)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_[index];<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2462">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>Begin()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.Begin();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2463">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>End()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.End();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2464">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>
                    <sp/>Reserve(
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>newCapacity,<sp/>AllocatorType<sp/>&amp;allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.Reserve(newCapacity,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2465">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>
                    <sp/>PushBack(ValueType&amp;
                    <sp/>
                    <ref refid="struct_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref>,
                    <sp/>AllocatorType&amp;<sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.PushBack(value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2466">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2467">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>
                    <sp/>PushBack(ValueType&amp;&amp;<sp/>value,<sp/>AllocatorType&amp;<sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.PushBack(value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2468">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2469">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>
                    <sp/>PushBack(StringRefType<sp/>value,<sp/>AllocatorType&amp;<sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.PushBack(value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2470">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                    <ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">
                        RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,
                    <sp/>
                    <ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>
                    <sp/>&gt;),<sp/>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>&amp;))<sp/>PushBack(T<sp/>
                    value,<sp/>AllocatorType&amp;<sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.PushBack(value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2471">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>
                    <sp/>PopBack()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.PopBack();
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2472">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>Erase(ConstValueIterator<sp/>pos)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.Erase(pos);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2473">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>Erase(ConstValueIterator<sp/>first,<sp/>ConstValueIterator<sp/>last)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.Erase(first,<sp/>last);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2474">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2475">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RANGE_FOR
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2476">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>begin()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.Begin();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2477">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueIterator<sp/>end()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.End();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2478">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2479">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2480">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2481">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>();
                </highlight>
            </codeline>
            <codeline lineno="2482">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_array" kindref="compound">GenericArray</ref>(ValueType&amp;<sp/>value)
                    <sp/>:<sp/>value_(value)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="2483">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType&amp;<sp/>value_;
                </highlight>
            </codeline>
            <codeline lineno="2484">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="2485">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2487"></codeline>
            <codeline lineno="2491">
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>Const,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>ValueT&gt;
                </highlight>
            </codeline>
            <codeline lineno="2492">
                <highlight class="normal"></highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal">
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="2493">
                <highlight class="normal"></highlight>
                <highlight class="keyword">public</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2494">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject&lt;true, ValueT&gt;</ref>
                    <sp/>ConstObject;
                </highlight>
            </codeline>
            <codeline lineno="2495">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject&lt;false, ValueT&gt;</ref>
                    <sp/>Object;
                </highlight>
            </codeline>
            <codeline lineno="2496">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal"><sp/>ValueT<sp/>PlainType;
                </highlight>
            </codeline>
            <codeline lineno="2497">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="rapidjson_8h_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">
                        internal::MaybeAddConst&lt;Const,PlainType&gt;::Type
                    </ref>
                    <sp/>ValueType;
                </highlight>
            </codeline>
            <codeline lineno="2498">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;Const,
                        typename ValueT::EncodingType, typename ValueT::AllocatorType&gt;</ref>
                    <sp/>MemberIterator;
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>This<sp/>may<sp/>be<sp/>const<sp/>or<sp/>non-const<sp/>iterator
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2499">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_member_iterator" kindref="compound">GenericMemberIterator&lt;true,
                        typename ValueT::EncodingType, typename ValueT::AllocatorType&gt;</ref>
                    <sp/>ConstMemberIterator;
                </highlight>
            </codeline>
            <codeline lineno="2500">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a7beb83860c1b8d2a0e2a7da9796b2fa1" kindref="member">
                        ValueType::AllocatorType
                    </ref>
                    <sp/>AllocatorType;
                </highlight>
            </codeline>
            <codeline lineno="2501">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="struct_generic_string_ref" kindref="compound">ValueType::StringRefType</ref>
                    <sp/>StringRefType;
                </highlight>
            </codeline>
            <codeline lineno="2502">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1a28c2cb8d04d12566c1af37597a46d209" kindref="member">
                        ValueType::EncodingType
                    </ref>
                    <sp/>EncodingType;
                </highlight>
            </codeline>
            <codeline lineno="2503">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">typedef</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value_1ade0e0ce64ccd5d852da57a35e720bafb" kindref="member">ValueType::Ch
                    </ref>
                    <sp/>Ch;
                </highlight>
            </codeline>
            <codeline lineno="2504">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2505">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">,
                    <sp/>
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal">&gt;</highlight>
            </codeline>
            <codeline lineno="2506">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">friend</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keyword">class
                    <sp/>
                </highlight>
                <highlight class="normal"><ref refid="class_generic_value" kindref="compound">GenericValue</ref>;
                </highlight>
            </codeline>
            <codeline lineno="2507">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2508">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>&amp;<sp/>rhs)<sp/>:<sp/>
                    value_(rhs.value_)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="2509">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>&amp;
                    <sp/>
                    <ref refid="class_generic_value_1a9018a40d7c52efc00daf803c51d3236c" kindref="member">operator=</ref>
                    (
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>&amp;<sp/>rhs)<sp/>{<sp/>
                    value_<sp/>=<sp/>rhs.value_;
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2510">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>~<ref refid="class_generic_object" kindref="compound">GenericObject</ref>()<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="2511">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2512">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="rapidjson_8h_1a5ed6e6e67250fadbd041127e6386dcb5" kindref="member">SizeType</ref>
                    <sp/>MemberCount()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.MemberCount();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2513">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>ObjectEmpty()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.ObjectEmpty();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2514">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;<sp/>ValueType&amp;<sp/>operator[](T*
                    <sp/>
                    <ref refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_[<ref
                        refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>];
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2515">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;<sp/>ValueType&amp;<sp/>operator[](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>
                    &amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_[<ref
                        refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>];
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2516">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2517">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType&amp;<sp/>operator[](
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_[<ref
                        refid="struct_generic_member_1a7124f7ccd67421533d33139938604fac" kindref="member">name</ref>];
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2518">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2519">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>MemberBegin()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.MemberBegin();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2520">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>MemberEnd()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.MemberEnd();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2521">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>HasMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.HasMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2522">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2523">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>HasMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.HasMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2524">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2525">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>HasMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>
                    &amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.HasMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2526">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>FindMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.FindMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2527">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;<sp/>MemberIterator<sp/>FindMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>
                    &amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.FindMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2528">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2529">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>FindMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.FindMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2530">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2531">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>AddMember(ValueType&amp;<sp/>name,<sp/>ValueType&amp;
                    <sp/>
                    <ref refid="struct_generic_member_1aad3cfa4f9e8b9018068c8bc865723083" kindref="member">value</ref>,
                    <sp/>AllocatorType&amp;<sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2532">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>AddMember(ValueType&amp;<sp/>name,<sp/>StringRefType<sp/>value,<sp/>AllocatorType&amp;<sp/>
                    allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2533">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2534">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>AddMember(ValueType&amp;<sp/>name,<sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>value,<sp/>
                    AllocatorType&amp;<sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2535">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2536">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                    <ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">
                        RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,
                    <sp/>
                    <ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>
                    <sp/>&gt;),<sp/>(ValueType&amp;))<sp/>AddMember(ValueType&amp;<sp/>name,<sp/>T<sp/>value,<sp/>
                    AllocatorType&amp;<sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2537">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2538">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>AddMember(ValueType&amp;&amp;<sp/>name,<sp/>ValueType&amp;&amp;<sp/>value,<sp/>AllocatorType&amp;
                    <sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2539">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>AddMember(ValueType&amp;&amp;<sp/>name,<sp/>ValueType&amp;<sp/>value,<sp/>AllocatorType&amp;
                    <sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2540">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>AddMember(ValueType&amp;<sp/>name,<sp/>ValueType&amp;&amp;<sp/>value,<sp/>AllocatorType&amp;
                    <sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2541">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>AddMember(StringRefType<sp/>name,<sp/>ValueType&amp;&amp;<sp/>value,<sp/>AllocatorType&amp;
                    <sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2542">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_HAS_CXX11_RVALUE_REFS
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2543">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>AddMember(StringRefType<sp/>name,<sp/>ValueType&amp;<sp/>value,<sp/>AllocatorType&amp;<sp/>
                    allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2544">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>
                    <sp/>AddMember(StringRefType<sp/>name,<sp/>StringRefType<sp/>value,<sp/>AllocatorType&amp;<sp/>
                    allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2545">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>T&gt;
                    <sp/>
                    <ref refid="class_generic_value_1a4a4418a93777942e1fb7ea71f8aaf680" kindref="member">
                        RAPIDJSON_DISABLEIF_RETURN</ref>((internal::OrExpr&lt;internal::IsPointer&lt;T&gt;,
                    <sp/>
                    <ref refid="structinternal_1_1_is_generic_value" kindref="compound">internal::IsGenericValue&lt;T&gt;</ref>
                    <sp/>&gt;),<sp/>(<ref refid="class_generic_object" kindref="compound">GenericObject</ref>))<sp/>
                    AddMember(StringRefType<sp/>name,<sp/>T<sp/>value,<sp/>AllocatorType&amp;<sp/>allocator)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{<sp/>value_.AddMember(name,<sp/>value,<sp/>allocator);
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>*
                </highlight>
                <highlight class="keyword">this</highlight>
                <highlight class="normal">;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2546">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>RemoveAllMembers()<sp/>{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.RemoveAllMembers();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2547">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RemoveMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.RemoveMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2548">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2549">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RemoveMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.RemoveMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2550">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2551">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>RemoveMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>
                    &amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.RemoveMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2552">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>RemoveMember(MemberIterator<sp/>m)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.RemoveMember(m);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2553">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>EraseMember(ConstMemberIterator<sp/>pos)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.EraseMember(pos);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2554">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>EraseMember(ConstMemberIterator<sp/>first,<sp/>ConstMemberIterator<sp/>last)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.EraseMember(first,<sp/>last);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2555">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EraseMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>Ch*<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.EraseMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2556">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_STDSTRING
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2557">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EraseMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal"><sp/>std::basic_string&lt;Ch&gt;&amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>EraseMember(<ref
                        refid="class_generic_value_1a43a39bb4fca9b9d3de3da6ac353d25ce" kindref="member">ValueType</ref>(<ref
                        refid="document_8h_1aa6b9fd9f6aa49405a574c362ba9af6b5" kindref="member">StringRef</ref>(name)));
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2558">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2559">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">template</highlight>
                <highlight class="normal"><sp/>&lt;
                </highlight>
                <highlight class="keyword">typename</highlight>
                <highlight class="normal"><sp/>SourceAllocator&gt;
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>EraseMember(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_generic_value" kindref="compound">GenericValue&lt;EncodingType, SourceAllocator&gt;</ref>
                    &amp;<sp/>name)
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.EraseMember(name);<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2560">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2561">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#if<sp/>RAPIDJSON_HAS_CXX11_RANGE_FOR
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2562">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>begin()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.MemberBegin();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2563">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>MemberIterator<sp/>end()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>value_.MemberEnd();<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="2564">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2565">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2566">
                <highlight class="normal"></highlight>
                <highlight class="keyword">private</highlight>
                <highlight class="normal">:</highlight>
            </codeline>
            <codeline lineno="2567">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>();
                </highlight>
            </codeline>
            <codeline lineno="2568">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_generic_object" kindref="compound">GenericObject</ref>(ValueType&amp;<sp/>value)
                    <sp/>:<sp/>value_(value)<sp/>{}
                </highlight>
            </codeline>
            <codeline lineno="2569">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ValueType&amp;<sp/>value_;
                </highlight>
            </codeline>
            <codeline lineno="2570">
                <highlight class="normal">};</highlight>
            </codeline>
            <codeline lineno="2571">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2572">
                <highlight class="normal">
                    <ref refid="group___r_a_p_i_d_j_s_o_n___c_o_n_f_i_g_1gaf18f052a98b9f5df5448d39484b743c1"
                         kindref="member">RAPIDJSON_NAMESPACE_END
                    </ref>
                </highlight>
            </codeline>
            <codeline lineno="2573">
                <highlight class="normal">RAPIDJSON_DIAG_POP</highlight>
            </codeline>
            <codeline lineno="2574">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2575">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#endif<sp/>//<sp/>RAPIDJSON_DOCUMENT_H_
                </highlight>
            </codeline>
        </programlisting>
        <location file="rapidjson/document.h"/>
    </compounddef>
</doxygen>
