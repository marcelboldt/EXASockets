<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="classrapidjson_1_1_stream" kind="class" language="C++" prot="public">
        <compoundname>rapidjson::Stream</compoundname>
        <includes refid="stream_8h" local="no">stream.h</includes>
        <briefdescription>
            <para>Concept for reading and writing characters.</para>
        </briefdescription>
        <detaileddescription>
            <para>For read-only stream, no need to implement PutBegin(), Put(), Flush() and PutEnd().</para>
            <para>For write-only stream, only need to implement Put() and Flush().</para>
            <para>
                <programlisting>
                    <codeline>
                        <highlight class="normal">concept<sp/>Stream<sp/>{
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>typename<sp/>Ch;
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!&lt;<sp/>Character<sp/>type<sp/>of<sp/>the<sp/>stream.
                        </highlight>
                    </codeline>
                    <codeline></codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>Read<sp/>the<sp/>current<sp/>character<sp/>from<sp/>stream<sp/>without<sp/>
                            moving<sp/>the<sp/>read<sp/>cursor.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>Ch<sp/>Peek()<sp/>const;
                        </highlight>
                    </codeline>
                    <codeline></codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>Read<sp/>the<sp/>current<sp/>character<sp/>from<sp/>stream<sp/>and<sp/>moving
                            <sp/>the<sp/>read<sp/>cursor<sp/>to<sp/>next<sp/>character.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>Ch<sp/>Take();
                        </highlight>
                    </codeline>
                    <codeline></codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>Get<sp/>the<sp/>current<sp/>read<sp/>cursor.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>\return<sp/>Number<sp/>of<sp/>characters<sp/>read<sp/>from<sp/>start.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>size_t<sp/>Tell();
                        </highlight>
                    </codeline>
                    <codeline></codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>Begin<sp/>writing<sp/>operation<sp/>at<sp/>the<sp/>current<sp/>read<sp/>
                            pointer.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>\return<sp/>The<sp/>begin<sp/>writer<sp/>pointer.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>Ch*<sp/>PutBegin();
                        </highlight>
                    </codeline>
                    <codeline></codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>Write<sp/>a<sp/>character.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>void<sp/>Put(Ch<sp/>c);
                        </highlight>
                    </codeline>
                    <codeline></codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>Flush<sp/>the<sp/>buffer.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>void<sp/>Flush();
                        </highlight>
                    </codeline>
                    <codeline></codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>End<sp/>the<sp/>writing<sp/>operation.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>\param<sp/>begin<sp/>The<sp/>begin<sp/>write<sp/>pointer<sp/>returned<sp/>by
                            <sp/>PutBegin().
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>//!<sp/>\return<sp/>Number<sp/>of<sp/>characters<sp/>written.
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>size_t<sp/>PutEnd(Ch*<sp/>begin);
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">}</highlight>
                    </codeline>
                </programlisting>
            </para>
        </detaileddescription>
        <location file="rapidjson/stream.h" line="27" column="1"/>
        <listofallmembers>
        </listofallmembers>
    </compounddef>
</doxygen>
