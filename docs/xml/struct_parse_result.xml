<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="struct_parse_result" kind="struct" language="C++" prot="public">
        <compoundname>ParseResult</compoundname>
        <includes refid="error_8h" local="no">error.h</includes>
        <sectiondef kind="private-attrib">
            <memberdef kind="variable" id="struct_parse_result_1aa30a53c4b7452efb82baf4767cda33fb" prot="private"
                       static="no" mutable="no">
                <type>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7"
                         kindref="member">ParseErrorCode
                    </ref>
                </type>
                <definition>ParseErrorCode ParseResult::code_</definition>
                <argsstring></argsstring>
                <name>code_</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="133" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="133" bodyend="-1"/>
            </memberdef>
            <memberdef kind="variable" id="struct_parse_result_1a4854b4b3210fd1bbc0f1457aa0d2b65a" prot="private"
                       static="no" mutable="no">
                <type>size_t</type>
                <definition>size_t ParseResult::offset_</definition>
                <argsstring></argsstring>
                <name>offset_</name>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="134" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="134" bodyend="-1"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="public-func">
            <memberdef kind="function" id="struct_parse_result_1acd4a266f815bec59fa27f64f1923fe9e" prot="public"
                       static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type></type>
                <definition>ParseResult::ParseResult</definition>
                <argsstring>()</argsstring>
                <name>ParseResult</name>
                <briefdescription>
                    <para>Default constructor, no error.</para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="109" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="109" bodyend="109"/>
            </memberdef>
            <memberdef kind="function" id="struct_parse_result_1a38ca49a53e80633d0864ad5026adaf84" prot="public"
                       static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type></type>
                <definition>ParseResult::ParseResult</definition>
                <argsstring>(ParseErrorCode code, size_t offset)</argsstring>
                <name>ParseResult</name>
                <param>
                    <type>
                        <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7"
                             kindref="member">ParseErrorCode
                        </ref>
                    </type>
                    <declname>code</declname>
                </param>
                <param>
                    <type>size_t</type>
                    <declname>offset</declname>
                </param>
                <briefdescription>
                    <para>Constructor to set an error.</para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="111" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="111" bodyend="111"/>
            </memberdef>
            <memberdef kind="function" id="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" prot="public"
                       static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type>
                    <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7"
                         kindref="member">ParseErrorCode
                    </ref>
                </type>
                <definition>ParseErrorCode ParseResult::Code</definition>
                <argsstring>() const</argsstring>
                <name>Code</name>
                <briefdescription>
                    <para>Get the error code.</para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="114" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="114" bodyend="114"/>
            </memberdef>
            <memberdef kind="function" id="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" prot="public"
                       static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type>size_t</type>
                <definition>size_t ParseResult::Offset</definition>
                <argsstring>() const</argsstring>
                <name>Offset</name>
                <briefdescription>
                    <para>Get the error offset, if <ref refid="struct_parse_result_1adfe0ef5b994e82f8aa9ebf0b30c924b1"
                                                        kindref="member">IsError()</ref>, 0 otherwise.
                    </para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="116" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="116" bodyend="116"/>
            </memberdef>
            <memberdef kind="function" id="struct_parse_result_1a4cec9590497f982dec42e9f0763d5d73" prot="public"
                       static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type></type>
                <definition>ParseResult::operator bool</definition>
                <argsstring>() const</argsstring>
                <name>operator bool</name>
                <briefdescription>
                    <para>Conversion to <computeroutput>bool</computeroutput>, returns <computeroutput>
                        true</computeroutput>, iff !<ref refid="struct_parse_result_1adfe0ef5b994e82f8aa9ebf0b30c924b1"
                                                         kindref="member">IsError()</ref>.
                    </para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="119" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="119" bodyend="119"/>
            </memberdef>
            <memberdef kind="function" id="struct_parse_result_1adfe0ef5b994e82f8aa9ebf0b30c924b1" prot="public"
                       static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool ParseResult::IsError</definition>
                <argsstring>() const</argsstring>
                <name>IsError</name>
                <briefdescription>
                    <para>Whether the result is an error.</para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="121" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="121" bodyend="121"/>
            </memberdef>
            <memberdef kind="function" id="struct_parse_result_1a4d98465a5dc6055e367a7ea7089fc73d" prot="public"
                       static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool ParseResult::operator==</definition>
                <argsstring>(const ParseResult &amp;that) const</argsstring>
                <name>operator==</name>
                <param>
                    <type>const <ref refid="struct_parse_result" kindref="compound">ParseResult</ref> &amp;
                    </type>
                    <declname>that</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="123" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="123" bodyend="123"/>
            </memberdef>
            <memberdef kind="function" id="struct_parse_result_1a6de18a7e43013b2defc51d892c2cf90f" prot="public"
                       static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
                <type>bool</type>
                <definition>bool ParseResult::operator==</definition>
                <argsstring>(ParseErrorCode code) const</argsstring>
                <name>operator==</name>
                <param>
                    <type>
                        <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7"
                             kindref="member">ParseErrorCode
                        </ref>
                    </type>
                    <declname>code</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="124" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="124" bodyend="124"/>
            </memberdef>
            <memberdef kind="function" id="struct_parse_result_1a88b6d44f052a19e6436ae6aadc2c40b4" prot="public"
                       static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void ParseResult::Clear</definition>
                <argsstring>()</argsstring>
                <name>Clear</name>
                <briefdescription>
                    <para>Reset error code.</para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="128" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="128" bodyend="128"/>
            </memberdef>
            <memberdef kind="function" id="struct_parse_result_1aa81b4a7b776b77216cb752385203a8c1" prot="public"
                       static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>void</type>
                <definition>void ParseResult::Set</definition>
                <argsstring>(ParseErrorCode code, size_t offset=0)</argsstring>
                <name>Set</name>
                <param>
                    <type>
                        <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7"
                             kindref="member">ParseErrorCode
                        </ref>
                    </type>
                    <declname>code</declname>
                </param>
                <param>
                    <type>size_t</type>
                    <declname>offset</declname>
                    <defval>0</defval>
                </param>
                <briefdescription>
                    <para>Update error code and offset.</para>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="130" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="130" bodyend="130"/>
            </memberdef>
        </sectiondef>
        <sectiondef kind="friend">
            <memberdef kind="friend" id="struct_parse_result_1a58c9982e833d1c74686506ac7449200c" prot="public"
                       static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
                <type>friend bool</type>
                <definition>bool operator==</definition>
                <argsstring>(ParseErrorCode code, const ParseResult &amp;err)</argsstring>
                <name>operator==</name>
                <param>
                    <type>
                        <ref refid="group___r_a_p_i_d_j_s_o_n___e_r_r_o_r_s_1ga8d4b32dfc45840bca189ade2bbcb6ba7"
                             kindref="member">ParseErrorCode
                        </ref>
                    </type>
                    <declname>code</declname>
                </param>
                <param>
                    <type>const <ref refid="struct_parse_result" kindref="compound">ParseResult</ref> &amp;
                    </type>
                    <declname>err</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="rapidjson/error/error.h" line="125" column="1" bodyfile="rapidjson/error/error.h"
                          bodystart="125" bodyend="125"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
            <para>Result of parsing (wraps ParseErrorCode)</para>
        </briefdescription>
        <detaileddescription>
            <para>
                <programlisting>
                    <codeline>
                        <highlight class="normal">Document<sp/>doc;
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">ParseResult<sp/>ok<sp/>=<sp/>doc.Parse(&quot;[42]&quot;);
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">if<sp/>(!ok)<sp/>{
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>fprintf(stderr,<sp/>&quot;JSON<sp/>parse<sp/>error:<sp/>%s<sp/>(%u)&quot;,
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>GetParseError_En(ok.Code()),<sp/>ok.Offset());
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">
                            <sp/>
                            <sp/>
                            <sp/>
                            <sp/>exit(EXIT_FAILURE);
                        </highlight>
                    </codeline>
                    <codeline>
                        <highlight class="normal">}</highlight>
                    </codeline>
                </programlisting>
                <simplesect kind="see">
                    <para><ref refid="class_generic_reader_1a0c450620d14ff1824e58bb7bd9b42099" kindref="member">
                        GenericReader::Parse</ref>, <ref
                            refid="class_generic_document_1aadee36db7064cc9894a75c848831cdae" kindref="member">
                        GenericDocument::Parse
                    </ref>
                    </para>
                </simplesect>
            </para>
        </detaileddescription>
        <location file="rapidjson/error/error.h" line="106" column="1" bodyfile="rapidjson/error/error.h"
                  bodystart="106" bodyend="135"/>
        <listofallmembers>
            <member refid="struct_parse_result_1a88b6d44f052a19e6436ae6aadc2c40b4" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>Clear</name>
            </member>
            <member refid="struct_parse_result_1a2aae3c2f42b31cc2409ee1e03bc4852e" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>Code</name>
            </member>
            <member refid="struct_parse_result_1aa30a53c4b7452efb82baf4767cda33fb" prot="private" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>code_</name>
            </member>
            <member refid="struct_parse_result_1adfe0ef5b994e82f8aa9ebf0b30c924b1" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>IsError</name>
            </member>
            <member refid="struct_parse_result_1afbe762766ac21b2aae266105f1dfa643" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>Offset</name>
            </member>
            <member refid="struct_parse_result_1a4854b4b3210fd1bbc0f1457aa0d2b65a" prot="private" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>offset_</name>
            </member>
            <member refid="struct_parse_result_1a4cec9590497f982dec42e9f0763d5d73" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>operator bool</name>
            </member>
            <member refid="struct_parse_result_1a4d98465a5dc6055e367a7ea7089fc73d" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>operator==</name>
            </member>
            <member refid="struct_parse_result_1a6de18a7e43013b2defc51d892c2cf90f" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>operator==</name>
            </member>
            <member refid="struct_parse_result_1a58c9982e833d1c74686506ac7449200c" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>operator==</name>
            </member>
            <member refid="struct_parse_result_1acd4a266f815bec59fa27f64f1923fe9e" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>ParseResult</name>
            </member>
            <member refid="struct_parse_result_1a38ca49a53e80633d0864ad5026adaf84" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>ParseResult</name>
            </member>
            <member refid="struct_parse_result_1aa81b4a7b776b77216cb752385203a8c1" prot="public" virt="non-virtual">
                <scope>ParseResult</scope>
                <name>Set</name>
            </member>
        </listofallmembers>
    </compounddef>
</doxygen>
