<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.12">
    <compounddef id="exasockets_8cpp" kind="file" language="C++">
        <compoundname>exasockets.cpp</compoundname>
        <includes refid="exasockets_8h" local="yes">exasockets.h</includes>
        <includes local="no">stdio.h</includes>
        <includes local="no">iostream</includes>
        <includes local="no">fstream</includes>
        <includes local="no">sys/socket.h</includes>
        <includes local="no">arpa/inet.h</includes>
        <includes local="no">errno.h</includes>
        <includes local="no">thread</includes>
        <includes local="no">ctime</includes>
        <includes local="no">chrono</includes>
        <includes local="no">string.h</includes>
        <includes local="no">sstream</includes>
        <includes local="no">vector</includes>
        <includes local="no">memory</includes>
        <includes local="yes">D:/Clion-projects/sockets/base64/base64.h</includes>
        <includes local="no">string</includes>
        <incdepgraph>
            <node id="38">
                <label>internal/strfunc.h</label>
                <link refid="strfunc_8h_source"/>
                <childnode refid="24" relation="include">
                </childnode>
            </node>
            <node id="55">
                <label>arpa/inet.h</label>
            </node>
            <node id="36">
                <label>limits</label>
            </node>
            <node id="40">
                <label>iterator</label>
            </node>
            <node id="44">
                <label>stringbuffer.h</label>
                <link refid="stringbuffer_8h_source"/>
                <childnode refid="24" relation="include">
                </childnode>
                <childnode refid="29" relation="include">
                </childnode>
            </node>
            <node id="46">
                <label>openssl/pem.h</label>
            </node>
            <node id="43">
                <label>itoa.h</label>
                <link refid="itoa_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="37">
                <label>error/error.h</label>
                <link refid="error_8h"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="56">
                <label>errno.h</label>
            </node>
            <node id="23">
                <label>cassert</label>
            </node>
            <node id="16">
                <label>osname.h</label>
                <link refid="osname_8h_source"/>
            </node>
            <node id="30">
                <label>swap.h</label>
                <link refid="swap_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="65">
                <label>string</label>
            </node>
            <node id="47">
                <label>openssl/rsa.h</label>
            </node>
            <node id="25">
                <label>encodings.h</label>
                <link refid="encodings_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="35">
                <label>pow10.h</label>
                <link refid="pow10_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="53">
                <label>fstream</label>
            </node>
            <node id="34">
                <label>diyfp.h</label>
                <link refid="diyfp_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="33">
                <label>biginteger.h</label>
                <link refid="biginteger_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="51">
                <label>limits.h</label>
            </node>
            <node id="64">
                <label>D:/Clion-projects/sockets/base64/base64.h</label>
            </node>
            <node id="41">
                <label>../rapidjson/writer.h</label>
                <link refid="writer_8h_source"/>
                <childnode refid="24" relation="include">
                </childnode>
                <childnode refid="29" relation="include">
                </childnode>
                <childnode refid="38" relation="include">
                </childnode>
                <childnode refid="42" relation="include">
                </childnode>
                <childnode refid="43" relation="include">
                </childnode>
                <childnode refid="44" relation="include">
                </childnode>
                <childnode refid="39" relation="include">
                </childnode>
            </node>
            <node id="48">
                <label>openssl/bio.h</label>
            </node>
            <node id="18">
                <label>reader.h</label>
                <link refid="reader_8h"/>
                <childnode refid="19" relation="include">
                </childnode>
                <childnode refid="24" relation="include">
                </childnode>
                <childnode refid="26" relation="include">
                </childnode>
                <childnode refid="28" relation="include">
                </childnode>
                <childnode refid="29" relation="include">
                </childnode>
                <childnode refid="31" relation="include">
                </childnode>
                <childnode refid="36" relation="include">
                </childnode>
                <childnode refid="37" relation="include">
                </childnode>
            </node>
            <node id="49">
                <label>openssl/err.h</label>
            </node>
            <node id="15">
                <label>../../sockets/websockets/websockets.h</label>
            </node>
            <node id="24">
                <label>stream.h</label>
                <link refid="stream_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
                <childnode refid="25" relation="include">
                </childnode>
            </node>
            <node id="60">
                <label>string.h</label>
            </node>
            <node id="20">
                <label>rapidjson.h</label>
                <link refid="rapidjson_8h"/>
                <childnode refid="21" relation="include">
                </childnode>
                <childnode refid="22" relation="include">
                </childnode>
                <childnode refid="23" relation="include">
                </childnode>
            </node>
            <node id="26">
                <label>encodedstream.h</label>
                <link refid="encodedstream_8h_source"/>
                <childnode refid="24" relation="include">
                </childnode>
                <childnode refid="27" relation="include">
                </childnode>
            </node>
            <node id="58">
                <label>ctime</label>
            </node>
            <node id="42">
                <label>internal/dtoa.h</label>
                <link refid="dtoa_8h_source"/>
                <childnode refid="43" relation="include">
                </childnode>
                <childnode refid="34" relation="include">
                </childnode>
                <childnode refid="32" relation="include">
                </childnode>
            </node>
            <node id="50">
                <label>unistd.h</label>
            </node>
            <node id="32">
                <label>ieee754.h</label>
                <link refid="ieee754_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="29">
                <label>internal/stack.h</label>
                <link refid="stack_8h_source"/>
                <childnode refid="19" relation="include">
                </childnode>
                <childnode refid="30" relation="include">
                </childnode>
            </node>
            <node id="62">
                <label>vector</label>
            </node>
            <node id="39">
                <label>new</label>
            </node>
            <node id="61">
                <label>sstream</label>
            </node>
            <node id="21">
                <label>cstdlib</label>
            </node>
            <node id="14">
                <label>exasockets.h</label>
                <link refid="exasockets_8h_source"/>
                <childnode refid="15" relation="include">
                </childnode>
                <childnode refid="16" relation="include">
                </childnode>
                <childnode refid="17" relation="include">
                </childnode>
                <childnode refid="41" relation="include">
                </childnode>
                <childnode refid="44" relation="include">
                </childnode>
                <childnode refid="45" relation="include">
                </childnode>
                <childnode refid="46" relation="include">
                </childnode>
                <childnode refid="47" relation="include">
                </childnode>
                <childnode refid="48" relation="include">
                </childnode>
                <childnode refid="49" relation="include">
                </childnode>
                <childnode refid="50" relation="include">
                </childnode>
                <childnode refid="51" relation="include">
                </childnode>
            </node>
            <node id="28">
                <label>internal/meta.h</label>
                <link refid="meta_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="45">
                <label>iostream</label>
            </node>
            <node id="27">
                <label>memorystream.h</label>
                <link refid="memorystream_8h_source"/>
                <childnode refid="24" relation="include">
                </childnode>
            </node>
            <node id="19">
                <label>allocators.h</label>
                <link refid="allocators_8h_source"/>
                <childnode refid="20" relation="include">
                </childnode>
            </node>
            <node id="59">
                <label>chrono</label>
            </node>
            <node id="54">
                <label>sys/socket.h</label>
            </node>
            <node id="13">
                <label>exasockets/exasockets.cpp</label>
                <link refid="exasockets_8cpp"/>
                <childnode refid="14" relation="include">
                </childnode>
                <childnode refid="52" relation="include">
                </childnode>
                <childnode refid="45" relation="include">
                </childnode>
                <childnode refid="53" relation="include">
                </childnode>
                <childnode refid="54" relation="include">
                </childnode>
                <childnode refid="55" relation="include">
                </childnode>
                <childnode refid="56" relation="include">
                </childnode>
                <childnode refid="57" relation="include">
                </childnode>
                <childnode refid="58" relation="include">
                </childnode>
                <childnode refid="59" relation="include">
                </childnode>
                <childnode refid="60" relation="include">
                </childnode>
                <childnode refid="61" relation="include">
                </childnode>
                <childnode refid="62" relation="include">
                </childnode>
                <childnode refid="63" relation="include">
                </childnode>
                <childnode refid="64" relation="include">
                </childnode>
                <childnode refid="65" relation="include">
                </childnode>
            </node>
            <node id="57">
                <label>thread</label>
            </node>
            <node id="31">
                <label>internal/strtod.h</label>
                <link refid="strtod_8h_source"/>
                <childnode refid="32" relation="include">
                </childnode>
                <childnode refid="33" relation="include">
                </childnode>
                <childnode refid="34" relation="include">
                </childnode>
                <childnode refid="35" relation="include">
                </childnode>
            </node>
            <node id="52">
                <label>stdio.h</label>
            </node>
            <node id="22">
                <label>cstring</label>
            </node>
            <node id="63">
                <label>memory</label>
            </node>
            <node id="17">
                <label>../rapidjson/document.h</label>
                <link refid="document_8h"/>
                <childnode refid="18" relation="include">
                </childnode>
                <childnode refid="28" relation="include">
                </childnode>
                <childnode refid="38" relation="include">
                </childnode>
                <childnode refid="27" relation="include">
                </childnode>
                <childnode refid="26" relation="include">
                </childnode>
                <childnode refid="39" relation="include">
                </childnode>
                <childnode refid="36" relation="include">
                </childnode>
                <childnode refid="40" relation="include">
                </childnode>
            </node>
        </incdepgraph>
        <sectiondef kind="func">
            <memberdef kind="function" id="exasockets_8cpp_1ad6be65ebbc56b3fe0bc3f1233c73754f" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>RSA *</type>
                <definition>RSA* createRSA</definition>
                <argsstring>(unsigned char *key, bool publ, int len=-1)</argsstring>
                <name>createRSA</name>
                <param>
                    <type>unsigned char *</type>
                    <declname>key</declname>
                </param>
                <param>
                    <type>bool</type>
                    <declname>publ</declname>
                </param>
                <param>
                    <type>int</type>
                    <declname>len</declname>
                    <defval>-1</defval>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="exasockets/exasockets.cpp" line="33" column="1" bodyfile="exasockets/exasockets.cpp"
                          bodystart="33" bodyend="53"/>
            </memberdef>
            <memberdef kind="function" id="exasockets_8cpp_1a3bb21686f45251f6606d925772d318dc" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void printLastError</definition>
                <argsstring>(char *msg)</argsstring>
                <name>printLastError</name>
                <param>
                    <type>char *</type>
                    <declname>msg</declname>
                </param>
                <briefdescription>
                </briefdescription>
                <detaileddescription>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="exasockets/exasockets.cpp" line="64" column="1" bodyfile="exasockets/exasockets.cpp"
                          bodystart="64" bodyend="70"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="comment">/*</highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="comment">websockets.cpp<sp/>and<sp/>websockets.h
                </highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="comment">http://www.github.com/marcelboldt/EXASockets</highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="comment"><sp/>The<sp/>MIT<sp/>License<sp/>(MIT)
                </highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="comment">Copyright<sp/>(C)<sp/>2016<sp/>Marcel<sp/>Boldt<sp/>/<sp/>EXASOL
                </highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to
                    <sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy
                </highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files
                    <sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal
                </highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>
                    without<sp/>limitation<sp/>the<sp/>rights
                </highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,
                    <sp/>sublicense,<sp/>and/or<sp/>sell
                </highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons
                    <sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is
                </highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>
                    conditions:
                </highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>
                    notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all
                </highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.
                </highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT
                    <sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR
                </highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>
                    WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,
                </highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.
                    <sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE
                </highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY
                    <sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER
                </highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT
                    <sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,
                </highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR
                    <sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE
                </highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="comment">SOFTWARE.</highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="comment">Marcel<sp/>Boldt<sp/>&lt;marcel.boldt@exasol.com&gt;
                </highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="comment">*/</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;exasockets.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal">RSA<sp/>*createRSA(
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*key,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>publ,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>len<sp/>=<sp/>-1)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>http://hayageek.com/rsa-encryption-decryption-openssl-c/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RSA<sp/>*rsa<sp/>=<sp/>NULL;
                </highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BIO<sp/>*keybio;
                </highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>keybio<sp/>=<sp/>BIO_new_mem_buf(key,<sp/>len);
                </highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(keybio<sp/>==<sp/>NULL)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//printf(<sp/>&quot;Failed<sp/>to<sp/>create<sp/>key<sp/>BIO&quot;);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>key<sp/>BIO&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(publ)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rsa<sp/>=<sp/>PEM_read_bio_RSAPublicKey(keybio,<sp/>&amp;rsa,<sp/>NULL,<sp/>NULL);
                </highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rsa<sp/>=<sp/>PEM_read_bio_RSAPrivateKey(keybio,<sp/>&amp;rsa,<sp/>NULL,<sp/>NULL);
                </highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(rsa<sp/>==<sp/>NULL)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//printf(&quot;Failed<sp/>to<sp/>create<sp/>RSA&quot;);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>RSA&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>rsa;
                </highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*</highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="comment">int<sp/>private_decrypt(unsigned<sp/>char<sp/>*<sp/>enc_data,int<sp/>
                    data_len,unsigned<sp/>char<sp/>*<sp/>key,<sp/>unsigned<sp/>char<sp/>*decrypted)
                </highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="comment">{
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>//<sp/>http://hayageek.com/rsa-encryption-decryption-openssl-c/
                </highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RSA<sp/>*<sp/>rsa<sp/>=<sp/>createRSA(key,false);
                </highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>int
                    <sp/>
                    <sp/>result<sp/>=<sp/>RSA_private_decrypt(data_len,enc_data,decrypted,rsa,RSA_PKCS1_PADDING);
                </highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>return<sp/>result;
                </highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="comment">}</highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="comment"><sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>printLastError(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*msg)<sp/>{
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>http://hayageek.com/rsa-encryption-decryption-openssl-c/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*err<sp/>=<sp/>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)<sp/>malloc(130);
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ERR_load_crypto_strings();
                </highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ERR_error_string(ERR_get_error(),<sp/>err);
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf(
                </highlight>
                <highlight class="stringliteral">&quot;%s<sp/>ERROR:<sp/>%s\n&quot;
                </highlight>
                <highlight class="normal">,<sp/>msg,<sp/>err);
                </highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>free(err);
                </highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal"><ref refid="classexasockets__connection_1af230009df6b6cc3cbc0e822a0a07b959"
                                               kindref="member">exasockets_connection::exasockets_connection</ref>(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*server,<sp/>uint16_t<sp/>port,
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*clientName,
                </highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*username,
                </highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*password,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>pwd_len,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>autocommit,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>use_compression,
                </highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>uint64_t<sp/>sessionId)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;status<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;logfile<sp/>=
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;exaloginjson.txt&quot;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*host<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">[HOST_NAME_MAX];</highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(gethostname(host,<sp/>HOST_NAME_MAX)<sp/>!=<sp/>0)<sp/>*host<sp/>=<sp/>
                    *clientName;
                </highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*driverName<sp/>=<sp/>DRV_NAME;
                </highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*clientOS<sp/>=<sp/>OS_NAME;
                </highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*clientOsUsername<sp/>=<sp/>getlogin();
                </highlight>
            </codeline>
            <codeline lineno="85">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(clientOsUsername<sp/>==
                    <sp/>
                </highlight>
                <highlight class="keyword">nullptr</highlight>
                <highlight class="normal">)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>clientOsUsername<sp/>=
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;unknown&quot;</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tfile.open(logfile,<sp/>std::ios::in);
                </highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ws_con<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal"><sp/>Websockets_connection(server,<sp/>port,<sp/>clientName);
                </highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!ws_con-&gt;connected())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;EXASOCKETS:<sp/>Websockets<sp/>connection<sp/>couldn&apos;t<sp/>
                    be<sp/>established.&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rapidjson::StringBuffer<sp/>s;
                </highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">rapidjson::Document
                    </ref>
                    <sp/>d;
                </highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rapidjson::Writer&lt;rapidjson::StringBuffer&gt;<sp/>writer(s);
                </highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Compose<sp/>LOGIN<sp/>REQUEST:
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.StartObject();
                </highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;command&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(
                </highlight>
                <highlight class="stringliteral">&quot;login&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;protocolVersion&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Int(1);
                </highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.EndObject();
                </highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ws_send_data(s.GetString(),<sp/>s.GetSize(),<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>get<sp/>LOGIN<sp/>RESPONSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>d.Parse(ws_receive_data());
                </highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!d.IsObject())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Response<sp/>parsing<sp/>failed.&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(d.HasMember(
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal"><sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;text&quot;</highlight>
                <highlight class="normal">].GetString();</highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>printf(&quot;PublicKeyExp:<sp/>%s\n&quot;,<sp/>d[&quot;responseData&quot;][&quot;publicKeyPem&quot;].GetString());
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*pubkey<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">[d[</highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;publicKeyPem&quot;</highlight>
                <highlight class="normal">].GetStringLength()<sp/>+<sp/>1];
                </highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>memcpy(pubkey,<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;publicKeyPem&quot;</highlight>
                <highlight class="normal">].GetString(),<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;publicKeyPem&quot;</highlight>
                <highlight class="normal">].GetStringLength());</highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>pubkey[d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;publicKeyPem&quot;</highlight>
                <highlight class="normal">].GetStringLength()<sp/>+<sp/>1]<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*pwd<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">[pwd_len];</highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>memcpy(pwd,<sp/>password,<sp/>pwd_len);
                </highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>printf(&quot;pwd:<sp/>%s\npubkey:<sp/>%s&quot;,<sp/>pwd,<sp/>pubkey);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>RSA<sp/>encrypt<sp/>user<sp/>password
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="133">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RSA<sp/>*rsa<sp/>=<sp/>createRSA(pubkey,
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>RSA<sp/>*<sp/>rsa<sp/>=<sp/>RSA_generate_key(<sp/>1024,<sp/>3,<sp/>0
                    <sp/>,<sp/>0<sp/>);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>PEM_write_RSAPublicKey(stdout,<sp/>rsa);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>enc_len<sp/>=<sp/>RSA_size(rsa);
                </highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*encrypted<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">[enc_len];</highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>srand(10);
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>initialize<sp/>random<sp/>seed:<sp/>*/
                </highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>TODO:<sp/>another<sp/>seed,<sp/>e.g.<sp/>std::srand(std::time(0));
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(RSA_public_encrypt(pwd_len,<sp/>pwd,<sp/>encrypted,<sp/>rsa,<sp/>
                    RSA_PKCS1_PADDING)<sp/>==<sp/>-1)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;RSA_public_encrypt<sp/>failed&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>printf(&quot;encrypted:<sp/>%s\n&quot;,<sp/>encrypted);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BIO<sp/>*b64<sp/>=<sp/>BIO_new((BIO_METHOD<sp/>*)<sp/>BIO_f_base64());
                </highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BIO_set_flags(b64,<sp/>BIO_FLAGS_BASE64_NO_NL);
                </highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BIO<sp/>*bmem<sp/>=<sp/>BIO_new(BIO_s_mem());
                </highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>b64<sp/>=<sp/>BIO_push(b64,<sp/>bmem);
                </highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BIO_write(b64,<sp/>encrypted,<sp/>enc_len);
                </highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BIO_flush(b64);
                </highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BUF_MEM<sp/>*bptr<sp/>=<sp/>NULL;
                </highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BIO_get_mem_ptr(b64,<sp/>&amp;bptr);
                </highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*encrypted_b64<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">[bptr-&gt;length];</highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>memcpy(encrypted_b64,<sp/>bptr-&gt;data,<sp/>bptr-&gt;length);
                </highlight>
            </codeline>
            <codeline lineno="159">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BIO_free(b64);
                </highlight>
            </codeline>
            <codeline lineno="160">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>BIO_free(bmem);
                </highlight>
            </codeline>
            <codeline lineno="161">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>RSA_free(rsa);
                </highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Build<sp/>and<sp/>send<sp/>the<sp/>request<sp/>JSON:
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="normal"></highlight>
                <highlight class="comment">/*</highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="comment">{</highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;username&quot;:<sp/>&lt;string&gt;,
                </highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;password&quot;:<sp/>&lt;string&gt;,
                </highlight>
            </codeline>
            <codeline lineno="169">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;useCompression&quot;:<sp/>&lt;boolean&gt;,
                </highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;sessionId&quot;:<sp/>&lt;number&gt;,
                </highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;clientName&quot;:<sp/>&lt;string&gt;,
                </highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;driverName&quot;:<sp/>&lt;string&gt;,
                </highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;clientOs&quot;:<sp/>&lt;string&gt;,
                </highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;clientOsUsername&quot;:<sp/>&lt;string&gt;,
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;clientLanguage&quot;:<sp/>&lt;string&gt;,
                </highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;clientVersion&quot;:<sp/>&lt;string&gt;,
                </highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;clientRuntime&quot;:<sp/>&lt;string&gt;,
                </highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;attributes&quot;:<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>//<sp/>as<sp/>defined<sp/>separately
                </highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="comment">}</highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="comment">*/</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>s.Clear();
                </highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Reset(s);
                </highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.StartObject();
                </highlight>
            </codeline>
            <codeline lineno="187">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;username&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(username);
                </highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;password&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="190">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String((
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*)<sp/>encrypted_b64);
                </highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="normal"></highlight>
                <highlight class="comment">//writer.String(&quot;test&quot;);</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;useCompression&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Bool(use_compression);
                </highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(sessionId<sp/>&gt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;sessionId&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Int(sessionId);
                </highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;clientName&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(clientName);
                </highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;driverName&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(driverName);
                </highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;clientOs&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(clientOS);
                </highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;clientOsUsername&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(clientOsUsername);
                </highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;clientLanguage&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(
                </highlight>
                <highlight class="stringliteral">&quot;English&quot;</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>TODO
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;clientVersion&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(
                </highlight>
                <highlight class="stringliteral">&quot;0.1&quot;</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>TODO
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;clientRuntime&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(
                </highlight>
                <highlight class="stringliteral">&quot;runtime&quot;</highlight>
                <highlight class="normal">);
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>TODO
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;attributes&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.StartObject();
                </highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;autocommit&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Bool(autocommit);
                </highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;compressionEnabled&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Bool(use_compression);
                </highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.EndObject();
                </highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.EndObject();
                </highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="222">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ws_send_data(s.GetString(),<sp/>s.GetSize(),<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="223">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="224">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="225">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>get<sp/>LOGIN<sp/>RESPONSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="226">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="227">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>d.Parse(ws_receive_data());
                </highlight>
            </codeline>
            <codeline lineno="228">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!d.IsObject())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="229">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Response<sp/>parsing<sp/>failed.&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="230">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(d.HasMember(
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="231">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal"><sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;text&quot;</highlight>
                <highlight class="normal">].GetString();</highlight>
            </codeline>
            <codeline lineno="232">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="233">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d.HasMember(
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="235">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;databaseName&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="236">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;identifierQuoteString&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="237">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;maxDataMessageSize&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="238">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;maxIdentifierLength&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="239">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;maxVarcharLength&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="240">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;productName&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="241">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;protocolVersion&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="242">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;releaseVersion&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="243">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;sessionId&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="244">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;timeZone&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="245">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">].HasMember(</highlight>
                <highlight class="stringliteral">&quot;timeZoneBehavior&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="246">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="247">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_databaseName<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;databaseName&quot;</highlight>
                <highlight class="normal">].GetString();</highlight>
            </codeline>
            <codeline lineno="248">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_identifierQuoteString<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;identifierQuoteString&quot;</highlight>
                <highlight class="normal">].GetString();</highlight>
            </codeline>
            <codeline lineno="249">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_maxDataMessageSize<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;maxDataMessageSize&quot;</highlight>
                <highlight class="normal">].GetInt();</highlight>
            </codeline>
            <codeline lineno="250">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_maxIdentifierLength<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;maxIdentifierLength&quot;</highlight>
                <highlight class="normal">].GetInt();</highlight>
            </codeline>
            <codeline lineno="251">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_maxVarcharLength<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;maxVarcharLength&quot;</highlight>
                <highlight class="normal">].GetInt();</highlight>
            </codeline>
            <codeline lineno="252">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_productName<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;productName&quot;</highlight>
                <highlight class="normal">].GetString();</highlight>
            </codeline>
            <codeline lineno="253">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_protocolVersion<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;protocolVersion&quot;</highlight>
                <highlight class="normal">].GetInt();</highlight>
            </codeline>
            <codeline lineno="254">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_releaseVersion<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;releaseVersion&quot;</highlight>
                <highlight class="normal">].GetString();</highlight>
            </codeline>
            <codeline lineno="255">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_session_id<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;sessionId&quot;</highlight>
                <highlight class="normal">].GetUint64();</highlight>
            </codeline>
            <codeline lineno="256">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_timezone<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;timeZone&quot;</highlight>
                <highlight class="normal">].GetString();</highlight>
            </codeline>
            <codeline lineno="257">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;c_timeZoneBehaviour<sp/>=<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;responseData&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;timeZoneBehavior&quot;</highlight>
                <highlight class="normal">].GetString();</highlight>
            </codeline>
            <codeline lineno="258">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="259">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;status<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">true</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="260">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="261">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="262">
                <highlight class="normal">exasockets_connection::~exasockets_connection()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="263">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(this-&gt;status)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="264">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="265">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rapidjson::StringBuffer<sp/>s;
                </highlight>
            </codeline>
            <codeline lineno="266">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">rapidjson::Document
                    </ref>
                    <sp/>d;
                </highlight>
            </codeline>
            <codeline lineno="267">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rapidjson::Writer&lt;rapidjson::StringBuffer&gt;<sp/>writer(s);
                </highlight>
            </codeline>
            <codeline lineno="268">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="269">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>Compose<sp/>LOGIN<sp/>REQUEST:
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="270">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="271">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.StartObject();
                </highlight>
            </codeline>
            <codeline lineno="272">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;command&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="273">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(
                </highlight>
                <highlight class="stringliteral">&quot;disconnect&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="274">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.EndObject();
                </highlight>
            </codeline>
            <codeline lineno="275">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="276">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>s.GetString()<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="277">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//ws_con-&gt;send_data(s.GetString(),s.GetSize(),<sp/>1);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="278">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ws_send_data(s.GetString(),<sp/>s.GetSize(),<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="279">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;status<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="280">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="281">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>get<sp/>LOGIN<sp/>RESPONSE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="282">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="283">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>d.Parse(ws_receive_data());
                </highlight>
            </codeline>
            <codeline lineno="284">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!d.IsObject())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="285">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Disconnect:<sp/>Response<sp/>parsing<sp/>failed.&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="286">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Disconnect:<sp/>Response<sp/>parsing
                    <sp/>failed.&quot;<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="287">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(d.HasMember(
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="288">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::cout<sp/>&lt;&lt;<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;text&quot;</highlight>
                <highlight class="normal">].GetString()<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
            </codeline>
            <codeline lineno="289">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="290">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::cout<sp/>&lt;&lt;<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;status&quot;</highlight>
                <highlight class="normal">].GetString()<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
            </codeline>
            <codeline lineno="291">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="292">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="293">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="294">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="295">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="296">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*exasockets_connection::ws_receive_data()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="297">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>reads<sp/>from<sp/>websocket<sp/>and<sp/>returns<sp/>the<sp/>data<sp/>
                    */
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="298">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="299">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>len<sp/>=<sp/>ws_con-&gt;receive_data(logfile);
                </highlight>
            </codeline>
            <codeline lineno="300">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*recv_line<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal">[len];</highlight>
            </codeline>
            <codeline lineno="301">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="302">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tfile.seekg(0,<sp/>std::ios::beg);
                </highlight>
            </codeline>
            <codeline lineno="303">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tfile.getline(recv_line,<sp/>len);
                </highlight>
            </codeline>
            <codeline lineno="304">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="305">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(this-&gt;json_debug_output)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="306">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::cout<sp/>&lt;&lt;
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;RECV:&quot;</highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>recv_line<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
            </codeline>
            <codeline lineno="307">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="308">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="309">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>recv_line;
                </highlight>
            </codeline>
            <codeline lineno="310">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="311">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="312">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exasockets_connection::ws_send_data(
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*data,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>len,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>type)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="313">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="314">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(this-&gt;json_debug_output)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="315">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(type<sp/>==<sp/>1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;SEND:<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>data<sp/>&lt;&lt;<sp/>std::endl;<sp/>}
                </highlight>
            </codeline>
            <codeline lineno="316">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(type<sp/>==<sp/>2)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="317">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::cout<sp/>&lt;&lt;
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;SEND:<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;binary<sp/>length:<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>len<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
            </codeline>
            <codeline lineno="318">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="319">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="320">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="321">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="322">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ws_con-&gt;send_data(data,<sp/>strlen(data),<sp/>type);
                </highlight>
            </codeline>
            <codeline lineno="323">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="324">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>ws_con-&gt;send_data(data,<sp/>len,<sp/>type);
                </highlight>
            </codeline>
            <codeline lineno="325">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="326">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="327">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="328">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="329">
                <highlight class="normal"></highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*exasockets_connection::databaseName()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="330">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_databaseName;
                </highlight>
            </codeline>
            <codeline lineno="331">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="332">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="333">
                <highlight class="normal"></highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*exasockets_connection::identifierQuoteString()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="334">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_identifierQuoteString;
                </highlight>
            </codeline>
            <codeline lineno="335">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="336">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="337">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exasockets_connection::maxDataMessageSize()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="338">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_maxDataMessageSize;
                </highlight>
            </codeline>
            <codeline lineno="339">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="340">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="341">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exasockets_connection::maxIdentifierLength()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="342">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_maxIdentifierLength;
                </highlight>
            </codeline>
            <codeline lineno="343">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="344">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="345">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exasockets_connection::maxVarcharLength()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="346">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_maxVarcharLength;
                </highlight>
            </codeline>
            <codeline lineno="347">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="348">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="349">
                <highlight class="normal"></highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*exasockets_connection::productName()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="350">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_productName;
                </highlight>
            </codeline>
            <codeline lineno="351">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="352">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="353">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exasockets_connection::protocolVersion()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="354">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_protocolVersion;
                </highlight>
            </codeline>
            <codeline lineno="355">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="356">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="357">
                <highlight class="normal"></highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*exasockets_connection::releaseVersion()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="358">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_releaseVersion;
                </highlight>
            </codeline>
            <codeline lineno="359">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="360">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="361">
                <highlight class="normal">uint64_t<sp/>exasockets_connection::session_id()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="362">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_session_id;
                </highlight>
            </codeline>
            <codeline lineno="363">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="364">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="365">
                <highlight class="normal"></highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*exasockets_connection::timezone()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="366">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_timezone;
                </highlight>
            </codeline>
            <codeline lineno="367">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="368">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="369">
                <highlight class="normal"></highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*exasockets_connection::timeZoneBehaviour()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="370">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>c_timeZoneBehaviour;
                </highlight>
            </codeline>
            <codeline lineno="371">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="372">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="373">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>exasockets_connection::isStatus()
                </highlight>
                <highlight class="keyword"><sp/>const
                    <sp/>
                </highlight>
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="374">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>status;
                </highlight>
            </codeline>
            <codeline lineno="375">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="376">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="377">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>exasockets_connection::update_session_attributes()<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="378">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Retrieves<sp/>the<sp/>session<sp/>attribute<sp/>values<sp/>from<sp/>DB
                    <sp/>and<sp/>updates<sp/>the<sp/>object&apos;s<sp/>metadata
                </highlight>
            </codeline>
            <codeline lineno="379">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*<sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="380">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="381">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*</highlight>
            </codeline>
            <codeline lineno="382">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="383">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;command&quot;:<sp/>&quot;getAttributes&quot;,
                </highlight>
            </codeline>
            <codeline lineno="384">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;attributes&quot;:<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="385">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>//<sp/>as<sp/>defined<sp/>separately
                </highlight>
            </codeline>
            <codeline lineno="386">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>},
                </highlight>
            </codeline>
            <codeline lineno="387">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="388">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="389">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="390">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rapidjson::StringBuffer<sp/>s;
                </highlight>
            </codeline>
            <codeline lineno="391">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="document_8h_1ac6ea5b168e3fe8c7fa532450fc9391f7" kindref="member">rapidjson::Document
                    </ref>
                    <sp/>d;
                </highlight>
            </codeline>
            <codeline lineno="392">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rapidjson::Writer&lt;rapidjson::StringBuffer&gt;<sp/>writer(s);
                </highlight>
            </codeline>
            <codeline lineno="393">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="394">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.StartObject();
                </highlight>
            </codeline>
            <codeline lineno="395">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;command&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="396">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(
                </highlight>
                <highlight class="stringliteral">&quot;getAttributes&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="397">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.EndObject();
                </highlight>
            </codeline>
            <codeline lineno="398">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="399">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ws_send_data(s.GetString(),<sp/>s.GetSize(),<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="400">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="401">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>d.Parse(ws_receive_data());
                </highlight>
            </codeline>
            <codeline lineno="402">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="403">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!d.IsObject())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="404">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;update_session_attributes:<sp/>Response<sp/>parsing<sp/>failed.&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="405">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;update_session_attribute:<sp/>
                    Response<sp/>parsing<sp/>failed.&quot;<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="406">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(d.HasMember(
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="407">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::cout<sp/>&lt;&lt;<sp/>d[
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;text&quot;</highlight>
                <highlight class="normal">].GetString()<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
            </codeline>
            <codeline lineno="408">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="409">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="410">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>TODO:<sp/>parse<sp/>parameters
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="411">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="412">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="413">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="414">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="415">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="416">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="classexasockets__connection_1a52f72bbfe4706a1b9c3c0bcf13f945ca" kindref="member">
                        exasockets_connection::exec_sql</ref>(
                </highlight>
                <highlight class="keywordtype">char</highlight>
                <highlight class="normal"><sp/>*sql)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="417">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">/*<sp/>Sends<sp/>an<sp/>SQL<sp/>stmt<sp/>and<sp/>fetches<sp/>the<sp/>result
                    <sp/>set.
                </highlight>
            </codeline>
            <codeline lineno="418">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*<sp/>If<sp/>a<sp/>result<sp/>set<sp/>handle<sp/>is<sp/>received<sp/>instead<sp/>of<sp/>data,
                    <sp/>then<sp/>this<sp/>is<sp/>returned<sp/>as<sp/>an<sp/>int.
                </highlight>
            </codeline>
            <codeline lineno="419">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*<sp/>Otherwise<sp/>0<sp/>is<sp/>returned<sp/>and<sp/>the<sp/>resultSet<sp/>is<sp/>stored<sp/>
                    inside<sp/>the<sp/>result<sp/>set.
                </highlight>
            </codeline>
            <codeline lineno="420">
                <highlight class="comment"></highlight>
            </codeline>
            <codeline lineno="421">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>/*
                </highlight>
            </codeline>
            <codeline lineno="422">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="423">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;command&quot;:<sp/>&quot;execute&quot;,
                </highlight>
            </codeline>
            <codeline lineno="424">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;attributes&quot;:<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="425">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>//<sp/>as<sp/>defined<sp/>separately
                </highlight>
            </codeline>
            <codeline lineno="426">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>},
                </highlight>
            </codeline>
            <codeline lineno="427">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>&quot;sqlText&quot;:<sp/>&lt;string&gt;
                </highlight>
            </codeline>
            <codeline lineno="428">
                <highlight class="comment"><sp/>}
                </highlight>
            </codeline>
            <codeline lineno="429">
                <highlight class="comment">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>*/
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="430">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="431">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rapidjson::StringBuffer<sp/>s;
                </highlight>
            </codeline>
            <codeline lineno="432">
                <highlight class="normal"></highlight>
                <highlight class="comment">//rapidjson::Document<sp/>d;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="433">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>rapidjson::Writer&lt;rapidjson::StringBuffer&gt;<sp/>writer(s);
                </highlight>
            </codeline>
            <codeline lineno="434">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="435">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.StartObject();
                </highlight>
            </codeline>
            <codeline lineno="436">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;command&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="437">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(
                </highlight>
                <highlight class="stringliteral">&quot;execute&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="438">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.Key(
                </highlight>
                <highlight class="stringliteral">&quot;sqlText&quot;</highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="439">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.String(sql);
                </highlight>
            </codeline>
            <codeline lineno="440">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>writer.EndObject();
                </highlight>
            </codeline>
            <codeline lineno="441">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="442">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>ws_send_data(s.GetString(),<sp/>s.GetSize(),<sp/>1);
                </highlight>
            </codeline>
            <codeline lineno="443">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="444">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>std::this_thread::sleep_for(std::chrono::milliseconds(3000));
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="445">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="446">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;resultSet.Parse(ws_receive_data());
                </highlight>
            </codeline>
            <codeline lineno="447">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="448">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!this-&gt;resultSet.IsObject())<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="449">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">throw</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;update_session_attributes:<sp/>Response<sp/>parsing<sp/>failed.&quot;
                </highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="450">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;update_session_attribute:<sp/>
                    Response<sp/>parsing<sp/>failed.&quot;<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="451">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(this-&gt;resultSet.HasMember(
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="452">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>std::cout<sp/>&lt;&lt;<sp/>this-&gt;resultSet[
                </highlight>
                <highlight class="stringliteral">&quot;exception&quot;</highlight>
                <highlight class="normal">][</highlight>
                <highlight class="stringliteral">&quot;text&quot;</highlight>
                <highlight class="normal">].GetString()<sp/>&lt;&lt;<sp/>std::endl;
                </highlight>
            </codeline>
            <codeline lineno="453">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="454">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(this-&gt;resultSet.HasMember(
                </highlight>
                <highlight class="stringliteral">&quot;results&quot;</highlight>
                <highlight class="normal">))<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="455">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">const</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="document_8h_1a071cf97155ba72ac9a1fc4ad7e63d481" kindref="member">rapidjson::Value</ref>
                    &amp;<sp/>results<sp/>=<sp/>this-&gt;resultSet[
                </highlight>
                <highlight class="stringliteral">&quot;results&quot;</highlight>
                <highlight class="normal">];</highlight>
            </codeline>
            <codeline lineno="456">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(results.IsArray());
                </highlight>
            </codeline>
            <codeline lineno="457">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>assert(results[1].HasMember(
                </highlight>
                <highlight class="stringliteral">&quot;resultSetHandle&quot;</highlight>
                <highlight class="normal">));</highlight>
            </codeline>
            <codeline lineno="458">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>results[1][
                </highlight>
                <highlight class="stringliteral">&quot;resultSetHandle&quot;</highlight>
                <highlight class="normal">].GetInt();</highlight>
            </codeline>
            <codeline lineno="459">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="460">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="461">
                <highlight class="normal"></highlight>
                <highlight class="comment">//<sp/>TODO:<sp/>parse<sp/>parameters
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="462">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="463">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="464">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="465">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="466">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="467">
                <highlight class="normal"></highlight>
            </codeline>
        </programlisting>
        <location file="exasockets/exasockets.cpp"/>
    </compounddef>
</doxygen>
