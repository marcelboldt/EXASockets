.TH "GenericObject< Const, ValueT >" 3 "Thu Nov 3 2016" "Version 0.9" "EXASockets" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GenericObject< Const, ValueT > \- Helper class for accessing Value of object type\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <document\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBGenericObject\fP< true, ValueT > \fBConstObject\fP"
.br
.ti -1c
.RI "typedef \fBGenericObject\fP< false, ValueT > \fBObject\fP"
.br
.ti -1c
.RI "typedef ValueT \fBPlainType\fP"
.br
.ti -1c
.RI "typedef internal::MaybeAddConst< Const, PlainType >::\fBType\fP \fBValueType\fP"
.br
.ti -1c
.RI "typedef \fBGenericMemberIterator\fP< Const, typename ValueT::EncodingType, typename ValueT::AllocatorType > \fBMemberIterator\fP"
.br
.ti -1c
.RI "typedef \fBGenericMemberIterator\fP< true, typename ValueT::EncodingType, typename ValueT::AllocatorType > \fBConstMemberIterator\fP"
.br
.ti -1c
.RI "typedef ValueType::AllocatorType \fBAllocatorType\fP"
.br
.ti -1c
.RI "typedef ValueType::StringRefType \fBStringRefType\fP"
.br
.ti -1c
.RI "typedef ValueType::EncodingType \fBEncodingType\fP"
.br
.ti -1c
.RI "typedef ValueType::Ch \fBCh\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGenericObject\fP (const \fBGenericObject\fP &rhs)"
.br
.ti -1c
.RI "\fBGenericObject\fP & \fBoperator=\fP (const \fBGenericObject\fP &rhs)"
.br
.ti -1c
.RI "\fBSizeType\fP \fBMemberCount\fP () const"
.br
.ti -1c
.RI "bool \fBObjectEmpty\fP () const"
.br
.ti -1c
.RI "template<typename T > ValueType & \fBoperator[]\fP (T *name) const"
.br
.ti -1c
.RI "template<typename SourceAllocator > ValueType & \fBoperator[]\fP (const \fBGenericValue\fP< EncodingType, SourceAllocator > &name) const"
.br
.ti -1c
.RI "\fBMemberIterator\fP \fBMemberBegin\fP () const"
.br
.ti -1c
.RI "\fBMemberIterator\fP \fBMemberEnd\fP () const"
.br
.ti -1c
.RI "bool \fBHasMember\fP (const Ch *name) const"
.br
.ti -1c
.RI "template<typename SourceAllocator > bool \fBHasMember\fP (const \fBGenericValue\fP< EncodingType, SourceAllocator > &name) const"
.br
.ti -1c
.RI "\fBMemberIterator\fP \fBFindMember\fP (const Ch *name) const"
.br
.ti -1c
.RI "template<typename SourceAllocator > \fBMemberIterator\fP \fBFindMember\fP (const \fBGenericValue\fP< EncodingType, SourceAllocator > &name) const"
.br
.ti -1c
.RI "\fBGenericObject\fP \fBAddMember\fP (ValueType &name, ValueType &value, AllocatorType &allocator) const"
.br
.ti -1c
.RI "\fBGenericObject\fP \fBAddMember\fP (ValueType &name, StringRefType value, AllocatorType &allocator) const"
.br
.ti -1c
.RI "template<typename T > \fBRAPIDJSON_DISABLEIF_RETURN\fP ((internal::OrExpr< internal::IsPointer< T >, \fBinternal::IsGenericValue\fP< T > >),(ValueType &)) AddMember(ValueType &name"
.br
.ti -1c
.RI "\fBGenericObject\fP \fBAddMember\fP (StringRefType name, ValueType &value, AllocatorType &allocator) const"
.br
.ti -1c
.RI "\fBGenericObject\fP \fBAddMember\fP (StringRefType name, StringRefType value, AllocatorType &allocator) const"
.br
.ti -1c
.RI "template<typename T > \fBRAPIDJSON_DISABLEIF_RETURN\fP ((internal::OrExpr< internal::IsPointer< T >, \fBinternal::IsGenericValue\fP< T > >),(\fBGenericObject\fP)) AddMember(StringRefType name"
.br
.ti -1c
.RI "void \fBRemoveAllMembers\fP ()"
.br
.ti -1c
.RI "bool \fBRemoveMember\fP (const Ch *name) const"
.br
.ti -1c
.RI "template<typename SourceAllocator > bool \fBRemoveMember\fP (const \fBGenericValue\fP< EncodingType, SourceAllocator > &name) const"
.br
.ti -1c
.RI "\fBMemberIterator\fP \fBRemoveMember\fP (\fBMemberIterator\fP m) const"
.br
.ti -1c
.RI "\fBMemberIterator\fP \fBEraseMember\fP (\fBConstMemberIterator\fP pos) const"
.br
.ti -1c
.RI "\fBMemberIterator\fP \fBEraseMember\fP (\fBConstMemberIterator\fP first, \fBConstMemberIterator\fP last) const"
.br
.ti -1c
.RI "bool \fBEraseMember\fP (const Ch *name) const"
.br
.ti -1c
.RI "template<typename SourceAllocator > bool \fBEraseMember\fP (const \fBGenericValue\fP< EncodingType, SourceAllocator > &name) const"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "T \fBvalue\fP"
.br
.ti -1c
.RI "T AllocatorType &allocator \fBconst\fP { value_\&.AddMember(name, value, allocator)"
.br
.ti -1c
.RI "return * \fBthis\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename , typename > class \fBGenericValue\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<bool Const, typename ValueT>
.br
class GenericObject< Const, ValueT >"
Helper class for accessing Value of object type\&. 

Instance of this helper class is obtained by \fCGenericValue::GetObject()\fP\&. In addition to all APIs for array type, it provides range-based for loop if \fCRAPIDJSON_HAS_CXX11_RANGE_FOR=1\fP\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for EXASockets from the source code\&.
